android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> a
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> a
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.e:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.f:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.g:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.h:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.i:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.k:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.m:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.n:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.o:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.p:
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.q:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.r:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> a
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    void checkStateLoss() -> q
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> a
    boolean execPendingActions() -> b
    void reportBackStackChanged() -> c
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> d
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> e
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> f
    void dispatchCreate() -> g
    void dispatchActivityCreated() -> h
    void dispatchStart() -> i
    void dispatchResume() -> j
    void dispatchPause() -> k
    void dispatchStop() -> l
    void dispatchReallyStop() -> m
    void dispatchDestroyView() -> n
    void dispatchDestroy() -> o
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> p
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> b
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.t:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.u:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.v:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.w:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.x:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.y:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    android.support.v4.app.Fragment mCurrentPrimaryItem -> c
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    long getItemId(int) -> b
    java.lang.String makeFragmentName(int,long) -> a
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.z:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.aa:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.ab:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.ac:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.ad:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ae:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.af:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ag:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.ah:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ai:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.aj:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ak:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.al:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.am:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.Loader -> android.support.v4.a.c:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.d:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.e:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.f:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.g:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.h:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.i:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.k:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.m:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.c.f:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int safeSizeOf(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> b
    void evictAll() -> a
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.c.g:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.h:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.j:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.k:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.l:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.m:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.n:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void gc() -> d
    void put(int,java.lang.Object) -> b
    int size() -> b
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.c.o:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> c
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.as:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.au:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.av:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aw:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ax:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ay:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.az:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ba:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.be:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> X
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Y
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> Z
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> aa
    int mDrawingOrder -> ab
    java.util.ArrayList mDrawingOrderedChildren -> ac
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ad
    java.lang.Runnable mEndScrollRunnable -> ae
    int mScrollState -> af
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bf:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bg:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bh:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bi:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bj:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bk:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bl:
    android.support.v4.view.ViewPager this$0 -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bm:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bn:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bo:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bp:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.br:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
cn.com.hoonsoft.Launcher -> cn.com.hoonsoft.Launcher:
    void onCreate(android.os.Bundle) -> onCreate
    void skip() -> a
    void access$0(cn.com.hoonsoft.Launcher) -> a
cn.com.hoonsoft.Launcher$1 -> cn.com.hoonsoft.a:
    cn.com.hoonsoft.Launcher this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.com.hoonsoft.R -> cn.com.hoonsoft.b:
cn.com.hoonsoft.R$styleable -> cn.com.hoonsoft.c:
    int[] PullToRefresh -> PullToRefresh
    int PullToRefresh_mode_list -> PullToRefresh_mode_list
    int[] RoundProgressBar -> RoundProgressBar
    int RoundProgressBar_max -> RoundProgressBar_max
    int RoundProgressBar_roundColor -> RoundProgressBar_roundColor
    int RoundProgressBar_roundProgressColor -> RoundProgressBar_roundProgressColor
    int RoundProgressBar_roundWidth -> RoundProgressBar_roundWidth
    int RoundProgressBar_style -> RoundProgressBar_style
    int RoundProgressBar_textColor -> RoundProgressBar_textColor
    int RoundProgressBar_textIsDisplayable -> RoundProgressBar_textIsDisplayable
    int RoundProgressBar_textSize -> RoundProgressBar_textSize
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
    int[] TextView -> TextView
    int TextView_value -> TextView_value
cn.com.hoonsoft.base.BaseIocActivity -> cn.com.hoonsoft.a.a:
cn.com.hoonsoft.dto.DTO -> cn.com.hoonsoft.b.a:
    boolean readonly -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
cn.com.hoonsoft.example.SampleListActivity -> cn.com.hoonsoft.example.SampleListActivity:
    java.lang.String[] items -> a
    android.widget.AdapterView$OnItemClickListener listener -> b
    void onCreate(android.os.Bundle) -> onCreate
cn.com.hoonsoft.example.SampleListActivity$1 -> cn.com.hoonsoft.example.a:
    cn.com.hoonsoft.example.SampleListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.com.hoonsoft.example.camera.CameraDemoActivity -> cn.com.hoonsoft.example.camera.CameraDemoActivity:
    android.view.SurfaceView surfaceView -> c
    android.view.SurfaceHolder surfaceHolder -> d
    android.hardware.Camera camera -> e
    java.io.File picture -> f
    android.widget.Button btnSave -> g
    android.widget.ImageView open_picIcon -> h
    android.hardware.Camera$PictureCallback pictureCallback -> a
    android.view.SurfaceHolder$Callback surfaceCallback -> b
    void onCreate(android.os.Bundle) -> onCreate
    void setupViews() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void takePic() -> b
    android.graphics.Bitmap getDiskBitmap(java.lang.String) -> a
    void access$0(cn.com.hoonsoft.example.camera.CameraDemoActivity,android.hardware.Camera) -> a
    android.hardware.Camera access$1(cn.com.hoonsoft.example.camera.CameraDemoActivity) -> a
    void access$2(cn.com.hoonsoft.example.camera.CameraDemoActivity,java.io.File) -> a
    java.io.File access$3(cn.com.hoonsoft.example.camera.CameraDemoActivity) -> b
    android.graphics.Bitmap access$4(cn.com.hoonsoft.example.camera.CameraDemoActivity,java.lang.String) -> a
    android.view.SurfaceView access$5(cn.com.hoonsoft.example.camera.CameraDemoActivity) -> c
    android.widget.ImageView access$6(cn.com.hoonsoft.example.camera.CameraDemoActivity) -> d
    void access$7(cn.com.hoonsoft.example.camera.CameraDemoActivity) -> e
cn.com.hoonsoft.example.camera.CameraDemoActivity$1 -> cn.com.hoonsoft.example.camera.a:
    cn.com.hoonsoft.example.camera.CameraDemoActivity this$0 -> a
    void onPictureTaken(byte[],android.hardware.Camera) -> onPictureTaken
cn.com.hoonsoft.example.camera.CameraDemoActivity$2 -> cn.com.hoonsoft.example.camera.b:
    cn.com.hoonsoft.example.camera.CameraDemoActivity this$0 -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
cn.com.hoonsoft.example.camera.CameraDemoActivity$3 -> cn.com.hoonsoft.example.camera.c:
    cn.com.hoonsoft.example.camera.CameraDemoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.camera.CameraDemoActivity$SavePictureTask -> cn.com.hoonsoft.example.camera.d:
    cn.com.hoonsoft.example.camera.CameraDemoActivity this$0 -> a
    java.lang.String doInBackground(byte[][]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.com.hoonsoft.example.gps.BaiduMapActivity -> cn.com.hoonsoft.example.gps.BaiduMapActivity:
    com.baidu.mapapi.map.MapView mMapView -> a
    android.widget.TextView tv_locInfo -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    void onLocationSuccess(com.baidu.location.BDLocation) -> a
cn.com.hoonsoft.example.http.DownloadActivity -> cn.com.hoonsoft.example.http.DownloadActivity:
    android.widget.EditText et_down_url -> a
    android.widget.TextView tv_process -> b
    android.widget.Button btn_download -> c
    android.widget.Button btn_cancel -> d
    android.widget.ProgressBar pb_down1 -> e
    cn.com.hoonsoft.view.progressbar.RoundProgressBar round_pb_down -> f
    java.lang.String LOG_TAG -> g
    void onCreate(android.os.Bundle) -> onCreate
    cn.com.hoonsoft.tool.http.BinaryHandler getBinaryResponseHandler() -> a
    void initView() -> b
    android.widget.EditText access$0(cn.com.hoonsoft.example.http.DownloadActivity) -> a
    android.widget.Button access$1(cn.com.hoonsoft.example.http.DownloadActivity) -> b
    android.widget.Button access$2(cn.com.hoonsoft.example.http.DownloadActivity) -> c
    java.lang.String access$3(cn.com.hoonsoft.example.http.DownloadActivity) -> d
    android.widget.ProgressBar access$4(cn.com.hoonsoft.example.http.DownloadActivity) -> e
    cn.com.hoonsoft.view.progressbar.RoundProgressBar access$5(cn.com.hoonsoft.example.http.DownloadActivity) -> f
    android.widget.TextView access$6(cn.com.hoonsoft.example.http.DownloadActivity) -> g
cn.com.hoonsoft.example.http.DownloadActivity$1 -> cn.com.hoonsoft.example.http.a:
    cn.com.hoonsoft.example.http.DownloadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.http.DownloadActivity$2 -> cn.com.hoonsoft.example.http.b:
    cn.com.hoonsoft.example.http.DownloadActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.http.DownloadActivity$3 -> cn.com.hoonsoft.example.http.c:
    cn.com.hoonsoft.example.http.DownloadActivity this$0 -> a
    void progress(int,int) -> a
    void success(org.apache.http.Header[],byte[]) -> a
    void failure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
cn.com.hoonsoft.example.image.GalleryFlowActivity -> cn.com.hoonsoft.example.image.GalleryFlowActivity:
    void onCreate(android.os.Bundle) -> onCreate
cn.com.hoonsoft.example.image.ImageAdapter -> cn.com.hoonsoft.example.image.a:
    android.content.Context mContext -> a
    java.lang.Integer[] mImageIds -> b
    android.widget.ImageView[] mImages -> c
    boolean createReflectedImages() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.com.hoonsoft.example.image.ImageComposActivity -> cn.com.hoonsoft.example.image.ImageComposActivity:
    android.widget.ImageView resultView -> a
    android.widget.ImageView resultView2 -> b
    android.widget.ImageView resultView3 -> c
    android.widget.ImageView resultView4 -> d
    android.widget.Button startProcess -> e
    android.graphics.Bitmap picBitmap -> f
    android.graphics.Bitmap maskBitmap -> g
    android.graphics.Bitmap frameBitmap -> h
    android.graphics.Bitmap resultBitmap -> i
    android.graphics.Bitmap fengjingBitmap -> j
    android.graphics.Bitmap composedBitmap -> k
    int WITHOUT -> l
    android.view.View$OnClickListener mListener -> m
    void onCreate(android.os.Bundle) -> onCreate
    void compose() -> a
    void onDestroy() -> onDestroy
    void access$0(cn.com.hoonsoft.example.image.ImageComposActivity) -> a
cn.com.hoonsoft.example.image.ImageComposActivity$1 -> cn.com.hoonsoft.example.image.b:
    cn.com.hoonsoft.example.image.ImageComposActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.message.CustomActivity -> cn.com.hoonsoft.example.message.CustomActivity:
    void onCreate(android.os.Bundle) -> onCreate
cn.com.hoonsoft.example.message.LoginActivity -> cn.com.hoonsoft.example.message.a:
    java.lang.String TAG -> a
    android.webkit.WebView mWebView -> b
    void onCreate(android.os.Bundle) -> onCreate
    void getAccessToken() -> b
    void initWebView(android.webkit.WebView) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean goBack() -> c
    java.lang.String access$0() -> a
cn.com.hoonsoft.example.message.LoginActivity$1 -> cn.com.hoonsoft.example.message.b:
    cn.com.hoonsoft.example.message.LoginActivity this$0 -> a
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
cn.com.hoonsoft.example.message.MyPushMessageReceiver -> cn.com.hoonsoft.example.message.MyPushMessageReceiver:
    java.lang.String TAG -> a
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void updateContent(android.content.Context,java.lang.String) -> a
cn.com.hoonsoft.example.message.PushDemoActivity -> cn.com.hoonsoft.example.message.PushDemoActivity:
    java.lang.String TAG -> q
    android.widget.RelativeLayout mainLayout -> a
    int akBtnId -> b
    int initBtnId -> c
    int richBtnId -> d
    int setTagBtnId -> e
    int delTagBtnId -> f
    int clearLogBtnId -> g
    android.widget.Button initButton -> h
    android.widget.Button initWithApiKey -> i
    android.widget.Button displayRichMedia -> j
    android.widget.Button setTags -> k
    android.widget.Button delTags -> l
    android.widget.Button clearLog -> m
    android.widget.TextView logText -> n
    android.widget.ScrollView scrollView -> o
    int initialCnt -> p
    boolean isLogin -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void openRichMediaList() -> a
    void deleteTags() -> b
    void setTags() -> c
    void initWithApiKey() -> d
    void initWithBaiduAccount() -> e
    void onStart() -> onStart
    void onResume() -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void updateDisplay() -> f
cn.com.hoonsoft.example.message.PushDemoActivity$1 -> cn.com.hoonsoft.example.message.c:
    cn.com.hoonsoft.example.message.PushDemoActivity this$0 -> a
    android.widget.EditText val$textviewGid -> b
    void onClick(android.content.DialogInterface,int) -> onClick
cn.com.hoonsoft.example.message.PushDemoActivity$2 -> cn.com.hoonsoft.example.message.d:
    cn.com.hoonsoft.example.message.PushDemoActivity this$0 -> a
    android.widget.EditText val$textviewGid -> b
    void onClick(android.content.DialogInterface,int) -> onClick
cn.com.hoonsoft.example.message.Utils -> cn.com.hoonsoft.example.message.e:
    java.lang.String logStringCache -> a
    java.lang.String getMetaValue(android.content.Context,java.lang.String) -> a
    boolean hasBind(android.content.Context) -> a
    void setBind(android.content.Context,boolean) -> a
    java.util.List getTagsList(java.lang.String) -> a
    java.lang.String getLogText(android.content.Context) -> b
    void setLogText(android.content.Context,java.lang.String) -> b
cn.com.hoonsoft.example.progressbar.RoundPBActivity -> cn.com.hoonsoft.example.progressbar.RoundPBActivity:
    cn.com.hoonsoft.view.progressbar.RoundProgressBar mRoundProgressBar1 -> a
    cn.com.hoonsoft.view.progressbar.RoundProgressBar mRoundProgressBar3 -> b
    cn.com.hoonsoft.view.progressbar.RoundProgressBar mRoundProgressBar4 -> c
    cn.com.hoonsoft.view.progressbar.RoundProgressBar mRoundProgressBar5 -> d
    int progress -> e
    void onCreate(android.os.Bundle) -> onCreate
    int access$0(cn.com.hoonsoft.example.progressbar.RoundPBActivity) -> a
    void access$1(cn.com.hoonsoft.example.progressbar.RoundPBActivity,int) -> a
    cn.com.hoonsoft.view.progressbar.RoundProgressBar access$2(cn.com.hoonsoft.example.progressbar.RoundPBActivity) -> b
    cn.com.hoonsoft.view.progressbar.RoundProgressBar access$3(cn.com.hoonsoft.example.progressbar.RoundPBActivity) -> c
    cn.com.hoonsoft.view.progressbar.RoundProgressBar access$4(cn.com.hoonsoft.example.progressbar.RoundPBActivity) -> d
    cn.com.hoonsoft.view.progressbar.RoundProgressBar access$5(cn.com.hoonsoft.example.progressbar.RoundPBActivity) -> e
cn.com.hoonsoft.example.progressbar.RoundPBActivity$1 -> cn.com.hoonsoft.example.progressbar.a:
    cn.com.hoonsoft.example.progressbar.RoundPBActivity this$0 -> a
    void onLoadFinished() -> a
cn.com.hoonsoft.example.progressbar.RoundPBActivity$2 -> cn.com.hoonsoft.example.progressbar.b:
    cn.com.hoonsoft.example.progressbar.RoundPBActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    cn.com.hoonsoft.example.progressbar.RoundPBActivity access$0(cn.com.hoonsoft.example.progressbar.RoundPBActivity$2) -> a
cn.com.hoonsoft.example.progressbar.RoundPBActivity$2$1 -> cn.com.hoonsoft.example.progressbar.c:
    cn.com.hoonsoft.example.progressbar.RoundPBActivity$2 this$1 -> a
    void run() -> run
cn.com.hoonsoft.example.share.ShareSDKDemoActivity -> cn.com.hoonsoft.example.share.ShareSDKDemoActivity:
    android.widget.EditText et_share_txt -> a
    android.widget.Button btn_auth -> b
    android.widget.Button btn_wechart_share -> c
    android.widget.Button btn_qzone_share -> d
    android.widget.Button btn_any_share -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void showShare() -> b
    void access$0(cn.com.hoonsoft.example.share.ShareSDKDemoActivity) -> a
cn.com.hoonsoft.example.share.ShareSDKDemoActivity$1 -> cn.com.hoonsoft.example.share.a:
    cn.com.hoonsoft.example.share.ShareSDKDemoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.sms.SMSMainActivity -> cn.com.hoonsoft.example.sms.SMSMainActivity:
    java.lang.String APPKEY -> a
    java.lang.String APPSECRET -> b
    java.lang.String[] AVATARS -> c
    boolean ready -> d
    android.app.Dialog pd -> e
    android.widget.TextView tvNum -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initSDK() -> a
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    boolean handleMessage(android.os.Message) -> handleMessage
    void refreshViewCount(java.lang.Object) -> a
    void showDialog() -> b
    void registerUser(java.lang.String,java.lang.String) -> a
    void access$5(cn.com.hoonsoft.example.sms.SMSMainActivity,java.lang.String,java.lang.String) -> a
cn.com.hoonsoft.example.sms.SMSMainActivity$2 -> cn.com.hoonsoft.example.sms.a:
    cn.com.hoonsoft.example.sms.SMSMainActivity this$0 -> a
    android.os.Handler val$handler -> b
    void afterEvent(int,int,java.lang.Object) -> a
cn.com.hoonsoft.example.sms.SMSMainActivity$3 -> cn.com.hoonsoft.example.sms.b:
    cn.com.hoonsoft.example.sms.SMSMainActivity this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> a
cn.com.hoonsoft.example.soap.CityActivity -> cn.com.hoonsoft.example.soap.CityActivity:
    java.util.List cityStringList -> a
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    java.util.List parseSoapObject(org.ksoap2.serialization.SoapObject) -> a
    java.util.List access$0(cn.com.hoonsoft.example.soap.CityActivity,org.ksoap2.serialization.SoapObject) -> a
    void access$1(cn.com.hoonsoft.example.soap.CityActivity,java.util.List) -> a
    java.util.List access$2(cn.com.hoonsoft.example.soap.CityActivity) -> a
cn.com.hoonsoft.example.soap.CityActivity$1 -> cn.com.hoonsoft.example.soap.a:
    cn.com.hoonsoft.example.soap.CityActivity this$0 -> a
    android.widget.ListView val$mCityList -> b
    void callBack(org.ksoap2.serialization.SoapObject) -> a
cn.com.hoonsoft.example.soap.CityActivity$2 -> cn.com.hoonsoft.example.soap.b:
    cn.com.hoonsoft.example.soap.CityActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.com.hoonsoft.example.soap.SOAPMainActivity -> cn.com.hoonsoft.example.soap.SOAPMainActivity:
    java.util.List provinceList -> a
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    java.util.List parseSoapObject(org.ksoap2.serialization.SoapObject) -> a
    java.util.List access$0(cn.com.hoonsoft.example.soap.SOAPMainActivity,org.ksoap2.serialization.SoapObject) -> a
    void access$1(cn.com.hoonsoft.example.soap.SOAPMainActivity,java.util.List) -> a
    java.util.List access$2(cn.com.hoonsoft.example.soap.SOAPMainActivity) -> a
cn.com.hoonsoft.example.soap.SOAPMainActivity$1 -> cn.com.hoonsoft.example.soap.c:
    cn.com.hoonsoft.example.soap.SOAPMainActivity this$0 -> a
    android.widget.ListView val$mProvinceList -> b
    void callBack(org.ksoap2.serialization.SoapObject) -> a
cn.com.hoonsoft.example.soap.SOAPMainActivity$2 -> cn.com.hoonsoft.example.soap.d:
    cn.com.hoonsoft.example.soap.SOAPMainActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.com.hoonsoft.example.soap.WeatherActivity -> cn.com.hoonsoft.example.soap.WeatherActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
cn.com.hoonsoft.example.soap.WeatherActivity$1 -> cn.com.hoonsoft.example.soap.e:
    cn.com.hoonsoft.example.soap.WeatherActivity this$0 -> a
    android.widget.TextView val$mTextWeather -> b
    void callBack(org.ksoap2.serialization.SoapObject) -> a
cn.com.hoonsoft.example.ui.AutoGainFormActivity -> cn.com.hoonsoft.example.ui.AutoGainFormActivity:
    android.widget.Spinner sp_school -> a
    android.widget.Button btn_view_password -> b
    android.widget.Button btn_login -> c
    java.lang.String[] schoolArray -> d
    java.lang.String LOG_TAG -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
cn.com.hoonsoft.example.ui.AutoGainFormActivity$1 -> cn.com.hoonsoft.example.ui.a:
    cn.com.hoonsoft.example.ui.AutoGainFormActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.ui.AutoGainFormActivity$1$1 -> cn.com.hoonsoft.example.ui.b:
    cn.com.hoonsoft.example.ui.AutoGainFormActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.com.hoonsoft.example.ui.FormValidationActivity -> cn.com.hoonsoft.example.ui.FormValidationActivity:
    android.widget.EditText mEditName -> a
    android.widget.EditText mEditNumberOfParticipants -> b
    android.widget.EditText mEditEmail -> c
    android.widget.TextView mTxtDate -> d
    android.widget.Spinner mSpinner -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void validate() -> a
    void setDate(java.util.Calendar) -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
    void access$0(cn.com.hoonsoft.example.ui.FormValidationActivity) -> a
cn.com.hoonsoft.example.ui.FormValidationActivity$1 -> cn.com.hoonsoft.example.ui.c:
    cn.com.hoonsoft.example.ui.FormValidationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.ui.FormValidationActivity$2 -> cn.com.hoonsoft.example.ui.d:
    cn.com.hoonsoft.example.ui.FormValidationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.ui.FormValidationActivity$DatePickerFragment -> cn.com.hoonsoft.example.ui.e:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
cn.com.hoonsoft.example.ui.InjectViewActivity -> cn.com.hoonsoft.example.ui.InjectViewActivity:
    android.widget.Spinner sp_school -> a
    android.widget.Button btn_login -> b
    java.lang.String LOG_TAG -> c
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String access$0(cn.com.hoonsoft.example.ui.InjectViewActivity) -> a
cn.com.hoonsoft.example.ui.InjectViewActivity$1 -> cn.com.hoonsoft.example.ui.f:
    cn.com.hoonsoft.example.ui.InjectViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.ui.InjectViewActivity$1$1 -> cn.com.hoonsoft.example.ui.g:
    cn.com.hoonsoft.example.ui.InjectViewActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.com.hoonsoft.example.ui360.FilesFragment -> cn.com.hoonsoft.example.ui360.a:
    android.widget.ListView lv_files -> a
    android.widget.PopupWindow menu -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findView(android.view.View) -> a
    void init() -> a
    void onClick(android.view.View) -> onClick
    void showPopupWindows(android.view.View) -> b
cn.com.hoonsoft.example.ui360.FindFragment -> cn.com.hoonsoft.example.ui360.b:
    android.widget.GridView gv_menu -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findView(android.view.View) -> a
    void init() -> a
cn.com.hoonsoft.example.ui360.LoginActivity -> cn.com.hoonsoft.example.ui360.LoginActivity:
    android.widget.Button register -> a
    android.widget.Button login -> b
    void onCreate(android.os.Bundle) -> onCreate
cn.com.hoonsoft.example.ui360.LoginActivity$1 -> cn.com.hoonsoft.example.ui360.c:
    cn.com.hoonsoft.example.ui360.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.ui360.LoginActivity$2 -> cn.com.hoonsoft.example.ui360.d:
    cn.com.hoonsoft.example.ui360.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.ui360.MainActivity -> cn.com.hoonsoft.example.ui360.MainActivity:
    android.support.v4.view.ViewPager vp_content -> a
    android.widget.TextView tv_find -> b
    android.widget.TextView tv_my_file -> c
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu slidingMenu -> d
    android.widget.ImageButton ibtn_trigger -> e
    void onCreate(android.os.Bundle) -> onCreate
    void findView() -> a
    void init() -> b
    void onBackPressed() -> onBackPressed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setCurrentPage(int) -> a
    void access$0(cn.com.hoonsoft.example.ui360.MainActivity,int) -> a
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$1(cn.com.hoonsoft.example.ui360.MainActivity) -> a
cn.com.hoonsoft.example.ui360.MainActivity$1 -> cn.com.hoonsoft.example.ui360.e:
    cn.com.hoonsoft.example.ui360.MainActivity this$0 -> a
    void onPageSelected(int) -> a
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
cn.com.hoonsoft.example.ui360.MainActivity$2 -> cn.com.hoonsoft.example.ui360.f:
    cn.com.hoonsoft.example.ui360.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.ui360.MenuFragment -> cn.com.hoonsoft.example.ui360.g:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
cn.com.hoonsoft.example.ui360.adapter.ContentPagerAdapter -> cn.com.hoonsoft.example.ui360.a.a:
    android.support.v4.app.Fragment[] fragments -> a
    android.support.v4.app.Fragment getItem(int) -> a
    int getCount() -> b
cn.com.hoonsoft.example.ui360.adapter.FileItemAdapter -> cn.com.hoonsoft.example.ui360.a.b:
    java.util.List files -> a
    android.view.LayoutInflater inflater -> b
    android.view.View$OnClickListener listener -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.com.hoonsoft.example.ui360.adapter.FileItemAdapter$ViewHolder -> cn.com.hoonsoft.example.ui360.a.c:
    android.widget.ImageView iv_fileIcon -> a
    android.widget.TextView tv_fileName -> b
    android.widget.TextView tv_fileMsg -> c
    android.widget.ImageButton ibtn_fileOperate -> d
    cn.com.hoonsoft.example.ui360.adapter.FileItemAdapter this$0 -> e
cn.com.hoonsoft.example.ui360.adapter.MenuItemAdapter -> cn.com.hoonsoft.example.ui360.a.d:
    java.util.List menus -> a
    android.view.LayoutInflater inflater -> b
    int margin -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.com.hoonsoft.example.ui360.adapter.MenuItemAdapter$ViewHolder -> cn.com.hoonsoft.example.ui360.a.e:
    android.widget.ImageView iv_menuIcon -> a
    android.widget.TextView tv_menuTitle -> b
    android.widget.TextView tv_menuMsg -> c
    cn.com.hoonsoft.example.ui360.adapter.MenuItemAdapter this$0 -> d
cn.com.hoonsoft.example.ui360.model.FileItem -> cn.com.hoonsoft.example.ui360.b.a:
    int fileIconRes -> a
    java.lang.String fileName -> b
    java.lang.String fileMsg -> c
cn.com.hoonsoft.example.ui360.model.MenuItem -> cn.com.hoonsoft.example.ui360.b.b:
    int menuIconRes -> a
    java.lang.String menuTitle -> b
    java.lang.String menuMsg -> c
cn.com.hoonsoft.example.xml.XMLRWActivity -> cn.com.hoonsoft.example.xml.XMLRWActivity:
    android.widget.Button btn_write_xml -> a
    android.widget.Button btn_read_xml -> b
    void onCreate(android.os.Bundle) -> onCreate
cn.com.hoonsoft.example.xml.XMLRWActivity$1 -> cn.com.hoonsoft.example.xml.a:
    cn.com.hoonsoft.example.xml.XMLRWActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.xml.XMLRWActivity$2 -> cn.com.hoonsoft.example.xml.b:
    cn.com.hoonsoft.example.xml.XMLRWActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.zxing.ZxingGenBinActivity -> cn.com.hoonsoft.example.zxing.ZxingGenBinActivity:
    android.widget.EditText et_qr_text -> a
    android.widget.Button btn_make_qr -> b
    android.widget.Button btn_make_bar -> c
    android.widget.ImageView qr_image -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    android.widget.EditText access$0(cn.com.hoonsoft.example.zxing.ZxingGenBinActivity) -> a
    android.widget.ImageView access$1(cn.com.hoonsoft.example.zxing.ZxingGenBinActivity) -> b
cn.com.hoonsoft.example.zxing.ZxingGenBinActivity$1 -> cn.com.hoonsoft.example.zxing.a:
    cn.com.hoonsoft.example.zxing.ZxingGenBinActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.example.zxing.ZxingGenBinActivity$2 -> cn.com.hoonsoft.example.zxing.b:
    cn.com.hoonsoft.example.zxing.ZxingGenBinActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.sharesdk.onekeyshare.CustomerLogo -> cn.com.hoonsoft.sharesdk.a.a:
    java.lang.String label -> a
    android.graphics.Bitmap logo -> b
    android.view.View$OnClickListener listener -> c
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage -> cn.com.hoonsoft.sharesdk.a.b:
    java.util.HashMap reqData -> a
    cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare parent -> b
    android.widget.RelativeLayout rlPage -> c
    cn.sharesdk.framework.TitleLayout llTitle -> d
    android.widget.LinearLayout llBody -> e
    android.widget.RelativeLayout rlThumb -> f
    android.widget.EditText etContent -> g
    android.widget.TextView tvCounter -> h
    android.widget.ImageView ivPin -> i
    android.widget.ImageView ivImage -> j
    android.graphics.Bitmap image -> k
    boolean shareImage -> l
    android.widget.LinearLayout llPlat -> m
    cn.sharesdk.framework.Platform[] platformList -> n
    android.view.View[] views -> o
    boolean dialogMode -> p
    android.view.View tmpBgView -> q
    android.graphics.drawable.Drawable background -> r
    void setShareData(java.util.HashMap) -> a
    void setParent(cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare) -> a
    void setDialogMode() -> a
    void setActivity(android.app.Activity) -> setActivity
    void setBackGround(android.view.View) -> a
    void onCreate() -> onCreate
    android.widget.RelativeLayout getPageView() -> c
    cn.sharesdk.framework.TitleLayout getPageTitle() -> d
    android.widget.LinearLayout getPageBody() -> e
    android.widget.LinearLayout getMainBody() -> f
    android.widget.RelativeLayout getThumbView() -> g
    void showThumb() -> h
    android.widget.LinearLayout getBodyBottom() -> i
    android.widget.LinearLayout getAtLine(java.lang.String) -> a
    android.view.View getSep() -> j
    android.widget.LinearLayout getPlatformList() -> k
    android.widget.ImageView getImagePin() -> l
    void genBackground() -> m
    java.lang.String getName(java.lang.String) -> b
    void onClick(android.view.View) -> onClick
    void afterPlatformListGot() -> b
    android.graphics.Bitmap getPlatLogo(cn.sharesdk.framework.Platform) -> a
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onResult(java.util.ArrayList) -> a
    void hideSoftInput() -> n
    boolean onFinish() -> onFinish
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void access$0(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage,cn.sharesdk.framework.Platform[]) -> a
    cn.sharesdk.framework.Platform[] access$1(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> a
    android.graphics.Bitmap access$2(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> b
    android.app.Activity access$3(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> c
    android.widget.RelativeLayout access$4(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> d
    android.widget.ImageView access$5(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> e
    void access$6(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage,boolean) -> a
    java.util.HashMap access$7(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> f
    void access$8(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage,android.graphics.Bitmap) -> a
    boolean access$9(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> g
    android.widget.ImageView access$10(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> h
    android.widget.LinearLayout access$11(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> i
    void access$12(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> j
    android.widget.RelativeLayout access$13(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> k
    android.graphics.drawable.Drawable access$14(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> l
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$1 -> cn.com.hoonsoft.sharesdk.a.c:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage this$0 -> a
    void run() -> run
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage access$0(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$1) -> a
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$1$1 -> cn.com.hoonsoft.sharesdk.a.d:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$1 this$1 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$2 -> cn.com.hoonsoft.sharesdk.a.e:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$3 -> cn.com.hoonsoft.sharesdk.a.f:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$4 -> cn.com.hoonsoft.sharesdk.a.g:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage this$0 -> a
    void run() -> run
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage access$0(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$4) -> a
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$4$1 -> cn.com.hoonsoft.sharesdk.a.h:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$4 this$1 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$5 -> cn.com.hoonsoft.sharesdk.a.i:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage this$0 -> a
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$6 -> cn.com.hoonsoft.sharesdk.a.j:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage this$0 -> a
    int val$postSel -> b
    int val$dp_24 -> c
    int val$dp_9 -> d
    boolean handleMessage(android.os.Message) -> handleMessage
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$7 -> cn.com.hoonsoft.sharesdk.a.k:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage this$0 -> a
    void run() -> run
cn.com.hoonsoft.sharesdk.onekeyshare.EditPage$8 -> cn.com.hoonsoft.sharesdk.a.l:
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage this$0 -> a
    void run() -> run
cn.com.hoonsoft.sharesdk.onekeyshare.FollowList -> cn.com.hoonsoft.sharesdk.a.m:
    cn.sharesdk.framework.TitleLayout llTitle -> a
    cn.sharesdk.framework.Platform platform -> b
    cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$FollowAdapter adapter -> c
    cn.com.hoonsoft.sharesdk.onekeyshare.EditPage page -> d
    void setPlatform(cn.sharesdk.framework.Platform) -> a
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void setBackPage(cn.com.hoonsoft.sharesdk.onekeyshare.EditPage) -> a
cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$FollowAdapter -> cn.com.hoonsoft.sharesdk.a.n:
    int curPage -> a
    java.util.ArrayList follows -> b
    java.util.HashMap map -> c
    boolean hasNext -> d
    cn.sharesdk.framework.Platform platform -> e
    cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$PRTHeader llHeader -> f
    android.graphics.Bitmap bmChd -> g
    android.graphics.Bitmap bmUnch -> h
    void setPlatform(cn.sharesdk.framework.Platform) -> a
    void next() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$Following getItem(int) -> a
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    android.view.View getHeaderView() -> getHeaderView
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    java.util.ArrayList parseList(java.util.HashMap) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void onReversed() -> onReversed
    java.lang.Object getItem(int) -> getItem
cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$FollowListItem -> cn.com.hoonsoft.sharesdk.a.o:
    m.framework.ui.widget.asyncview.AsyncImageView aivIcon -> a
    android.widget.TextView tvName -> b
    android.widget.TextView tvSign -> c
    android.widget.ImageView ivCheck -> d
cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$Following -> cn.com.hoonsoft.sharesdk.a.p:
    boolean checked -> a
    java.lang.String screeName -> b
    java.lang.String description -> c
    java.lang.String uid -> d
    java.lang.String icon -> e
cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$PRTHeader -> cn.com.hoonsoft.sharesdk.a.q:
    android.widget.TextView tvHeader -> a
    cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$RotateImageView ivArrow -> b
    android.widget.ProgressBar pbRefreshing -> c
    void onPullDown(int) -> a
    void onRequest() -> a
    void reverse() -> b
cn.com.hoonsoft.sharesdk.onekeyshare.FollowList$RotateImageView -> cn.com.hoonsoft.sharesdk.a.r:
    int rotation -> a
    void setRotation(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare -> cn.com.hoonsoft.sharesdk.a.s:
    android.widget.FrameLayout flPage -> a
    cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView grid -> b
    android.widget.Button btnCancel -> c
    android.view.animation.Animation animShow -> d
    android.view.animation.Animation animHide -> e
    boolean finishing -> f
    boolean canceled -> g
    java.util.HashMap reqMap -> h
    java.util.ArrayList customers -> i
    int notifyIcon -> j
    java.lang.String notifyTitle -> k
    boolean silent -> l
    cn.sharesdk.framework.PlatformActionListener callback -> m
    cn.com.hoonsoft.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> n
    boolean dialogMode -> o
    boolean disableSSO -> p
    java.util.HashMap hiddenPlatforms -> q
    android.view.View bgView -> r
    void show(android.content.Context) -> a
    void setNotification(int,java.lang.String) -> a
    void setTitle(java.lang.String) -> a
    void setTitleUrl(java.lang.String) -> b
    void setText(java.lang.String) -> c
    void setImagePath(java.lang.String) -> d
    void setUrl(java.lang.String) -> e
    void setComment(java.lang.String) -> f
    void setSite(java.lang.String) -> g
    void setSiteUrl(java.lang.String) -> h
    void disableSSOWhenAuthorize() -> a
    void onCreate() -> onCreate
    void initPageView() -> b
    void initAnim() -> c
    void onClick(android.view.View) -> onClick
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onFinish() -> onFinish
    void share(java.util.HashMap) -> a
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(long,java.lang.String) -> a
    android.widget.FrameLayout access$0(cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare) -> a
    void access$1(cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare) -> b
cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare$1 -> cn.com.hoonsoft.sharesdk.a.t:
    cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare this$0 -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare$2 -> cn.com.hoonsoft.sharesdk.a.u:
    cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.com.hoonsoft.sharesdk.onekeyshare.PicViewer -> cn.com.hoonsoft.sharesdk.a.v:
    android.widget.ImageView ivViewer -> a
    android.graphics.Bitmap pic -> b
    void setImageBitmap(android.graphics.Bitmap) -> a
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView -> cn.com.hoonsoft.sharesdk.a.w:
    int LINE_PER_PAGE -> a
    int COLUMN_PER_LINE -> b
    int PAGE_SIZE -> c
    m.framework.ui.widget.viewpager.ViewPagerClassic pager -> d
    android.widget.ImageView[] points -> e
    android.graphics.Bitmap grayPoint -> f
    android.graphics.Bitmap whitePoint -> g
    boolean silent -> h
    cn.sharesdk.framework.Platform[] platformList -> i
    java.util.HashMap reqData -> j
    cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare parent -> k
    java.util.ArrayList customers -> l
    java.util.HashMap hiddenPlatforms -> m
    android.view.View bgView -> n
    long lastClickTime -> o
    void init(android.content.Context) -> a
    void calPageSize() -> c
    boolean handleMessage(android.os.Message) -> handleMessage
    void afterPlatformListGot() -> a
    void onConfigurationChanged() -> b
    void setData(java.util.HashMap,boolean) -> a
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setParent(cn.com.hoonsoft.sharesdk.onekeyshare.OnekeyShare) -> setParent
    void onClick(android.view.View) -> onClick
    void disableOverScrollMode(android.view.View) -> a
    cn.sharesdk.framework.Platform[] access$0(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView) -> a
    java.util.HashMap access$1(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView) -> b
    java.util.ArrayList access$2(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView) -> c
    int access$3(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView) -> d
    int access$4(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView) -> e
    android.widget.ImageView[] access$5(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView) -> f
    android.graphics.Bitmap access$6(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView) -> g
    android.graphics.Bitmap access$7(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView) -> h
    void access$8(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView,cn.sharesdk.framework.Platform[]) -> a
cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView$1 -> cn.com.hoonsoft.sharesdk.a.x:
    cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView this$0 -> a
    void run() -> run
cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView$GridView -> cn.com.hoonsoft.sharesdk.a.y:
    java.lang.Object[] beans -> a
    android.view.View$OnClickListener callback -> b
    int lines -> c
    cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter platformAdapter -> d
    void setData(int,java.lang.Object[]) -> a
    void init() -> a
    android.widget.LinearLayout getView(int,android.view.View$OnClickListener,android.content.Context) -> a
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform) -> a
    java.lang.String getName(cn.sharesdk.framework.Platform) -> b
cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter -> cn.com.hoonsoft.sharesdk.a.z:
    cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView$GridView[] girds -> a
    java.util.List logos -> b
    android.view.View$OnClickListener callback -> c
    int lines -> d
    cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView platformGridView -> e
    int getCount() -> getCount
    android.view.View getView(int,android.view.ViewGroup) -> getView
    void onScreenChange(int,int) -> onScreenChange
    cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView access$0(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter) -> a
    android.view.View$OnClickListener access$1(cn.com.hoonsoft.sharesdk.onekeyshare.PlatformGridView$PlatformAdapter) -> b
cn.com.hoonsoft.sharesdk.onekeyshare.ShareContentCustomizeCallback -> cn.com.hoonsoft.sharesdk.a.aa:
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> a
cn.com.hoonsoft.sharesdk.onekeyshare.ShareCore -> cn.com.hoonsoft.sharesdk.a.ab:
    cn.com.hoonsoft.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> a
    void setShareContentCustomizeCallback(cn.com.hoonsoft.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> a
    boolean share(cn.sharesdk.framework.Platform,java.util.HashMap) -> a
    boolean isUseClientToShare(java.lang.String) -> a
cn.com.hoonsoft.sharesdk.wxapi.WXEntryActivity -> cn.com.hoonsoft.sharesdk.wxapi.WXEntryActivity:
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
cn.com.hoonsoft.sms.StatisticManager -> cn.com.hoonsoft.c.a:
    void initAnalysisSDK(android.content.Context) -> a
    void onPause(android.content.Context) -> b
    void onResume(android.content.Context) -> c
    void registerAnalysisHandler(android.content.Context) -> d
    java.lang.String eventToString(int) -> b
    java.lang.String access$0(int) -> a
cn.com.hoonsoft.sms.StatisticManager$1 -> cn.com.hoonsoft.c.b:
    android.content.Context val$context -> a
    void beforeEvent(int,java.lang.Object) -> a
    void afterEvent(int,int,java.lang.Object) -> a
cn.com.hoonsoft.tool.ToolAlert -> cn.com.hoonsoft.tool.a:
    android.app.ProgressDialog mProgressDialog -> a
    void showProgressDialog(android.app.Activity,java.lang.CharSequence) -> a
    void dismissProgressDialog() -> a
    void dialog(android.app.Activity,java.lang.String,java.lang.String,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener) -> a
    void showShort(java.lang.String) -> a
cn.com.hoonsoft.tool.ToolApplication -> cn.com.hoonsoft.tool.ToolApplication:
    android.content.Context instance -> a
    java.util.Map data -> b
    android.content.Context gainContext() -> a
    void onCreate() -> onCreate
cn.com.hoonsoft.tool.ToolData -> cn.com.hoonsoft.tool.b:
    java.util.Map gainForm(android.view.ViewGroup,java.util.Map) -> a
cn.com.hoonsoft.tool.ToolFile -> cn.com.hoonsoft.tool.c:
    java.lang.String TAG -> a
    boolean isMountedSDCard() -> a
    java.lang.String gainSDCardPath() -> b
    void write(java.lang.String,byte[]) -> a
    void saveAsJPEG(android.graphics.Bitmap,java.lang.String) -> a
cn.com.hoonsoft.tool.ToolHTTP -> cn.com.hoonsoft.tool.d:
    com.loopj.android.http.AsyncHttpClient client -> a
    void get(java.lang.String,cn.com.hoonsoft.dto.DTO,cn.com.hoonsoft.tool.http.BinaryHandler) -> a
    com.loopj.android.http.RequestParams fillParms(java.util.Map) -> a
cn.com.hoonsoft.tool.ToolLocation -> cn.com.hoonsoft.tool.e:
    com.baidu.location.LocationClient mLocClient -> a
    boolean isGpsOPen() -> a
    void requestLocation(cn.com.hoonsoft.tool.ToolLocation$InterfaceBDLocation,boolean) -> a
    com.baidu.location.LocationClientOption configOptions() -> b
cn.com.hoonsoft.tool.ToolLocation$1 -> cn.com.hoonsoft.tool.f:
    cn.com.hoonsoft.tool.ToolLocation$InterfaceBDLocation val$callback -> a
    boolean val$isLocOnce -> b
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
cn.com.hoonsoft.tool.ToolLocation$InterfaceBDLocation -> cn.com.hoonsoft.tool.g:
    void onLocationSuccess(com.baidu.location.BDLocation) -> a
cn.com.hoonsoft.tool.ToolNetwork -> cn.com.hoonsoft.tool.h:
    android.content.Context localContext -> a
    android.net.NetworkInfo networkInfo -> b
    cn.com.hoonsoft.tool.ToolNetwork getInstance(android.content.Context) -> a
    boolean isAvailable() -> a
    boolean isConnected() -> b
cn.com.hoonsoft.tool.ToolNetwork$SingletonHolder -> cn.com.hoonsoft.tool.i:
    cn.com.hoonsoft.tool.ToolNetwork instance -> a
    cn.com.hoonsoft.tool.ToolNetwork access$0() -> a
cn.com.hoonsoft.tool.ToolPicture -> cn.com.hoonsoft.tool.j:
    android.graphics.Bitmap makeQRImage(java.lang.String,int,int) -> a
    int gainPictureDegree(java.lang.String) -> a
    android.graphics.Bitmap rotaingBitmap(int,android.graphics.Bitmap) -> a
    android.graphics.Bitmap toBlack(android.graphics.Bitmap) -> a
    android.graphics.Bitmap createBitmapBySize(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap toRoundCorner(android.graphics.Bitmap,int) -> a
    android.graphics.Bitmap makeValidateCode(int,int) -> a
    java.lang.String gainValidateCodeValue() -> a
cn.com.hoonsoft.tool.ToolPicture$ValidateCodeGenerator -> cn.com.hoonsoft.tool.k:
    char[] CHARS -> a
    java.lang.String value -> b
    int padding_left -> c
    int padding_top -> d
    java.util.Random random -> e
    android.graphics.Bitmap createBitmap(int,int) -> a
    java.lang.String getCode() -> a
    void randomTextStyle(android.graphics.Paint) -> a
    void drawLine(android.graphics.Canvas,android.graphics.Paint) -> a
    int randomColor(int) -> a
cn.com.hoonsoft.tool.ToolSOAP -> cn.com.hoonsoft.tool.l:
    java.util.concurrent.ExecutorService executorService -> a
    void callWebService(java.lang.String,java.lang.String,java.util.HashMap,cn.com.hoonsoft.tool.ToolSOAP$WebServiceCallBack) -> a
cn.com.hoonsoft.tool.ToolSOAP$1 -> cn.com.hoonsoft.tool.m:
    cn.com.hoonsoft.tool.ToolSOAP$WebServiceCallBack val$webServiceCallBack -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.com.hoonsoft.tool.ToolSOAP$2 -> cn.com.hoonsoft.tool.n:
    android.os.Handler val$mHandler -> a
    org.ksoap2.transport.HttpTransportSE val$httpTransportSE -> b
    java.lang.String val$methodName -> c
    org.ksoap2.serialization.SoapSerializationEnvelope val$soapEnvelope -> d
    void run() -> run
cn.com.hoonsoft.tool.ToolSOAP$WebServiceCallBack -> cn.com.hoonsoft.tool.o:
    void callBack(org.ksoap2.serialization.SoapObject) -> a
cn.com.hoonsoft.tool.ToolString -> cn.com.hoonsoft.tool.p:
    java.lang.String gainUUID() -> a
    boolean isNoBlankAndNoNull(java.lang.String) -> a
cn.com.hoonsoft.tool.http.BinaryHandler -> cn.com.hoonsoft.tool.a.a:
    java.lang.String[] getAllowedContentTypes() -> a
    void onProgress(int,int) -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> b
    void progress(int,int) -> a
    void success(org.apache.http.Header[],byte[]) -> a
    void failure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> a
cn.com.hoonsoft.view.CheckBox -> cn.com.hoonsoft.view.CheckBox:
    java.lang.String mValue -> a
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
cn.com.hoonsoft.view.GalleryFlow -> cn.com.hoonsoft.view.GalleryFlow:
    android.graphics.Camera mCamera -> a
    int mMaxRotationAngle -> b
    int mMaxZoom -> c
    int mCoveflowCenter -> d
    int getMaxRotationAngle() -> getMaxRotationAngle
    void setMaxRotationAngle(int) -> setMaxRotationAngle
    int getMaxZoom() -> getMaxZoom
    void setMaxZoom(int) -> setMaxZoom
    int getCenterOfCoverflow() -> getCenterOfCoverflow
    int getCenterOfView(android.view.View) -> a
    boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation) -> getChildStaticTransformation
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void transformImageBitmap(android.widget.ImageView,android.view.animation.Transformation,int) -> a
cn.com.hoonsoft.view.RadioButton -> cn.com.hoonsoft.view.RadioButton:
    java.lang.String mValue -> a
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
cn.com.hoonsoft.view.RadioGroup -> cn.com.hoonsoft.view.a:
    java.lang.String mValue -> a
    void setChildValue() -> a
    void getChildValue() -> getChildValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getValue() -> getValue
cn.com.hoonsoft.view.progressbar.RoundProgressBar -> cn.com.hoonsoft.view.progressbar.RoundProgressBar:
    android.graphics.Paint paint -> b
    int progress -> c
    cn.com.hoonsoft.view.progressbar.RoundProgressBar$OnLoadFinishListener onLoadFinish -> a
    int roundColor -> d
    int roundProgressColor -> e
    int textColor -> f
    float textSize -> g
    float roundWidth -> h
    int max -> i
    boolean textIsDisplayable -> j
    int style -> k
    void onDraw(android.graphics.Canvas) -> onDraw
    int getMax() -> getMax
    void setMax(int) -> setMax
    int getProgress() -> getProgress
    void setProgress(int) -> setProgress
    void setOnLoadFinishListener(cn.com.hoonsoft.view.progressbar.RoundProgressBar$OnLoadFinishListener) -> setOnLoadFinishListener
    int getCricleColor() -> getCricleColor
    void setCricleColor(int) -> setCricleColor
    int getCricleProgressColor() -> getCricleProgressColor
    void setCricleProgressColor(int) -> setCricleProgressColor
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    float getRoundWidth() -> getRoundWidth
    void setRoundWidth(float) -> setRoundWidth
cn.com.hoonsoft.view.progressbar.RoundProgressBar$OnLoadFinishListener -> cn.com.hoonsoft.view.progressbar.a:
    void onLoadFinished() -> a
cn.com.hoonsoft.zxing.AmbientLightManager -> cn.com.hoonsoft.zxing.a:
    android.content.Context context -> a
    cn.com.hoonsoft.zxing.camera.CameraManager cameraManager -> b
    android.hardware.Sensor lightSensor -> c
    void start(cn.com.hoonsoft.zxing.camera.CameraManager) -> a
    void stop() -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
cn.com.hoonsoft.zxing.BeepManager -> cn.com.hoonsoft.zxing.b:
    java.lang.String TAG -> a
    android.app.Activity activity -> b
    android.media.MediaPlayer mediaPlayer -> c
    boolean playBeep -> d
    boolean vibrate -> e
    void updatePrefs() -> a
    void playBeepSoundAndVibrate() -> b
    boolean shouldBeep(android.content.SharedPreferences,android.content.Context) -> a
    android.media.MediaPlayer buildMediaPlayer(android.content.Context) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void close() -> c
cn.com.hoonsoft.zxing.CaptureActivity -> cn.com.hoonsoft.zxing.CaptureActivity:
    java.lang.String TAG -> a
    boolean hasSurface -> b
    cn.com.hoonsoft.zxing.InactivityTimer inactivityTimer -> c
    cn.com.hoonsoft.zxing.BeepManager beepManager -> d
    cn.com.hoonsoft.zxing.AmbientLightManager ambientLightManager -> e
    cn.com.hoonsoft.zxing.camera.CameraManager cameraManager -> f
    cn.com.hoonsoft.zxing.view.ViewfinderView viewfinderView -> g
    cn.com.hoonsoft.zxing.decode.CaptureActivityHandler handler -> h
    com.google.zxing.Result lastResult -> i
    boolean isFlashlightOpen -> j
    java.util.Collection decodeFormats -> k
    java.util.Map decodeHints -> l
    java.lang.String characterSet -> m
    com.google.zxing.Result savedResultToShow -> n
    cn.com.hoonsoft.zxing.IntentSource source -> o
    java.lang.String photoPath -> p
    android.os.Handler mHandler -> q
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap,float) -> a
    void restartPreviewAfterDelay(long) -> a
    cn.com.hoonsoft.zxing.view.ViewfinderView getViewfinderView() -> a
    android.os.Handler getHandler() -> b
    cn.com.hoonsoft.zxing.camera.CameraManager getCameraManager() -> c
    void resetStatusView() -> e
    void drawViewfinder() -> d
    void initCamera(android.view.SurfaceHolder) -> a
    void decodeOrStoreSavedBitmap(android.graphics.Bitmap,com.google.zxing.Result) -> a
    void displayFrameworkBugMessageAndExit() -> f
    void onClick(android.view.View) -> onClick
    java.lang.String access$0(cn.com.hoonsoft.zxing.CaptureActivity) -> a
    android.os.Handler access$1(cn.com.hoonsoft.zxing.CaptureActivity) -> b
cn.com.hoonsoft.zxing.CaptureActivity$1 -> cn.com.hoonsoft.zxing.c:
    cn.com.hoonsoft.zxing.CaptureActivity this$0 -> a
    android.app.ProgressDialog val$progressDialog -> b
    void run() -> run
cn.com.hoonsoft.zxing.CaptureActivity$MyHandler -> cn.com.hoonsoft.zxing.d:
    java.lang.ref.WeakReference activityReference -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.com.hoonsoft.zxing.FinishListener -> cn.com.hoonsoft.zxing.e:
    android.app.Activity activityToFinish -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void run() -> a
cn.com.hoonsoft.zxing.InactivityTimer -> cn.com.hoonsoft.zxing.f:
    java.lang.String TAG -> a
    android.app.Activity activity -> b
    android.content.BroadcastReceiver powerStatusReceiver -> c
    boolean registered -> d
    android.os.AsyncTask inactivityTask -> e
    void onActivity() -> a
    void onPause() -> b
    void onResume() -> c
    void cancel() -> f
    void shutdown() -> d
    void access$0(cn.com.hoonsoft.zxing.InactivityTimer) -> a
    java.lang.String access$1() -> e
    android.app.Activity access$2(cn.com.hoonsoft.zxing.InactivityTimer) -> b
cn.com.hoonsoft.zxing.InactivityTimer$InactivityAsyncTask -> cn.com.hoonsoft.zxing.g:
    cn.com.hoonsoft.zxing.InactivityTimer this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.com.hoonsoft.zxing.InactivityTimer$PowerStatusReceiver -> cn.com.hoonsoft.zxing.h:
    cn.com.hoonsoft.zxing.InactivityTimer this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.com.hoonsoft.zxing.IntentSource -> cn.com.hoonsoft.zxing.i:
    cn.com.hoonsoft.zxing.IntentSource NATIVE_APP_INTENT -> a
    cn.com.hoonsoft.zxing.IntentSource PRODUCT_SEARCH_LINK -> b
    cn.com.hoonsoft.zxing.IntentSource ZXING_LINK -> c
    cn.com.hoonsoft.zxing.IntentSource NONE -> d
    cn.com.hoonsoft.zxing.IntentSource[] ENUM$VALUES -> e
    cn.com.hoonsoft.zxing.IntentSource[] values() -> values
    cn.com.hoonsoft.zxing.IntentSource valueOf(java.lang.String) -> valueOf
cn.com.hoonsoft.zxing.camera.AutoFocusManager -> cn.com.hoonsoft.zxing.a.a:
    java.lang.String TAG -> a
    java.util.Collection FOCUS_MODES_CALLING_AF -> b
    boolean active -> c
    boolean useAutoFocus -> d
    android.hardware.Camera camera -> e
    android.os.AsyncTask outstandingTask -> f
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
    void start() -> a
    void stop() -> b
    boolean access$0(cn.com.hoonsoft.zxing.camera.AutoFocusManager) -> a
cn.com.hoonsoft.zxing.camera.AutoFocusManager$AutoFocusTask -> cn.com.hoonsoft.zxing.a.b:
    cn.com.hoonsoft.zxing.camera.AutoFocusManager this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.com.hoonsoft.zxing.camera.CameraConfigurationManager -> cn.com.hoonsoft.zxing.a.c:
    android.content.Context context -> a
    android.graphics.Point screenResolution -> b
    android.graphics.Point cameraResolution -> c
    void initFromCameraParameters(android.hardware.Camera) -> a
    android.graphics.Point getDisplaySize(android.view.Display) -> a
    void setDesiredCameraParameters(android.hardware.Camera,boolean) -> a
    android.graphics.Point getCameraResolution() -> a
    android.graphics.Point getScreenResolution() -> b
    boolean getTorchState(android.hardware.Camera) -> b
    void setTorch(android.hardware.Camera,boolean) -> b
    void initializeTorch(android.hardware.Camera$Parameters,android.content.SharedPreferences,boolean) -> a
    void doSetTorch(android.hardware.Camera$Parameters,boolean,boolean) -> a
    android.graphics.Point findBestPreviewSizeValue(android.hardware.Camera$Parameters,android.graphics.Point) -> a
    java.lang.String findSettableValue(java.util.Collection,java.lang.String[]) -> a
cn.com.hoonsoft.zxing.camera.CameraConfigurationManager$1 -> cn.com.hoonsoft.zxing.a.d:
    cn.com.hoonsoft.zxing.camera.CameraConfigurationManager this$0 -> a
    int compare(android.hardware.Camera$Size,android.hardware.Camera$Size) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.com.hoonsoft.zxing.camera.CameraManager -> cn.com.hoonsoft.zxing.a.e:
    java.lang.String TAG -> a
    android.content.Context context -> b
    cn.com.hoonsoft.zxing.camera.CameraConfigurationManager configManager -> c
    android.hardware.Camera camera -> d
    cn.com.hoonsoft.zxing.camera.AutoFocusManager autoFocusManager -> e
    android.graphics.Rect framingRect -> f
    android.graphics.Rect framingRectInPreview -> g
    boolean initialized -> h
    boolean previewing -> i
    int requestedFramingRectWidth -> j
    int requestedFramingRectHeight -> k
    cn.com.hoonsoft.zxing.camera.PreviewCallback previewCallback -> l
    void openDriver(android.view.SurfaceHolder) -> a
    boolean isOpen() -> a
    void closeDriver() -> b
    void startPreview() -> c
    void stopPreview() -> d
    void setTorch(boolean) -> a
    void requestPreviewFrame(android.os.Handler,int) -> a
    android.graphics.Rect getFramingRect() -> e
    int findDesiredDimensionInRange(int,int,int) -> a
    android.graphics.Rect getFramingRectInPreview() -> f
    void setManualFramingRect(int,int) -> a
    com.google.zxing.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> a
    void zoomOut() -> g
    void zoomIn() -> h
cn.com.hoonsoft.zxing.camera.FrontLightMode -> cn.com.hoonsoft.zxing.a.f:
    cn.com.hoonsoft.zxing.camera.FrontLightMode ON -> a
    cn.com.hoonsoft.zxing.camera.FrontLightMode AUTO -> b
    cn.com.hoonsoft.zxing.camera.FrontLightMode OFF -> c
    cn.com.hoonsoft.zxing.camera.FrontLightMode[] ENUM$VALUES -> d
    cn.com.hoonsoft.zxing.camera.FrontLightMode parse(java.lang.String) -> a
    cn.com.hoonsoft.zxing.camera.FrontLightMode readPref(android.content.SharedPreferences) -> a
    cn.com.hoonsoft.zxing.camera.FrontLightMode[] values() -> values
    cn.com.hoonsoft.zxing.camera.FrontLightMode valueOf(java.lang.String) -> valueOf
cn.com.hoonsoft.zxing.camera.OpenCameraInterface -> cn.com.hoonsoft.zxing.a.g:
    java.lang.String TAG -> a
    android.hardware.Camera open() -> a
cn.com.hoonsoft.zxing.camera.PreviewCallback -> cn.com.hoonsoft.zxing.a.h:
    java.lang.String TAG -> a
    cn.com.hoonsoft.zxing.camera.CameraConfigurationManager configManager -> b
    android.os.Handler previewHandler -> c
    int previewMessage -> d
    void setHandler(android.os.Handler,int) -> a
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
cn.com.hoonsoft.zxing.common.BitmapUtils -> cn.com.hoonsoft.zxing.b.a:
    int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
    android.graphics.Bitmap getCompressedBitmap(java.lang.String) -> a
cn.com.hoonsoft.zxing.common.Runnable -> cn.com.hoonsoft.zxing.b.b:
    void execAsync(android.os.AsyncTask) -> a
cn.com.hoonsoft.zxing.decode.BitmapDecoder -> cn.com.hoonsoft.zxing.c.a:
    com.google.zxing.MultiFormatReader multiFormatReader -> a
    com.google.zxing.Result getRawResult(android.graphics.Bitmap) -> a
cn.com.hoonsoft.zxing.decode.BitmapLuminanceSource -> cn.com.hoonsoft.zxing.c.b:
    byte[] bitmapPixels -> a
    byte[] getMatrix() -> getMatrix
    byte[] getRow(int,byte[]) -> getRow
cn.com.hoonsoft.zxing.decode.CaptureActivityHandler -> cn.com.hoonsoft.zxing.c.c:
    java.lang.String TAG -> a
    cn.com.hoonsoft.zxing.CaptureActivity activity -> b
    cn.com.hoonsoft.zxing.decode.DecodeThread decodeThread -> c
    cn.com.hoonsoft.zxing.decode.CaptureActivityHandler$State state -> d
    cn.com.hoonsoft.zxing.camera.CameraManager cameraManager -> e
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> a
    void restartPreviewAndDecode() -> b
cn.com.hoonsoft.zxing.decode.CaptureActivityHandler$State -> cn.com.hoonsoft.zxing.c.d:
    cn.com.hoonsoft.zxing.decode.CaptureActivityHandler$State PREVIEW -> a
    cn.com.hoonsoft.zxing.decode.CaptureActivityHandler$State SUCCESS -> b
    cn.com.hoonsoft.zxing.decode.CaptureActivityHandler$State DONE -> c
    cn.com.hoonsoft.zxing.decode.CaptureActivityHandler$State[] ENUM$VALUES -> d
    cn.com.hoonsoft.zxing.decode.CaptureActivityHandler$State[] values() -> values
    cn.com.hoonsoft.zxing.decode.CaptureActivityHandler$State valueOf(java.lang.String) -> valueOf
cn.com.hoonsoft.zxing.decode.DecodeFormatManager -> cn.com.hoonsoft.zxing.c.e:
    java.util.regex.Pattern COMMA_PATTERN -> e
    java.util.Collection PRODUCT_FORMATS -> a
    java.util.Collection ONE_D_FORMATS -> b
    java.util.Collection QR_CODE_FORMATS -> c
    java.util.Collection DATA_MATRIX_FORMATS -> d
cn.com.hoonsoft.zxing.decode.DecodeHandler -> cn.com.hoonsoft.zxing.c.f:
    java.lang.String TAG -> a
    cn.com.hoonsoft.zxing.CaptureActivity activity -> b
    com.google.zxing.MultiFormatReader multiFormatReader -> c
    boolean running -> d
    void handleMessage(android.os.Message) -> handleMessage
    void decode(byte[],int,int) -> a
    void bundleThumbnail(com.google.zxing.PlanarYUVLuminanceSource,android.os.Bundle) -> a
cn.com.hoonsoft.zxing.decode.DecodeThread -> cn.com.hoonsoft.zxing.c.g:
    cn.com.hoonsoft.zxing.CaptureActivity activity -> a
    java.util.Map hints -> b
    android.os.Handler handler -> c
    java.util.concurrent.CountDownLatch handlerInitLatch -> d
    android.os.Handler getHandler() -> a
    void run() -> run
cn.com.hoonsoft.zxing.view.ViewfinderResultPointCallback -> cn.com.hoonsoft.zxing.view.a:
    cn.com.hoonsoft.zxing.view.ViewfinderView viewfinderView -> a
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
cn.com.hoonsoft.zxing.view.ViewfinderView -> cn.com.hoonsoft.zxing.view.ViewfinderView:
    int CORNER_PADDING -> b
    int MIDDLE_LINE_WIDTH -> c
    int MIDDLE_LINE_PADDING -> d
    android.graphics.Paint paint -> e
    int slideTop -> f
    int slideBottom -> g
    android.graphics.Bitmap resultBitmap -> h
    int maskColor -> i
    int resultColor -> j
    int resultPointColor -> k
    java.util.List possibleResultPoints -> l
    java.util.List lastPossibleResultPoints -> m
    boolean isFirst -> a
    cn.com.hoonsoft.zxing.camera.CameraManager cameraManager -> n
    void setCameraManager(cn.com.hoonsoft.zxing.camera.CameraManager) -> setCameraManager
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawScanningLine(android.graphics.Canvas,android.graphics.Rect) -> a
    void drawCover(android.graphics.Canvas,android.graphics.Rect) -> b
    void drawRectEdges(android.graphics.Canvas,android.graphics.Rect) -> c
    void drawViewfinder() -> a
    void drawResultBitmap(android.graphics.Bitmap) -> a
    void addPossibleResultPoint(com.google.zxing.ResultPoint) -> a
    int dip2px(android.content.Context,float) -> a
cn.sharesdk.analysis.EventManager -> cn.sharesdk.analysis.EventManager:
    android.content.Context context -> context
    java.lang.String start_date -> start_date
    long start -> start
    java.lang.String end_date -> end_date
    long end -> end
    java.lang.String duration -> duration
    java.lang.String session_id -> session_id
    java.lang.String last_activity -> last_activity
    java.lang.String current_activity -> current_activity
    java.lang.String appkey -> appkey
    long sessionContinueMillis -> sessionContinueMillis
    boolean activityTrack -> activityTrack
    cn.sharesdk.analysis.util.PreferencesHelper dbHelper -> dbHelper
    cn.sharesdk.analysis.util.DeviceHelper deviceHelper -> deviceHelper
    java.util.HashMap eventDurationMap -> eventDurationMap
    java.util.HashMap eventLabelMap -> eventLabelMap
    java.util.HashMap pageDurationMap -> pageDurationMap
    java.util.ArrayList settingEventList -> settingEventList
    java.util.ArrayList cacheEventList -> cacheEventList
    cn.sharesdk.analysis.server.AIDLService aidlService -> aidlService
    android.content.ServiceConnection connection -> connection
    void init(android.content.Context) -> init
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void setBaseURL(java.lang.String) -> setBaseURL
    void setAppKey(java.lang.String) -> setAppKey
    void setDebugMode(boolean) -> setDebugMode
    java.lang.String getAppKey() -> getAppKey
    void setChannel(java.lang.String) -> setChannel
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void onError(android.content.Context,java.lang.String) -> onError
    void onError(android.content.Context) -> onError
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    long onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    long onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void setAutoLocation(boolean) -> setAutoLocation
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void isCreateNewSessionID() -> isCreateNewSessionID
    java.lang.String generateSeesion() -> generateSeesion
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void postLaunchDatas(android.content.Context) -> postLaunchDatas
    void onEvent(android.content.Context,cn.sharesdk.analysis.model.PostEvent) -> onEvent
    void onEventDuration(android.content.Context,cn.sharesdk.analysis.model.PostEvent) -> onEventDuration
    void isServiceConnect(android.content.Context) -> isServiceConnect
    void isUpdate(android.content.Context) -> isUpdate
    void uploadLog(android.content.Context) -> uploadLog
    void startLogService(java.lang.String,org.json.JSONObject) -> startLogService
    void startSettingService(java.lang.String,java.lang.String) -> startSettingService
    org.json.JSONObject getLaunchJSONObject() -> getLaunchJSONObject
    org.json.JSONObject getErrorJSONObject(java.lang.String) -> getErrorJSONObject
    org.json.JSONObject getPauseJSONObject() -> getPauseJSONObject
    void access$0(cn.sharesdk.analysis.server.AIDLService) -> access$0
    java.util.ArrayList access$1() -> access$1
    cn.sharesdk.analysis.server.AIDLService access$2() -> access$2
    java.util.ArrayList access$3() -> access$3
cn.sharesdk.analysis.EventManager$1 -> cn.sharesdk.analysis.EventManager$1:
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
cn.sharesdk.analysis.LoggerThread -> cn.sharesdk.analysis.LoggerThread:
    cn.sharesdk.analysis.LoggerThread loggerThread -> loggerThread
    cn.sharesdk.analysis.LoggerThread getInstance() -> getInstance
    void onError(android.content.Context) -> onError
    void onEventDuration(android.content.Context,cn.sharesdk.analysis.model.PostEvent) -> onEventDuration
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void isUpdate(android.content.Context) -> isUpdate
    void onError(android.content.Context,java.lang.String) -> onError
    void onEvent(android.content.Context,cn.sharesdk.analysis.model.PostEvent) -> onEvent
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    long onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    long onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void uploadLogDelay(android.content.Context,int) -> uploadLogDelay
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void setBaseURL(java.lang.String) -> setBaseURL
    void setAutoLocation(boolean) -> setAutoLocation
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void setDebugMode(boolean) -> setDebugMode
cn.sharesdk.analysis.MobclickAgent -> cn.sharesdk.analysis.MobclickAgent:
    cn.sharesdk.analysis.LoggerThread log -> log
    cn.sharesdk.analysis.MobclickAgent mobclickAgent -> mobclickAgent
    void setBaseURL(java.lang.String) -> setBaseURL
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setDebugMode(boolean) -> setDebugMode
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void onError(android.content.Context) -> onError
    void onError(android.content.Context,java.lang.String) -> onError
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.HashMap) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int,java.util.HashMap) -> onEvent
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,long,java.util.HashMap) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,int,long,java.util.HashMap) -> onEventDuration
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void setAutoLocation(boolean) -> setAutoLocation
cn.sharesdk.analysis.MobclickAgentJSInterface -> cn.sharesdk.analysis.MobclickAgentJSInterface:
    android.content.Context context -> context
    android.content.Context access$0(cn.sharesdk.analysis.MobclickAgentJSInterface) -> access$0
cn.sharesdk.analysis.MobclickAgentJSInterface$StatisticsWebClient -> cn.sharesdk.analysis.MobclickAgentJSInterface$StatisticsWebClient:
    android.webkit.WebChromeClient webClient -> webClient
    cn.sharesdk.analysis.MobclickAgentJSInterface this$0 -> this$0
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onRequestFocus(android.webkit.WebView) -> onRequestFocus
cn.sharesdk.analysis.db.DBHelp -> cn.sharesdk.analysis.db.DBHelp:
    java.lang.String DBFILE -> DBFILE
    java.lang.String DBParentFile -> DBParentFile
    int VERSION -> VERSION
    java.lang.String TABLE_STATISTICS -> TABLE_STATISTICS
    java.lang.String COLUMN_ID -> COLUMN_ID
    java.lang.String COLUMN_EVENT_TYPE -> COLUMN_EVENT_TYPE
    java.lang.String COLUMN_EVENT_DATA -> COLUMN_EVENT_DATA
    java.lang.String CREATE_STATISTICS_SQL -> CREATE_STATISTICS_SQL
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
    void clear() -> clear
cn.sharesdk.analysis.db.DBProvider -> cn.sharesdk.analysis.db.DBProvider:
    android.content.Context context -> context
    cn.sharesdk.analysis.db.DBHelp dbHelp -> dbHelp
    cn.sharesdk.analysis.db.DBProvider provider -> provider
    cn.sharesdk.analysis.db.DBProvider getDBProvider(android.content.Context) -> getDBProvider
    android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    long insert(java.lang.String,android.content.ContentValues) -> insert
    long transactInsert(java.lang.String,java.util.List) -> transactInsert
    int delete(java.lang.String,java.lang.String,java.lang.String[]) -> delete
    int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    void close() -> close
    int getCount(java.lang.String) -> getCount
cn.sharesdk.analysis.db.MessageModel -> cn.sharesdk.analysis.db.MessageModel:
    java.lang.String data -> data
    java.util.ArrayList idList -> idList
cn.sharesdk.analysis.db.MessageUtils -> cn.sharesdk.analysis.db.MessageUtils:
    int WIFI -> WIFI
    int MOBILE_3G -> MOBILE_3G
    int NONE -> NONE
    java.lang.String DEVICE_DATA -> DEVICE_DATA
    java.lang.String LAUNCH_DATA -> LAUNCH_DATA
    java.lang.String EXIT_DATA -> EXIT_DATA
    java.lang.String ERROR_DATA -> ERROR_DATA
    java.lang.String EVENT_DATA -> EVENT_DATA
    java.lang.String HASH_EVENT_DATA -> HASH_EVENT_DATA
    java.lang.String PAGE_DATA -> PAGE_DATA
    long insertMsg(android.content.Context,java.lang.String,java.lang.String) -> insertMsg
    long deleteMsgByID(android.content.Context,java.lang.String) -> deleteMsgByID
    long deleteMsgByType(android.content.Context,java.lang.String) -> deleteMsgByType
    long deleteManyMsg(android.content.Context,java.util.ArrayList) -> deleteManyMsg
    java.util.ArrayList getEventMsg(android.content.Context,java.lang.String,java.lang.String[]) -> getEventMsg
    java.util.ArrayList getEventMsg(android.content.Context) -> getEventMsg
cn.sharesdk.analysis.model.AIDLCacheEvent -> cn.sharesdk.analysis.model.AIDLCacheEvent:
    java.lang.String key -> key
    java.lang.String value -> value
    cn.sharesdk.analysis.model.EventType eventType -> eventType
cn.sharesdk.analysis.model.EventType -> cn.sharesdk.analysis.model.EventType:
    cn.sharesdk.analysis.model.EventType SETTING -> SETTING
    cn.sharesdk.analysis.model.EventType SAVELOG -> SAVELOG
    cn.sharesdk.analysis.model.EventType UPDATE_APK -> UPDATE_APK
    cn.sharesdk.analysis.model.EventType UPDATE_ONLINE_CONFIG -> UPDATE_ONLINE_CONFIG
    cn.sharesdk.analysis.model.EventType UPLOAD_LOG -> UPLOAD_LOG
    cn.sharesdk.analysis.model.EventType[] ENUM$VALUES -> ENUM$VALUES
    cn.sharesdk.analysis.model.EventType[] values() -> values
    cn.sharesdk.analysis.model.EventType valueOf(java.lang.String) -> valueOf
cn.sharesdk.analysis.model.PostEvent -> cn.sharesdk.analysis.model.PostEvent:
    java.lang.String event_id -> event_id
    java.lang.String label -> label
    java.lang.String acc -> acc
    java.lang.String time -> time
    java.lang.String activity -> activity
    java.lang.String session_id -> session_id
    long duration -> duration
    cn.sharesdk.analysis.util.PreferencesHelper dbHelper -> dbHelper
    cn.sharesdk.analysis.util.DeviceHelper deviceHelper -> deviceHelper
    java.util.HashMap stringMap -> stringMap
    boolean verification() -> verification
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.String getActivity() -> getActivity
    void setActivity(java.lang.String) -> setActivity
    java.lang.String getEvent_id() -> getEvent_id
    void setEvent_id(java.lang.String) -> setEvent_id
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getAcc() -> getAcc
    void setAcc(java.lang.String) -> setAcc
    java.util.HashMap getStringMap() -> getStringMap
    void setStringMap(java.util.HashMap) -> setStringMap
    long getDuration() -> getDuration
    void setDuration(long) -> setDuration
    org.json.JSONObject eventToJOSNObj() -> eventToJOSNObj
    org.json.JSONObject getEventJOSNobj() -> getEventJOSNobj
    org.json.JSONObject getEventKVJOSNobj() -> getEventKVJOSNobj
cn.sharesdk.analysis.model.PostResult -> cn.sharesdk.analysis.model.PostResult:
    boolean success -> success
    java.lang.String responseMsg -> responseMsg
    boolean isSuccess() -> isSuccess
    void setSuccess(boolean) -> setSuccess
    java.lang.String getResponseMsg() -> getResponseMsg
    void setResponseMsg(java.lang.String) -> setResponseMsg
cn.sharesdk.analysis.net.NetworkHelper -> cn.sharesdk.analysis.net.NetworkHelper:
    java.lang.String Base64Gzip(java.lang.String) -> Base64Gzip
    cn.sharesdk.analysis.model.PostResult post(java.lang.String,java.lang.String,java.lang.String) -> post
    cn.sharesdk.analysis.model.PostResult parse(int,java.lang.String) -> parse
cn.sharesdk.analysis.net.UpdateManager -> cn.sharesdk.analysis.net.UpdateManager:
    java.lang.String appkey -> appkey
    android.content.Context mContext -> mContext
    java.lang.String mforce -> mforce
    android.app.ProgressDialog progressDialog -> progressDialog
    java.lang.String Msg -> Msg
    java.lang.String updateMsg -> updateMsg
    java.lang.String apkUrl -> apkUrl
    android.app.Dialog noticeDialog -> noticeDialog
    java.lang.String savePath -> savePath
    java.lang.String saveFile -> saveFile
    int DOWN_UPDATE -> DOWN_UPDATE
    int DOWN_OVER -> DOWN_OVER
    int progress -> progress
    java.lang.Thread downLoadThread -> downLoadThread
    boolean interceptFlag -> interceptFlag
    java.lang.String newVersion -> newVersion
    java.lang.String newtime -> newtime
    android.os.Handler mHandler -> mHandler
    java.lang.String nametimeString -> nametimeString
    java.lang.Runnable mdownApkRunnable -> mdownApkRunnable
    java.lang.String now() -> now
    void showNoticeDialog(android.content.Context) -> showNoticeDialog
    void showSdDialog(android.content.Context) -> showSdDialog
    void showDownloadDialog(android.content.Context) -> showDownloadDialog
    void downloadApk() -> downloadApk
    void installApk() -> installApk
    int access$0() -> access$0
    void access$1() -> access$1
    java.lang.String access$2() -> access$2
    void access$3(int) -> access$3
    android.os.Handler access$4() -> access$4
    boolean access$5() -> access$5
    void access$6(android.content.Context) -> access$6
    void access$7(boolean) -> access$7
cn.sharesdk.analysis.net.UpdateManager$1 -> cn.sharesdk.analysis.net.UpdateManager$1:
    void handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.analysis.net.UpdateManager$2 -> cn.sharesdk.analysis.net.UpdateManager$2:
    void run() -> run
cn.sharesdk.analysis.net.UpdateManager$3 -> cn.sharesdk.analysis.net.UpdateManager$3:
    cn.sharesdk.analysis.net.UpdateManager this$0 -> this$0
    android.content.Context val$context -> val$context
    void onClick(android.content.DialogInterface,int) -> onClick
cn.sharesdk.analysis.net.UpdateManager$4 -> cn.sharesdk.analysis.net.UpdateManager$4:
    cn.sharesdk.analysis.net.UpdateManager this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
cn.sharesdk.analysis.net.UpdateManager$5 -> cn.sharesdk.analysis.net.UpdateManager$5:
    void onClick(android.content.DialogInterface,int) -> onClick
cn.sharesdk.analysis.net.UpdateManager$6 -> cn.sharesdk.analysis.net.UpdateManager$6:
    void onClick(android.content.DialogInterface,int) -> onClick
cn.sharesdk.analysis.server.AIDLService -> cn.sharesdk.analysis.server.AIDLService:
    void setting(java.lang.String,java.lang.String) -> setting
    void saveLog(java.lang.String,java.lang.String) -> saveLog
    void uploadLog() -> uploadLog
    void updateApk() -> updateApk
cn.sharesdk.analysis.server.AIDLService$Stub -> cn.sharesdk.analysis.server.AIDLService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_setting -> TRANSACTION_setting
    int TRANSACTION_saveLog -> TRANSACTION_saveLog
    int TRANSACTION_uploadLog -> TRANSACTION_uploadLog
    int TRANSACTION_updateApk -> TRANSACTION_updateApk
    cn.sharesdk.analysis.server.AIDLService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
cn.sharesdk.analysis.server.AIDLService$Stub$Proxy -> cn.sharesdk.analysis.server.AIDLService$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void setting(java.lang.String,java.lang.String) -> setting
    void saveLog(java.lang.String,java.lang.String) -> saveLog
    void uploadLog() -> uploadLog
    void updateApk() -> updateApk
cn.sharesdk.analysis.server.RemoteService -> cn.sharesdk.analysis.server.RemoteService:
    java.lang.String SET_APP_KEY -> SET_APP_KEY
    java.lang.String SET_PREURL -> SET_PREURL
    java.lang.String SET_CHANNEL -> SET_CHANNEL
    java.lang.String SET_LOCATION -> SET_LOCATION
    java.lang.String SET_ISDEBUG -> SET_ISDEBUG
    cn.sharesdk.analysis.server.ServiceHelper serviceHelper -> serviceHelper
    cn.sharesdk.analysis.server.AIDLService$Stub bind -> bind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onRebind(android.content.Intent) -> onRebind
    android.os.IBinder onBind(android.content.Intent) -> onBind
cn.sharesdk.analysis.server.RemoteService$1 -> cn.sharesdk.analysis.server.RemoteService$1:
    cn.sharesdk.analysis.server.RemoteService this$0 -> this$0
    void uploadLog() -> uploadLog
    void setting(java.lang.String,java.lang.String) -> setting
    void saveLog(java.lang.String,java.lang.String) -> saveLog
    void updateApk() -> updateApk
cn.sharesdk.analysis.server.ServiceHelper -> cn.sharesdk.analysis.server.ServiceHelper:
    int UPLOAD_LOG -> UPLOAD_LOG
    int SAVE_SEND_LOG -> SAVE_SEND_LOG
    int IS_UPDATE_APK -> IS_UPDATE_APK
    int EXIT_APP -> EXIT_APP
    java.lang.String PLATFORM_ID -> PLATFORM_ID
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String uploadUrl -> uploadUrl
    java.lang.String updateApk -> updateApk
    int appExitCount -> appExitCount
    java.lang.String appkey -> appkey
    java.lang.String channel -> channel
    java.lang.String preUrl -> preUrl
    boolean appBackRunning -> appBackRunning
    boolean autoLocation -> autoLocation
    boolean setBaseURL -> setBaseURL
    android.content.Context context -> context
    android.os.Handler handler -> handler
    cn.sharesdk.analysis.util.PreferencesHelper preference -> preference
    cn.sharesdk.analysis.util.DeviceHelper deviceHelper -> deviceHelper
    cn.sharesdk.analysis.server.ServiceHelper serviceHelper -> serviceHelper
    cn.sharesdk.analysis.server.ServiceHelper getInstance(cn.sharesdk.analysis.server.RemoteService) -> getInstance
    void sendUploadLogMsg() -> sendUploadLogMsg
    void saveAndSendLogMsg(android.os.Bundle) -> saveAndSendLogMsg
    void sendUpdateApkMsg() -> sendUpdateApkMsg
    void sendIsAppExitMsg() -> sendIsAppExitMsg
    void setAutoLocation(boolean) -> setAutoLocation
    void setAppKey(java.lang.String) -> setAppKey
    java.lang.String getAppKey() -> getAppKey
    void setChannel(java.lang.String) -> setChannel
    java.lang.String getChannel() -> getChannel
    void setBaseURL(java.lang.String) -> setBaseURL
    java.lang.String getUploadLogUrl() -> getUploadLogUrl
    java.lang.String getUpdateUrl() -> getUpdateUrl
    java.lang.String getLatitude() -> getLatitude
    java.lang.String getLongitude() -> getLongitude
    void uploadAllLog() -> uploadAllLog
    boolean uploadLog(cn.sharesdk.analysis.db.MessageModel) -> uploadLog
    void isUpdate() -> isUpdate
    boolean parseResponseData(java.lang.String) -> parseResponseData
    org.json.JSONObject getDeviceJSONObject() -> getDeviceJSONObject
    boolean isAppExit() -> isAppExit
    java.lang.String getExitAppString() -> getExitAppString
    boolean handleMessage(android.os.Message) -> handleMessage
    boolean access$0(cn.sharesdk.analysis.server.ServiceHelper) -> access$0
    int access$1(cn.sharesdk.analysis.server.ServiceHelper) -> access$1
    void access$2(cn.sharesdk.analysis.server.ServiceHelper,int) -> access$2
    cn.sharesdk.analysis.util.PreferencesHelper access$3(cn.sharesdk.analysis.server.ServiceHelper) -> access$3
    android.content.Context access$4(cn.sharesdk.analysis.server.ServiceHelper) -> access$4
    java.lang.String access$5(cn.sharesdk.analysis.server.ServiceHelper) -> access$5
    void access$6(cn.sharesdk.analysis.server.ServiceHelper,boolean) -> access$6
cn.sharesdk.analysis.server.ServiceHelper$1 -> cn.sharesdk.analysis.server.ServiceHelper$1:
    cn.sharesdk.analysis.server.ServiceHelper this$0 -> this$0
    void run() -> run
cn.sharesdk.analysis.util.CrashHandler -> cn.sharesdk.analysis.util.CrashHandler:
    cn.sharesdk.analysis.util.CrashHandler myCrashHandler -> myCrashHandler
    android.content.Context context -> context
    cn.sharesdk.analysis.util.PreferencesHelper dbHelper -> dbHelper
    cn.sharesdk.analysis.util.DeviceHelper deviceHelper -> deviceHelper
    cn.sharesdk.analysis.util.CrashHandler getInstance() -> getInstance
    void init(android.content.Context) -> init
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    org.json.JSONObject getErrorJSONObject(java.lang.String,java.lang.String) -> getErrorJSONObject
    java.lang.String getErrorInfo(java.lang.Throwable) -> getErrorInfo
cn.sharesdk.analysis.util.DeviceHelper -> cn.sharesdk.analysis.util.DeviceHelper:
    android.content.Context context -> context
    cn.sharesdk.analysis.util.DeviceHelper deviceHelper -> deviceHelper
    cn.sharesdk.analysis.util.DeviceHelper getInstance(android.content.Context) -> getInstance
    boolean checkPermissions(java.lang.String) -> checkPermissions
    boolean currentNetworkTypeIsWIFI() -> currentNetworkTypeIsWIFI
    boolean isWiFiActive() -> isWiFiActive
    boolean isNetworkAvailable() -> isNetworkAvailable
    java.lang.String getTime() -> getTime
    java.lang.String getTime(long) -> getTime
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getChannel() -> getChannel
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String getMetaDataValue(java.lang.String) -> getMetaDataValue
    java.lang.String getActivityName() -> getActivityName
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getSysVersion() -> getSysVersion
    java.lang.String getDeviceID() -> getDeviceID
    java.lang.String getCurVersion() -> getCurVersion
    boolean isHaveGravity() -> isHaveGravity
    boolean isNetworkTypeWifi() -> isNetworkTypeWifi
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getVersionCode() -> getVersionCode
    java.lang.String getCarrier() -> getCarrier
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.String getNetworkType() -> getNetworkType
    boolean isFastMobileNetwork() -> isFastMobileNetwork
    java.lang.String getDeviceKey() -> getDeviceKey
    java.lang.String getModel() -> getModel
    java.lang.String getFactory() -> getFactory
    java.lang.String getManuTime() -> getManuTime
    java.lang.String getManuID() -> getManuID
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getTimeZone() -> getTimeZone
    boolean isRooted() -> isRooted
    java.lang.String getCpuName() -> getCpuName
    java.lang.String byteToHex(byte[]) -> byteToHex
    byte[] SHA1(java.lang.String) -> SHA1
    boolean getSdcardState() -> getSdcardState
    java.lang.String getLocalDeviceKey() -> getLocalDeviceKey
    void saveLocalDeviceKey(java.lang.String) -> saveLocalDeviceKey
    java.lang.String getMacAddress() -> getMacAddress
    java.lang.Object getSystemService(java.lang.String) -> getSystemService
    android.location.Location getLocation() -> getLocation
    java.lang.String getLatitude() -> getLatitude
    java.lang.String getLongitude() -> getLongitude
    int dipToPx(int) -> dipToPx
cn.sharesdk.analysis.util.Ln -> cn.sharesdk.analysis.util.Ln:
    boolean DebugMode -> DebugMode
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Exception) -> i
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Exception) -> v
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Exception) -> w
cn.sharesdk.analysis.util.PreferencesHelper -> cn.sharesdk.analysis.util.PreferencesHelper:
    int WIFI_SEND_POLICY -> WIFI_SEND_POLICY
    int LAUNCH_SEND_POLICY -> LAUNCH_SEND_POLICY
    int DELAY_SEND_POLICY -> DELAY_SEND_POLICY
    android.content.Context context -> context
    java.lang.String packageName -> packageName
    cn.sharesdk.analysis.util.PreferencesHelper dbHelper -> dbHelper
    cn.sharesdk.analysis.util.PreferencesHelper getInstance(android.content.Context) -> getInstance
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String GetInfoFromFile() -> GetInfoFromFile
    void saveInfoToFile(java.lang.String,org.json.JSONObject) -> saveInfoToFile
    boolean deleteCacheFile() -> deleteCacheFile
    void setReportPolicy(int,int) -> setReportPolicy
    int getReportPolicy() -> getReportPolicy
    int getReportDelay() -> getReportDelay
    void setReportApiPath(java.lang.String) -> setReportApiPath
    java.lang.String getReportApiPath() -> getReportApiPath
    void setSessionTime() -> setSessionTime
    long getSessionTime() -> getSessionTime
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getSessionID() -> getSessionID
    void setLastReportTime(long) -> setLastReportTime
    long getLastReportTime() -> getLastReportTime
    void setAppExitDate() -> setAppExitDate
    java.lang.String getAppExitDate() -> getAppExitDate
    void setAppStartDate() -> setAppStartDate
    java.lang.String getAppStartDate() -> getAppStartDate
    void saveInfoToFile(org.json.JSONObject) -> saveInfoToFile
cn.sharesdk.facebook.Facebook -> cn.sharesdk.facebook.Facebook:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void userInfor(java.lang.String) -> userInfor
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.facebook.Facebook) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.facebook.Facebook) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.facebook.Facebook) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.facebook.Facebook) -> d
    void a(cn.sharesdk.facebook.Facebook,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener e(cn.sharesdk.facebook.Facebook) -> e
    cn.sharesdk.framework.PlatformActionListener f(cn.sharesdk.facebook.Facebook) -> f
cn.sharesdk.facebook.Facebook$ShareParams -> cn.sharesdk.facebook.Facebook$ShareParams:
cn.sharesdk.facebook.a -> cn.sharesdk.facebook.a:
    cn.sharesdk.facebook.d a -> a
    cn.sharesdk.facebook.Facebook b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.facebook.b -> cn.sharesdk.facebook.b:
    java.lang.String d -> d
    java.lang.String[] e -> e
    void a(java.lang.String,java.lang.String[]) -> a
    void a() -> a
    boolean b() -> b
    boolean b(android.content.Intent) -> b
    void a(int,int,android.content.Intent) -> a
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
cn.sharesdk.facebook.c -> cn.sharesdk.facebook.c:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
cn.sharesdk.facebook.d -> cn.sharesdk.facebook.d:
    java.lang.String[] b -> b
    cn.sharesdk.facebook.d c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    cn.sharesdk.framework.network.i h -> h
    java.lang.String[] i -> i
    cn.sharesdk.facebook.d a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    boolean a() -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    void a(java.lang.String[]) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.util.HashMap b(java.lang.String) -> b
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.facebook.d,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.facebook.e -> cn.sharesdk.facebook.e:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.facebook.d b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.feedback.FeedbackActivity -> cn.sharesdk.feedback.FeedbackActivity:
    android.view.View backView -> backView
    android.widget.TextView tvTitle -> tvTitle
    android.widget.EditText etContent -> etContent
    android.widget.Button btnSendMsg -> btnSendMsg
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> initView
    void onClick(android.view.View) -> onClick
cn.sharesdk.feedback.FeedbackAgent -> cn.sharesdk.feedback.FeedbackAgent:
    android.content.Context context -> context
    void startFeedbackActivity() -> startFeedbackActivity
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.framework.CustomPlatform:
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    int getCustomPlatformId() -> getCustomPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.FakeActivity -> cn.sharesdk.framework.FakeActivity:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.FakeActivity resultReceiver -> resultReceiver
    java.util.HashMap result -> result
    android.view.View contentView -> contentView
    void setActivity(android.app.Activity) -> setActivity
    void setContentView(android.view.View) -> setContentView
    android.view.View getContentView() -> getContentView
    void onCreate() -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    void finish() -> finish
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context getContext() -> getContext
    void show(android.content.Context,android.content.Intent) -> show
    void showForResult(android.content.Context,android.content.Intent,cn.sharesdk.framework.FakeActivity) -> showForResult
    cn.sharesdk.framework.FakeActivity getParent() -> getParent
    void setResult(java.util.HashMap) -> setResult
    void sendResult() -> sendResult
    void onResult(java.util.HashMap) -> onResult
    void runOnUIThread(java.lang.Runnable) -> runOnUIThread
    void runOnUIThread(java.lang.Runnable,long) -> runOnUIThread
cn.sharesdk.framework.Platform -> cn.sharesdk.framework.Platform:
    int ACTION_AUTHORIZING -> ACTION_AUTHORIZING
    int ACTION_GETTING_FRIEND_LIST -> ACTION_GETTING_FRIEND_LIST
    int ACTION_SENDING_DIRECT_MESSAGE -> ACTION_SENDING_DIRECT_MESSAGE
    int ACTION_FOLLOWING_USER -> ACTION_FOLLOWING_USER
    int ACTION_TIMELINE -> ACTION_TIMELINE
    int ACTION_USER_INFOR -> ACTION_USER_INFOR
    int ACTION_SHARE -> ACTION_SHARE
    int ACTION_CUSTOMER -> ACTION_CUSTOMER
    int CUSTOMER_ACTION_MASK -> CUSTOMER_ACTION_MASK
    int SHARE_TEXT -> SHARE_TEXT
    int SHARE_IMAGE -> SHARE_IMAGE
    int SHARE_WEBPAGE -> SHARE_WEBPAGE
    int SHARE_MUSIC -> SHARE_MUSIC
    int SHARE_VIDEO -> SHARE_VIDEO
    int SHARE_APPS -> SHARE_APPS
    int SHARE_FILE -> SHARE_FILE
    int SHARE_EMOJI -> SHARE_EMOJI
    cn.sharesdk.framework.i a -> a
    android.content.Context context -> context
    cn.sharesdk.framework.PlatformDb db -> db
    cn.sharesdk.framework.PlatformActionListener listener -> listener
    void a() -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getDevinfo(java.lang.String) -> getDevinfo
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> getDevinfo
    java.lang.String getNetworkDevinfo(java.lang.String,java.lang.String) -> getNetworkDevinfo
    java.lang.String getNetworkDevinfo(int,java.lang.String,java.lang.String) -> getNetworkDevinfo
    android.content.Context getContext() -> getContext
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getId() -> getId
    int getPlatformId() -> getPlatformId
    int getSortId() -> getSortId
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> setPlatformActionListener
    cn.sharesdk.framework.PlatformActionListener getPlatformActionListener() -> getPlatformActionListener
    boolean isValid() -> isValid
    void SSOSetting(boolean) -> SSOSetting
    boolean isSSODisable() -> isSSODisable
    boolean b() -> b
    void authorize() -> authorize
    void authorize(java.lang.String[]) -> authorize
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void innerAuthorize(int,java.lang.Object) -> innerAuthorize
    void share(cn.sharesdk.framework.Platform$ShareParams) -> share
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void followFriend(java.lang.String) -> followFriend
    void follow(java.lang.String) -> follow
    void getTimeLine(java.lang.String,int,int) -> getTimeLine
    void timeline(int,int,java.lang.String) -> timeline
    void showUser(java.lang.String) -> showUser
    void userInfor(java.lang.String) -> userInfor
    void listFriend(int,int,java.lang.String) -> listFriend
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void customerProtocol(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> customerProtocol
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void afterRegister(int,java.lang.Object) -> afterRegister
    cn.sharesdk.framework.PlatformDb getDb() -> getDb
    void removeAccount() -> removeAccount
    java.lang.String getShortLintk(java.lang.String,boolean) -> getShortLintk
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    java.lang.String uploadImageToFileServer(android.graphics.Bitmap) -> uploadImageToFileServer
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.framework.Platform$ShareParams:
    java.lang.String text -> text
    java.lang.String imagePath -> imagePath
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.framework.PlatformActionListener:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.framework.PlatformDb:
    java.lang.String DB_NAME -> DB_NAME
    android.content.SharedPreferences db -> db
    java.lang.String platformNname -> platformNname
    int platformVersion -> platformVersion
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    java.lang.String getToken() -> getToken
    void putToken(java.lang.String) -> putToken
    java.lang.String getTokenSecret() -> getTokenSecret
    void putTokenSecret(java.lang.String) -> putTokenSecret
    long getExpiresIn() -> getExpiresIn
    void putExpiresIn(long) -> putExpiresIn
    long getExpiresTime() -> getExpiresTime
    int getPlatformVersion() -> getPlatformVersion
    java.lang.String getPlatformNname() -> getPlatformNname
    void putUserId(java.lang.String) -> putUserId
    java.lang.String getUserId() -> getUserId
    java.lang.String getUserName() -> getUserName
    java.lang.String getUserIcon() -> getUserIcon
    void removeAccount() -> removeAccount
    java.lang.String exportData() -> exportData
    void importData(java.lang.String) -> importData
    boolean isValid() -> isValid
    java.lang.String getUserGender() -> getUserGender
cn.sharesdk.framework.Service -> cn.sharesdk.framework.Service:
    android.content.Context a -> a
    java.lang.String b -> b
    void a(android.content.Context) -> a
    android.content.Context getContext() -> getContext
    void a(java.lang.String) -> a
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getDeviceKey() -> getDeviceKey
    int getServiceVersionInt() -> getServiceVersionInt
    java.lang.String getServiceVersionName() -> getServiceVersionName
    void onBind() -> onBind
    void onUnbind() -> onUnbind
    android.content.Context a(cn.sharesdk.framework.Service) -> a
cn.sharesdk.framework.Service$ServiceEvent -> cn.sharesdk.framework.Service$ServiceEvent:
    int PLATFORM -> PLATFORM
    cn.sharesdk.framework.Service service -> service
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    java.util.HashMap filterShareContent(int,cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.framework.ShareSDK:
    cn.sharesdk.framework.p a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> initSDK
    void initSDK(android.content.Context,boolean) -> initSDK
    void initSDK(android.content.Context,java.lang.String) -> initSDK
    void initSDK(android.content.Context,java.lang.String,boolean) -> initSDK
    void stopSDK(android.content.Context) -> stopSDK
    void stopSDK() -> stopSDK
    void c() -> c
    void registerService(java.lang.Class) -> registerService
    void unregisterService(java.lang.Class) -> unregisterService
    cn.sharesdk.framework.Service getService(java.lang.Class) -> getService
    void registerPlatform(java.lang.Class) -> registerPlatform
    void unregisterPlatform(java.lang.Class) -> unregisterPlatform
    java.lang.String getSDKVersionName() -> getSDKVersionName
    int getSDKVersionCode() -> getSDKVersionCode
    void setConnTimeout(int) -> setConnTimeout
    void setReadTimeout(int) -> setReadTimeout
    void removeCookieOnAuthorize(boolean) -> removeCookieOnAuthorize
    cn.sharesdk.framework.Platform[] getPlatformList(android.content.Context) -> getPlatformList
    cn.sharesdk.framework.Platform[] getPlatformList() -> getPlatformList
    cn.sharesdk.framework.Platform getPlatform(android.content.Context,java.lang.String) -> getPlatform
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> getPlatform
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> logDemoEvent
    void logApiEvent(java.lang.String,int) -> logApiEvent
    void setPlatformDevInfo(java.lang.String,java.util.HashMap) -> setPlatformDevInfo
    java.lang.String platformIdToName(int) -> platformIdToName
    int platformNameToId(java.lang.String) -> platformNameToId
    boolean isRemoveCookieOnAuthorize() -> isRemoveCookieOnAuthorize
    void closeDebug() -> closeDebug
    boolean isDebug() -> isDebug
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
cn.sharesdk.framework.ShareSDKUIShell -> cn.sharesdk.framework.ShareSDKUIShell:
    java.util.HashMap a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    java.lang.String a(cn.sharesdk.framework.FakeActivity) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.FakeActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
cn.sharesdk.framework.TitleLayout -> cn.sharesdk.framework.TitleLayout:
    android.widget.ImageView btnBack -> btnBack
    android.widget.TextView tvTitle -> tvTitle
    android.widget.TextView btnRight -> btnRight
    void init(android.content.Context) -> init
    android.widget.ImageView getBtnBack() -> getBtnBack
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.TextView getBtnRight() -> getBtnRight
cn.sharesdk.framework.a -> cn.sharesdk.framework.a:
    cn.sharesdk.framework.FakeActivity a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.a.a -> cn.sharesdk.framework.a.a:
    android.content.Context a -> a
    cn.sharesdk.framework.a.a d -> d
    java.lang.String b -> b
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String c -> c
    boolean h -> h
    int i -> i
    cn.sharesdk.framework.network.h j -> j
    cn.sharesdk.framework.a.a a(android.content.Context) -> a
    void a(boolean) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    long a() -> a
    long a(java.lang.String) -> a
    void a(cn.sharesdk.framework.a.b.c) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(android.graphics.Bitmap) -> a
    void b() -> b
    boolean b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(java.lang.String,byte[]) -> a
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String a(java.lang.String,java.lang.String,int,boolean,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.util.HashMap c() -> c
    void d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
cn.sharesdk.framework.a.a.a -> cn.sharesdk.framework.a.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.a.a.b -> cn.sharesdk.framework.a.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.a.a.a b -> b
    cn.sharesdk.framework.a.a.b c -> c
    cn.sharesdk.framework.a.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.a.a.c -> cn.sharesdk.framework.a.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.sharesdk.framework.a.a.c c -> c
    cn.sharesdk.framework.a.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,int) -> a
    int c(java.lang.String) -> c
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    java.lang.String e() -> e
cn.sharesdk.framework.a.a.d -> cn.sharesdk.framework.a.a.d:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.a.a.e -> cn.sharesdk.framework.a.a.e:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.a.b -> cn.sharesdk.framework.a.b:
    cn.sharesdk.framework.a.b b -> b
    android.content.Context c -> c
    cn.sharesdk.framework.utils.b d -> d
    cn.sharesdk.framework.a.a e -> e
    java.lang.String f -> f
    android.os.Handler g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    boolean l -> l
    cn.sharesdk.framework.a.b a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void a(cn.sharesdk.framework.a.b.c) -> a
    void b(cn.sharesdk.framework.a.b.c) -> b
    void c(android.os.Message) -> c
    void c(cn.sharesdk.framework.a.b.c) -> c
    void c() -> c
    boolean d() -> d
    void e() -> e
cn.sharesdk.framework.a.b.a -> cn.sharesdk.framework.a.b.a:
    int c -> c
    long d -> d
    int a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.a.b.b -> cn.sharesdk.framework.a.b.b:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.a.b.c -> cn.sharesdk.framework.a.b.c:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.a.b.d -> cn.sharesdk.framework.a.b.d:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.a.b.e -> cn.sharesdk.framework.a.b.e:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.a.b.f -> cn.sharesdk.framework.a.b.f:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.a.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.a.b.f$a -> cn.sharesdk.framework.a.b.f$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.a.b.g -> cn.sharesdk.framework.a.b.g:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.authorize.AuthorizeAdapter -> cn.sharesdk.framework.authorize.AuthorizeAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    java.lang.String platform -> platform
    android.widget.RelativeLayout rlBody -> rlBody
    boolean popUpAnimationDisable -> popUpAnimationDisable
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setPlatformName(java.lang.String) -> setPlatformName
    java.lang.String getPlatformName() -> getPlatformName
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onResize(int,int,int,int) -> onResize
    void onDestroy() -> onDestroy
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void disablePopUpAnimation() -> disablePopUpAnimation
    boolean isPopUpAnimationDisable() -> isPopUpAnimationDisable
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void hideShareSDKLogo() -> hideShareSDKLogo
cn.sharesdk.framework.authorize.AuthorizeHelper -> cn.sharesdk.framework.authorize.AuthorizeHelper:
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.authorize.AuthorizeListener -> cn.sharesdk.framework.authorize.AuthorizeListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.framework.authorize.RegisterView -> cn.sharesdk.framework.authorize.RegisterView:
    cn.sharesdk.framework.TitleLayout a -> a
    android.widget.RelativeLayout b -> b
    android.webkit.WebView c -> c
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
    android.view.View a() -> a
    void a(boolean) -> a
    android.webkit.WebView b() -> b
    cn.sharesdk.framework.TitleLayout c() -> c
    android.widget.RelativeLayout d() -> d
cn.sharesdk.framework.authorize.ResizeLayout -> cn.sharesdk.framework.authorize.ResizeLayout:
    cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener a -> a
    void a(cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener -> cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener:
    void OnResize(int,int,int,int) -> OnResize
cn.sharesdk.framework.authorize.SSOListener -> cn.sharesdk.framework.authorize.SSOListener:
    void onFailed(java.lang.Throwable) -> onFailed
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
cn.sharesdk.framework.authorize.a -> cn.sharesdk.framework.authorize.a:
    cn.sharesdk.framework.authorize.AuthorizeHelper a -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeHelper) -> a
    void show(android.content.Context,android.content.Intent) -> show
    cn.sharesdk.framework.authorize.AuthorizeHelper a() -> a
cn.sharesdk.framework.authorize.b -> cn.sharesdk.framework.authorize.b:
    cn.sharesdk.framework.authorize.g a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c -> c
    java.lang.String a() -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
cn.sharesdk.framework.authorize.c -> cn.sharesdk.framework.authorize.c:
    cn.sharesdk.framework.authorize.RegisterView a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.d -> cn.sharesdk.framework.authorize.d:
    android.widget.TextView a -> a
    int b -> b
    cn.sharesdk.framework.authorize.RegisterView c -> c
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
cn.sharesdk.framework.authorize.e -> cn.sharesdk.framework.authorize.e:
    cn.sharesdk.framework.authorize.f c -> c
    cn.sharesdk.framework.authorize.SSOListener b -> b
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    void onCreate() -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
cn.sharesdk.framework.authorize.f -> cn.sharesdk.framework.authorize.f:
    cn.sharesdk.framework.authorize.e a -> a
    int b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    void a() -> a
    void a(int) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.content.Intent) -> a
cn.sharesdk.framework.authorize.g -> cn.sharesdk.framework.authorize.g:
    cn.sharesdk.framework.authorize.AuthorizeAdapter c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.framework.authorize.AuthorizeAdapter c() -> c
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void OnResize(int,int,int,int) -> OnResize
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    android.app.Activity a(cn.sharesdk.framework.authorize.g) -> a
    android.app.Activity b(cn.sharesdk.framework.authorize.g) -> b
cn.sharesdk.framework.authorize.g$a -> cn.sharesdk.framework.authorize.g$a:
    float[] a -> a
    float getInterpolation(float) -> getInterpolation
cn.sharesdk.framework.authorize.h -> cn.sharesdk.framework.authorize.h:
    cn.sharesdk.framework.authorize.g a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.i -> cn.sharesdk.framework.authorize.i:
    cn.sharesdk.framework.authorize.h a -> a
    void run() -> run
cn.sharesdk.framework.authorize.j -> cn.sharesdk.framework.authorize.j:
    cn.sharesdk.framework.authorize.g a -> a
    void run() -> run
cn.sharesdk.framework.b -> cn.sharesdk.framework.b:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.c -> cn.sharesdk.framework.c:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.d -> cn.sharesdk.framework.d:
    cn.sharesdk.framework.PlatformActionListener a -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a() -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void a(cn.sharesdk.framework.Platform,int,java.lang.Object) -> a
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d) -> a
    java.lang.String a(cn.sharesdk.framework.d,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.e -> cn.sharesdk.framework.e:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.d d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.f -> cn.sharesdk.framework.f:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.lang.Object c -> c
    cn.sharesdk.framework.d d -> d
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.g -> cn.sharesdk.framework.g:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE_PATH -> IMAGE_PATH
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String TITLE -> TITLE
    java.lang.String NOTEBOOK -> NOTEBOOK
    java.lang.String STACK -> STACK
    java.lang.String TAGS -> TAGS
    java.lang.String IS_PUBLIC -> IS_PUBLIC
    java.lang.String IS_FRIEND -> IS_FRIEND
    java.lang.String IS_FAMILY -> IS_FAMILY
    java.lang.String SAFETY_LEVEL -> SAFETY_LEVEL
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String VENUE_NAME -> VENUE_NAME
    java.lang.String VENUE_DESCRIPTION -> VENUE_DESCRIPTION
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String IMAGE_URL -> IMAGE_URL
    java.lang.String COMMENT -> COMMENT
    java.lang.String TITLE_URL -> TITLE_URL
    java.lang.String URL -> URL
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String SITE -> SITE
    java.lang.String SITE_URL -> SITE_URL
    java.lang.String GROPU_ID -> GROPU_ID
    java.lang.String EXT_INFO -> EXT_INFO
    java.lang.String SHARE_TYPE -> SHARE_TYPE
    java.lang.String MUSIC_URL -> MUSIC_URL
    java.lang.String IMAGE_DATA -> IMAGE_DATA
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String SCENCE -> SCENCE
    java.lang.String CUSTOM_FLAG -> CUSTOM_FLAG
    java.util.HashMap params -> params
    void set(java.lang.String,java.lang.Object) -> set
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    java.lang.String getImagePath() -> getImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getNotebook() -> getNotebook
    void setNotebook(java.lang.String) -> setNotebook
    java.lang.String getStack() -> getStack
    void setStack(java.lang.String) -> setStack
    java.lang.String[] getTags() -> getTags
    void setTags(java.lang.String[]) -> setTags
    boolean isPublic() -> isPublic
    void setPublic(boolean) -> setPublic
    boolean isFriend() -> isFriend
    void setFriend(boolean) -> setFriend
    boolean isFamily() -> isFamily
    void setFamily(boolean) -> setFamily
    int getSafetyLevel() -> getSafetyLevel
    void setSafetyLevel(int) -> setSafetyLevel
    int getContentType() -> getContentType
    void setContentType(int) -> setContentType
    int getHidden() -> getHidden
    void setHidden(int) -> setHidden
    void setVenueName(java.lang.String) -> setVenueName
    java.lang.String getVenueName() -> getVenueName
    java.lang.String getVenueDescription() -> getVenueDescription
    void setVenueDescription(java.lang.String) -> setVenueDescription
    float getLatitude() -> getLatitude
    void setLatitude(float) -> setLatitude
    float getLongitude() -> getLongitude
    void setLongitude(float) -> setLongitude
    java.lang.String getTitleUrl() -> getTitleUrl
    void setTitleUrl(java.lang.String) -> setTitleUrl
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getMusicUrl() -> getMusicUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    java.lang.String getSite() -> getSite
    void setSite(java.lang.String) -> setSite
    java.lang.String getSiteUrl() -> getSiteUrl
    void setSiteUrl(java.lang.String) -> setSiteUrl
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getAuthor() -> getAuthor
    void setAuthor(java.lang.String) -> setAuthor
    android.graphics.Bitmap getImageData() -> getImageData
    void setImageData(android.graphics.Bitmap) -> setImageData
    int getShareType() -> getShareType
    void setShareType(int) -> setShareType
    int getScence() -> getScence
    void setScence(int) -> setScence
    java.lang.String getExtInfo() -> getExtInfo
    void setExtInfo(java.lang.String) -> setExtInfo
    java.lang.String[] getCustomFlag() -> getCustomFlag
    void setCustomFlag(java.lang.String[]) -> setCustomFlag
cn.sharesdk.framework.h -> cn.sharesdk.framework.h:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    int c() -> c
    void b(cn.sharesdk.framework.authorize.AuthorizeListener) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.i -> cn.sharesdk.framework.i:
    cn.sharesdk.framework.Platform a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.PlatformDb c -> c
    cn.sharesdk.framework.d d -> d
    int e -> e
    int f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    void a(java.lang.String) -> a
    int a() -> a
    int b() -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener c() -> c
    boolean d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean f() -> f
    void a(java.lang.String[]) -> a
    boolean j() -> j
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void c(int,java.lang.Object) -> c
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,int,int) -> a
    void c(java.lang.String) -> c
    void a(int,int,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb g() -> g
    void h() -> h
    java.lang.String a(java.lang.String,boolean) -> a
    java.lang.String k() -> k
    cn.sharesdk.framework.PlatformActionListener i() -> i
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    boolean a(cn.sharesdk.framework.i) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.i) -> b
cn.sharesdk.framework.j -> cn.sharesdk.framework.j:
    java.lang.String[] a -> a
    cn.sharesdk.framework.i b -> b
    void run() -> run
cn.sharesdk.framework.k -> cn.sharesdk.framework.k:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.i c -> c
    void run() -> run
cn.sharesdk.framework.l -> cn.sharesdk.framework.l:
    android.os.Handler a -> a
    void a() -> a
    void a(int,int,java.lang.Object) -> a
    void b() -> b
    void b(int,int,java.lang.Object) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
cn.sharesdk.framework.m -> cn.sharesdk.framework.m:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message) -> onTooManyRedirects
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> shouldOverrideKeyEvent
    void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
cn.sharesdk.framework.n -> cn.sharesdk.framework.n:
    boolean a -> a
    java.util.ArrayList a(android.content.Context) -> a
    android.content.pm.PackageInfo c(android.content.Context) -> c
    java.util.ArrayList a(android.content.pm.PackageInfo,android.content.Context) -> a
    java.util.ArrayList d(android.content.Context) -> d
    void a(java.util.ArrayList) -> a
    void a(android.content.Context,java.lang.String,android.os.Handler,boolean,int) -> a
    void b(android.content.Context) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,android.graphics.Bitmap) -> a
    java.lang.String a() -> a
    int b() -> b
cn.sharesdk.framework.network.RawNetworkCallback -> cn.sharesdk.framework.network.RawNetworkCallback:
    void onResponse(java.io.InputStream) -> onResponse
cn.sharesdk.framework.network.a -> cn.sharesdk.framework.network.a:
    byte[] a() -> a
cn.sharesdk.framework.network.b -> cn.sharesdk.framework.network.b:
    cn.sharesdk.framework.network.a a -> a
    cn.sharesdk.framework.network.b a(byte[]) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.c -> cn.sharesdk.framework.network.c:
    java.io.File a -> a
    void a(java.io.File) -> a
    void a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.d -> cn.sharesdk.framework.network.d:
    java.io.InputStream a() -> a
    long b() -> b
    org.apache.http.entity.InputStreamEntity c() -> c
cn.sharesdk.framework.network.e -> cn.sharesdk.framework.network.e:
    java.lang.String a -> a
    java.lang.Object b -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.network.f -> cn.sharesdk.framework.network.f:
    java.util.ArrayList a -> a
    cn.sharesdk.framework.network.f a(cn.sharesdk.framework.network.d) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.g -> cn.sharesdk.framework.network.g:
    java.util.ArrayList a -> a
    int b -> b
    void a(java.io.InputStream) -> a
    boolean a() -> a
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
cn.sharesdk.framework.network.h -> cn.sharesdk.framework.network.h:
    int a -> a
    int b -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList) -> a
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.d,cn.sharesdk.framework.network.RawNetworkCallback) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList) -> b
    java.lang.String a(java.util.ArrayList) -> a
    org.apache.http.client.HttpClient a() -> a
cn.sharesdk.framework.network.i -> cn.sharesdk.framework.network.i:
    cn.sharesdk.framework.network.i c -> c
    cn.sharesdk.framework.network.i a() -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.lang.String,int) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.d,cn.sharesdk.framework.network.RawNetworkCallback,java.lang.String,int) -> a
    void a(java.lang.String,int) -> a
cn.sharesdk.framework.network.j -> cn.sharesdk.framework.network.j:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
cn.sharesdk.framework.network.k -> cn.sharesdk.framework.network.k:
    cn.sharesdk.framework.network.j a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
cn.sharesdk.framework.network.l -> cn.sharesdk.framework.network.l:
    java.lang.StringBuilder a -> a
    cn.sharesdk.framework.network.l a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.o -> cn.sharesdk.framework.o:
    cn.sharesdk.framework.n a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.p -> cn.sharesdk.framework.p:
    cn.sharesdk.framework.p$a b -> b
    android.content.Context c -> c
    java.util.HashMap d -> d
    java.util.ArrayList e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    java.lang.String i -> i
    boolean j -> j
    java.lang.String k -> k
    boolean l -> l
    boolean m -> m
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void a() -> a
    void i() -> i
    void j() -> j
    void a(android.os.Message) -> a
    void k() -> k
    void l() -> l
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void a(java.lang.Class) -> a
    void b(java.lang.Class) -> b
    cn.sharesdk.framework.Service c(java.lang.Class) -> c
    void d(java.lang.Class) -> d
    void e(java.lang.Class) -> e
    cn.sharesdk.framework.Platform b(java.lang.String) -> b
    cn.sharesdk.framework.Platform[] c() -> c
    java.lang.String d() -> d
    int e() -> e
    void a(int) -> a
    void b(int) -> b
    void b(boolean) -> b
    boolean f() -> f
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String c(int) -> c
    int c(java.lang.String) -> c
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(int,java.lang.String) -> a
    boolean g() -> g
    boolean h() -> h
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.a.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    java.lang.String a(cn.sharesdk.framework.p) -> a
cn.sharesdk.framework.p$a -> cn.sharesdk.framework.p$a:
    cn.sharesdk.framework.p$a a -> a
    cn.sharesdk.framework.p$a b -> b
    cn.sharesdk.framework.p$a c -> c
    cn.sharesdk.framework.p$a[] d -> d
    cn.sharesdk.framework.p$a[] values() -> values
    cn.sharesdk.framework.p$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.q -> cn.sharesdk.framework.q:
    cn.sharesdk.framework.a.a a -> a
    cn.sharesdk.framework.p b -> b
    void run() -> run
cn.sharesdk.framework.r -> cn.sharesdk.framework.r:
    android.widget.ImageView a -> a
    cn.sharesdk.framework.TitleLayout b -> b
    void setVisibility(int) -> setVisibility
cn.sharesdk.framework.utils.BitmapHelper -> cn.sharesdk.framework.utils.BitmapHelper:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap a(java.io.InputStream,int) -> a
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    java.lang.String downloadBitmap(android.content.Context,java.lang.String) -> downloadBitmap
    java.lang.String saveViewToImage(android.view.View) -> saveViewToImage
    java.lang.String saveViewToImage(android.view.View,int,int) -> saveViewToImage
    android.graphics.Bitmap captureView(android.view.View,int,int) -> captureView
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,int) -> blur
    android.graphics.Bitmap a(android.graphics.Bitmap,int,boolean) -> a
cn.sharesdk.framework.utils.Escaper -> cn.sharesdk.framework.utils.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
cn.sharesdk.framework.utils.R -> cn.sharesdk.framework.utils.R:
    java.lang.String a -> a
    float b -> b
    int dipToPx(android.content.Context,int) -> dipToPx
    int pxToDip(android.content.Context,int) -> pxToDip
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getResId(java.lang.Class,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getLayoutRes(android.content.Context,java.lang.String) -> getLayoutRes
    int getStyleRes(android.content.Context,java.lang.String) -> getStyleRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
    int getColorRes(android.content.Context,java.lang.String) -> getColorRes
    void setCacheRoot(java.lang.String) -> setCacheRoot
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    java.lang.String toWordText(java.lang.String,int) -> toWordText
    android.net.Uri pathToContentUri(android.content.Context,java.lang.String) -> pathToContentUri
    long strToDate(java.lang.String) -> strToDate
    long dateStrToLong(java.lang.String) -> dateStrToLong
    java.util.Date longToDate(long) -> longToDate
    java.lang.String longToTime(long,int) -> longToTime
    long parseTwitterDate(java.lang.String) -> parseTwitterDate
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    java.lang.String encodeUrl(java.util.ArrayList) -> encodeUrl
    android.os.Bundle urlToBundle(java.lang.String) -> urlToBundle
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
cn.sharesdk.framework.utils.UIHandler -> cn.sharesdk.framework.utils.UIHandler:
    java.lang.String[] prays -> prays
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void printPray() -> printPray
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$000(android.os.Message) -> access$000
cn.sharesdk.framework.utils.a -> cn.sharesdk.framework.utils.a:
    cn.sharesdk.framework.utils.d a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
    byte[] a(byte[],byte[]) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],int,int) -> a
    java.lang.String b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
cn.sharesdk.framework.utils.b -> cn.sharesdk.framework.utils.b:
    android.content.Context a -> a
    cn.sharesdk.framework.utils.b b -> b
    cn.sharesdk.framework.utils.b a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.Object b(java.lang.String) -> b
    java.lang.String m() -> m
    java.lang.String n() -> n
    int o() -> o
    boolean z() -> z
    org.json.JSONArray p() -> p
    java.lang.String q() -> q
    java.lang.String A() -> A
    void c(java.lang.String) -> c
    java.lang.String r() -> r
    java.lang.String s() -> s
    int t() -> t
    java.lang.String u() -> u
    java.util.ArrayList a(boolean) -> a
    boolean a(android.content.pm.PackageInfo) -> a
    java.lang.String v() -> v
    boolean a(java.lang.String) -> a
    java.lang.String w() -> w
    boolean x() -> x
    java.lang.String y() -> y
cn.sharesdk.framework.utils.c -> cn.sharesdk.framework.utils.c:
    char[] a -> a
    java.lang.String a(byte[]) -> a
cn.sharesdk.framework.utils.d -> cn.sharesdk.framework.utils.d:
    java.util.HashMap a(java.lang.String) -> a
    java.util.HashMap a(org.json.JSONObject) -> a
    java.util.ArrayList a(org.json.JSONArray) -> a
    java.lang.String a(java.util.HashMap) -> a
    org.json.JSONObject b(java.util.HashMap) -> b
    boolean a(java.lang.Object) -> a
    java.util.ArrayList b(java.lang.Object) -> b
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.e -> cn.sharesdk.framework.utils.e:
    android.content.Context c -> c
    java.lang.String d -> d
    cn.sharesdk.framework.utils.e$a a -> a
    cn.sharesdk.framework.utils.e$b b -> b
    void a(android.content.Context) -> a
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.Object[]) -> b
    int b(java.lang.Throwable) -> b
    int c(java.lang.Throwable) -> c
    int c(java.lang.Object,java.lang.Object[]) -> c
    int a(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> a
    android.content.Context a() -> a
    java.lang.String b() -> b
cn.sharesdk.framework.utils.e$a -> cn.sharesdk.framework.utils.e$a:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
cn.sharesdk.framework.utils.e$b -> cn.sharesdk.framework.utils.e$b:
    int a(int,java.lang.String) -> a
    int b(int,java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
cn.sharesdk.framework.utils.f -> cn.sharesdk.framework.utils.f:
    cn.sharesdk.framework.utils.f$b a -> a
    cn.sharesdk.framework.utils.g b -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    cn.sharesdk.framework.utils.f$b a() -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.f$a) -> a
    java.util.ArrayList b(java.lang.String,java.util.ArrayList) -> b
    java.util.ArrayList b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.f$a) -> b
    java.util.ArrayList c(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.f$a) -> c
    void a(java.lang.String,java.lang.String) -> a
    java.util.ArrayList a(java.lang.String,java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.f$a) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.ArrayList a(long,java.util.ArrayList,java.lang.String) -> a
    java.lang.String b(java.util.ArrayList) -> b
    java.util.ArrayList a(long,java.lang.String) -> a
    java.util.ArrayList a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.f$1 -> cn.sharesdk.framework.utils.f$1:
    int[] a -> a
cn.sharesdk.framework.utils.f$a -> cn.sharesdk.framework.utils.f$a:
    cn.sharesdk.framework.utils.f$a a -> a
    cn.sharesdk.framework.utils.f$a b -> b
    cn.sharesdk.framework.utils.f$a[] c -> c
    cn.sharesdk.framework.utils.f$a[] values() -> values
    cn.sharesdk.framework.utils.f$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.utils.f$b -> cn.sharesdk.framework.utils.f$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
cn.sharesdk.framework.utils.g -> cn.sharesdk.framework.utils.g:
    char[] a -> a
    char[] b -> b
    boolean c -> c
    boolean[] d -> d
    boolean[] a(java.lang.String) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    char[] a(int) -> a
cn.sharesdk.framework.utils.h -> cn.sharesdk.framework.utils.h:
    java.lang.Object a(java.lang.Object) -> a
cn.sharesdk.framework.utils.i -> cn.sharesdk.framework.utils.i:
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.utils.j -> cn.sharesdk.framework.utils.j:
    java.lang.ThreadLocal a -> a
    char[] a(int) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String a(java.lang.String,int) -> a
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int b(java.lang.CharSequence,int,int) -> b
    char[] a(char[],int,int) -> a
cn.sharesdk.framework.utils.k -> cn.sharesdk.framework.utils.k:
    int a -> a
    char[] b -> b
    java.lang.Appendable c -> c
    cn.sharesdk.framework.utils.j d -> d
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void a(char[],int) -> a
cn.sharesdk.framework.utils.l -> cn.sharesdk.framework.utils.l:
    char[] a() -> a
    java.lang.Object initialValue() -> initialValue
cn.sharesdk.framework.utils.m -> cn.sharesdk.framework.utils.m:
    java.util.HashMap a(java.lang.String) -> a
cn.sharesdk.framework.utils.m$a -> cn.sharesdk.framework.utils.m$a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap a() -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
cn.sharesdk.sina.weibo.SinaWeibo -> cn.sharesdk.sina.weibo.SinaWeibo:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.PlatformDb a(cn.sharesdk.sina.weibo.SinaWeibo) -> a
    cn.sharesdk.framework.PlatformDb b(cn.sharesdk.sina.weibo.SinaWeibo) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.sina.weibo.SinaWeibo) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.sina.weibo.SinaWeibo) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.sina.weibo.SinaWeibo) -> e
    void a(cn.sharesdk.sina.weibo.SinaWeibo,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener f(cn.sharesdk.sina.weibo.SinaWeibo) -> f
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.sina.weibo.SinaWeibo) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.sina.weibo.SinaWeibo) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.sina.weibo.SinaWeibo) -> i
cn.sharesdk.sina.weibo.SinaWeibo$ShareParams -> cn.sharesdk.sina.weibo.SinaWeibo$ShareParams:
    java.lang.String imageUrl -> imageUrl
    float longitude -> longitude
    float latitude -> latitude
cn.sharesdk.sina.weibo.a -> cn.sharesdk.sina.weibo.a:
    cn.sharesdk.sina.weibo.e a -> a
    cn.sharesdk.sina.weibo.SinaWeibo b -> b
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.b -> cn.sharesdk.sina.weibo.b:
    boolean d -> d
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,java.lang.String) -> a
    android.content.Intent b(java.lang.String) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener a(cn.sharesdk.sina.weibo.b) -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b(cn.sharesdk.sina.weibo.b) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c(cn.sharesdk.sina.weibo.b) -> c
cn.sharesdk.sina.weibo.c -> cn.sharesdk.sina.weibo.c:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.sina.weibo.b c -> c
    void run() -> run
cn.sharesdk.sina.weibo.d -> cn.sharesdk.sina.weibo.d:
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    void a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    void a() -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(android.content.Intent) -> b
    void a(int,int,android.content.Intent) -> a
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
cn.sharesdk.sina.weibo.e -> cn.sharesdk.sina.weibo.e:
    cn.sharesdk.sina.weibo.e b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String[] g -> g
    cn.sharesdk.sina.weibo.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,float,float) -> b
    java.util.HashMap a(java.lang.String,float,float) -> a
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap b(int,int,java.lang.String) -> b
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.sina.weibo.e,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.sina.weibo.f -> cn.sharesdk.sina.weibo.f:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.sina.weibo.e b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.QQ -> cn.sharesdk.tencent.qq.QQ:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    boolean isValid() -> isValid
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.QQ) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qq.QQ) -> b
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.tencent.qq.QQ) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.tencent.qq.QQ) -> d
    cn.sharesdk.framework.PlatformActionListener e(cn.sharesdk.tencent.qq.QQ) -> e
    cn.sharesdk.framework.PlatformActionListener f(cn.sharesdk.tencent.qq.QQ) -> f
cn.sharesdk.tencent.qq.QQ$ShareParams -> cn.sharesdk.tencent.qq.QQ$ShareParams:
    java.lang.String title -> title
    java.lang.String titleUrl -> titleUrl
    java.lang.String imageUrl -> imageUrl
    java.lang.String musicUrl -> musicUrl
cn.sharesdk.tencent.qq.QQClientNotExistException -> cn.sharesdk.tencent.qq.QQClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.QQWebShareAdapter -> cn.sharesdk.tencent.qq.QQWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.a -> cn.sharesdk.tencent.qq.a:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qq.b -> cn.sharesdk.tencent.qq.b:
    cn.sharesdk.tencent.qq.b b -> b
    java.lang.String c -> c
    cn.sharesdk.tencent.qq.b a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener) -> a
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
cn.sharesdk.tencent.qq.c -> cn.sharesdk.tencent.qq.c:
    java.lang.String a -> a
    cn.sharesdk.framework.Platform b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void onCreate() -> onCreate
cn.sharesdk.tencent.qq.d -> cn.sharesdk.tencent.qq.d:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void onCreate() -> onCreate
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    int[] a() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
cn.sharesdk.tencent.qq.e -> cn.sharesdk.tencent.qq.e:
    java.lang.String a -> a
    cn.sharesdk.framework.PlatformActionListener b -> b
    java.lang.String c -> c
    cn.sharesdk.tencent.qq.QQWebShareAdapter d -> d
    cn.sharesdk.framework.authorize.RegisterView e -> e
    android.webkit.WebView f -> f
    boolean g -> g
    boolean h -> h
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String) -> b
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qq.QQWebShareAdapter b() -> b
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.e) -> a
    java.lang.String b(cn.sharesdk.tencent.qq.e) -> b
    void a(cn.sharesdk.tencent.qq.e,java.lang.String) -> a
    boolean a(cn.sharesdk.tencent.qq.e,boolean) -> a
cn.sharesdk.tencent.qq.f -> cn.sharesdk.tencent.qq.f:
    cn.sharesdk.tencent.qq.e a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qq.g -> cn.sharesdk.tencent.qq.g:
    cn.sharesdk.tencent.qq.f a -> a
    void run() -> run
cn.sharesdk.tencent.qq.h -> cn.sharesdk.tencent.qq.h:
    cn.sharesdk.tencent.qq.e a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.sharesdk.tencent.qzone.QZone -> cn.sharesdk.tencent.qzone.QZone:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.framework.Platform$ShareParams) -> b
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.QZone) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qzone.QZone) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qzone.QZone) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qzone.QZone) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qzone.QZone) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qzone.QZone) -> f
    void a(cn.sharesdk.tencent.qzone.QZone,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.tencent.qzone.QZone) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.tencent.qzone.QZone) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.tencent.qzone.QZone) -> i
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qzone.QZone) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qzone.QZone) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qzone.QZone) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qzone.QZone) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qzone.QZone) -> n
cn.sharesdk.tencent.qzone.QZone$ShareParams -> cn.sharesdk.tencent.qzone.QZone$ShareParams:
    java.lang.String title -> title
    java.lang.String imageUrl -> imageUrl
    java.lang.String titleUrl -> titleUrl
    java.lang.String comment -> comment
    java.lang.String site -> site
    java.lang.String siteUrl -> siteUrl
    boolean webShare -> webShare
cn.sharesdk.tencent.qzone.QZoneWebShareAdapter -> cn.sharesdk.tencent.qzone.QZoneWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qzone.a -> cn.sharesdk.tencent.qzone.a:
    cn.sharesdk.tencent.qzone.f a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.b -> cn.sharesdk.tencent.qzone.b:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.tencent.qzone.QZone c -> c
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.c -> cn.sharesdk.tencent.qzone.c:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.d -> cn.sharesdk.tencent.qzone.d:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
cn.sharesdk.tencent.qzone.e -> cn.sharesdk.tencent.qzone.e:
    java.lang.String a -> a
    cn.sharesdk.tencent.qzone.d b -> b
    void run() -> run
cn.sharesdk.tencent.qzone.f -> cn.sharesdk.tencent.qzone.f:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qzone.f c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    cn.sharesdk.framework.network.i h -> h
    java.lang.String[] i -> i
    cn.sharesdk.tencent.qzone.f a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    java.util.HashMap c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    java.lang.String a() -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.tencent.qzone.f,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qzone.g -> cn.sharesdk.tencent.qzone.g:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qzone.f b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.h -> cn.sharesdk.tencent.qzone.h:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qzone.i -> cn.sharesdk.tencent.qzone.i:
    java.lang.String a -> a
    boolean b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter i -> i
    void a(java.lang.String,boolean) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter b() -> b
    void onCreate() -> onCreate
    void c() -> c
    void d() -> d
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.i) -> a
    java.lang.String b(cn.sharesdk.tencent.qzone.i) -> b
    void a(cn.sharesdk.tencent.qzone.i,java.lang.String) -> a
    void b(cn.sharesdk.tencent.qzone.i,java.lang.String) -> b
cn.sharesdk.tencent.qzone.j -> cn.sharesdk.tencent.qzone.j:
    cn.sharesdk.tencent.qzone.i a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qzone.k -> cn.sharesdk.tencent.qzone.k:
    cn.sharesdk.tencent.qzone.j a -> a
    void run() -> run
cn.sharesdk.tencent.qzone.l -> cn.sharesdk.tencent.qzone.l:
    cn.sharesdk.tencent.qzone.i a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.sharesdk.tencent.weibo.TencentWeibo -> cn.sharesdk.tencent.weibo.TencentWeibo:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.weibo.TencentWeibo) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.weibo.TencentWeibo) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.weibo.TencentWeibo) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.weibo.TencentWeibo) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.weibo.TencentWeibo) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.weibo.TencentWeibo) -> f
    cn.sharesdk.framework.PlatformDb g(cn.sharesdk.tencent.weibo.TencentWeibo) -> g
    cn.sharesdk.framework.PlatformDb h(cn.sharesdk.tencent.weibo.TencentWeibo) -> h
    cn.sharesdk.framework.PlatformDb i(cn.sharesdk.tencent.weibo.TencentWeibo) -> i
    cn.sharesdk.framework.PlatformDb j(cn.sharesdk.tencent.weibo.TencentWeibo) -> j
    cn.sharesdk.framework.PlatformDb k(cn.sharesdk.tencent.weibo.TencentWeibo) -> k
    cn.sharesdk.framework.PlatformDb l(cn.sharesdk.tencent.weibo.TencentWeibo) -> l
    cn.sharesdk.framework.PlatformDb m(cn.sharesdk.tencent.weibo.TencentWeibo) -> m
    cn.sharesdk.framework.PlatformDb n(cn.sharesdk.tencent.weibo.TencentWeibo) -> n
    void a(cn.sharesdk.tencent.weibo.TencentWeibo,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener o(cn.sharesdk.tencent.weibo.TencentWeibo) -> o
    cn.sharesdk.framework.PlatformActionListener p(cn.sharesdk.tencent.weibo.TencentWeibo) -> p
cn.sharesdk.tencent.weibo.TencentWeibo$ShareParams -> cn.sharesdk.tencent.weibo.TencentWeibo$ShareParams:
    float longitude -> longitude
    float latitude -> latitude
    java.lang.String imageUrl -> imageUrl
cn.sharesdk.tencent.weibo.a -> cn.sharesdk.tencent.weibo.a:
    java.lang.String a(byte[]) -> a
    char[] a(byte[],int) -> a
    char a(int) -> a
cn.sharesdk.tencent.weibo.b -> cn.sharesdk.tencent.weibo.b:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    byte[] h -> h
    boolean i -> i
    int j -> j
    java.util.Random k -> k
    long a(byte[],int,int) -> a
    byte[] a(byte[],int,int,byte[]) -> a
    byte[] b(byte[],int,int,byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a() -> a
    boolean b(byte[],int,int) -> b
    int b() -> b
    byte[] a(byte[],byte[],int) -> a
    byte[] a(int) -> a
cn.sharesdk.tencent.weibo.c -> cn.sharesdk.tencent.weibo.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
cn.sharesdk.tencent.weibo.d -> cn.sharesdk.tencent.weibo.d:
    cn.sharesdk.tencent.weibo.h a -> a
    cn.sharesdk.tencent.weibo.TencentWeibo b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.weibo.e -> cn.sharesdk.tencent.weibo.e:
    int d -> d
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
    cn.sharesdk.framework.authorize.g a(cn.sharesdk.tencent.weibo.e) -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b(cn.sharesdk.tencent.weibo.e) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c(cn.sharesdk.tencent.weibo.e) -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d(cn.sharesdk.tencent.weibo.e) -> d
    cn.sharesdk.framework.authorize.AuthorizeListener e(cn.sharesdk.tencent.weibo.e) -> e
    cn.sharesdk.framework.authorize.AuthorizeListener f(cn.sharesdk.tencent.weibo.e) -> f
    cn.sharesdk.framework.authorize.AuthorizeListener g(cn.sharesdk.tencent.weibo.e) -> g
    cn.sharesdk.framework.authorize.AuthorizeListener h(cn.sharesdk.tencent.weibo.e) -> h
    cn.sharesdk.framework.authorize.AuthorizeListener i(cn.sharesdk.tencent.weibo.e) -> i
cn.sharesdk.tencent.weibo.f -> cn.sharesdk.tencent.weibo.f:
    android.os.Bundle a -> a
    cn.sharesdk.tencent.weibo.e b -> b
    void run() -> run
cn.sharesdk.tencent.weibo.g -> cn.sharesdk.tencent.weibo.g:
    cn.sharesdk.tencent.weibo.c d -> d
    void a(cn.sharesdk.tencent.weibo.c) -> a
    void a() -> a
    int a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] a(long,long) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.os.Bundle) -> a
    void a(byte[]) -> a
    void b(android.os.Bundle) -> b
    cn.sharesdk.framework.authorize.e a(cn.sharesdk.tencent.weibo.g) -> a
    void a(cn.sharesdk.tencent.weibo.g,android.os.Bundle) -> a
    void b(cn.sharesdk.tencent.weibo.g,android.os.Bundle) -> b
cn.sharesdk.tencent.weibo.g$a -> cn.sharesdk.tencent.weibo.g$a:
    cn.sharesdk.tencent.weibo.g a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.sharesdk.tencent.weibo.h -> cn.sharesdk.tencent.weibo.h:
    cn.sharesdk.tencent.weibo.h b -> b
    cn.sharesdk.tencent.weibo.c c -> c
    cn.sharesdk.framework.network.i d -> d
    cn.sharesdk.tencent.weibo.h a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    android.os.Bundle b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.util.ArrayList) -> a
    java.util.HashMap c(java.lang.String) -> c
    java.util.HashMap a(java.lang.String,float,float) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,float,float) -> b
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.tencent.weibo.h,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    cn.sharesdk.tencent.weibo.c a(cn.sharesdk.tencent.weibo.h) -> a
cn.sharesdk.tencent.weibo.i -> cn.sharesdk.tencent.weibo.i:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.weibo.h b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.twitter.Twitter -> cn.sharesdk.twitter.Twitter:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformDb a(cn.sharesdk.twitter.Twitter) -> a
    cn.sharesdk.framework.PlatformDb b(cn.sharesdk.twitter.Twitter) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.twitter.Twitter) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.twitter.Twitter) -> d
    void a(cn.sharesdk.twitter.Twitter,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener e(cn.sharesdk.twitter.Twitter) -> e
    cn.sharesdk.framework.PlatformActionListener f(cn.sharesdk.twitter.Twitter) -> f
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.twitter.Twitter) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.twitter.Twitter) -> h
cn.sharesdk.twitter.Twitter$ShareParams -> cn.sharesdk.twitter.Twitter$ShareParams:
cn.sharesdk.twitter.a -> cn.sharesdk.twitter.a:
    cn.sharesdk.twitter.e a -> a
    cn.sharesdk.twitter.Twitter b -> b
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.twitter.b -> cn.sharesdk.twitter.b:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
cn.sharesdk.twitter.c -> cn.sharesdk.twitter.c:
    java.lang.String a -> a
    cn.sharesdk.twitter.b b -> b
    void run() -> run
cn.sharesdk.twitter.d -> cn.sharesdk.twitter.d:
    java.lang.String a -> a
    cn.sharesdk.twitter.b b -> b
    void run() -> run
cn.sharesdk.twitter.e -> cn.sharesdk.twitter.e:
    cn.sharesdk.twitter.e b -> b
    cn.sharesdk.framework.utils.f c -> c
    cn.sharesdk.framework.network.i d -> d
    cn.sharesdk.twitter.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String getRedirectUri() -> getRedirectUri
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.HashMap b(java.lang.String) -> b
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap c(java.lang.String) -> c
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
cn.sharesdk.utils.R -> cn.sharesdk.utils.R:
    float density -> density
    int dipToPx(android.content.Context,int) -> dipToPx
    int pxToDip(android.content.Context,int) -> pxToDip
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getResId(java.lang.Class,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
cn.sharesdk.wechat.favorite.WechatFavorite -> cn.sharesdk.wechat.favorite.WechatFavorite:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    boolean c() -> c
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.favorite.WechatFavorite) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.favorite.WechatFavorite) -> b
    void a(cn.sharesdk.wechat.favorite.WechatFavorite,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.favorite.WechatFavorite) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.favorite.WechatFavorite) -> d
cn.sharesdk.wechat.favorite.WechatFavorite$ShareParams -> cn.sharesdk.wechat.favorite.WechatFavorite$ShareParams:
cn.sharesdk.wechat.favorite.a -> cn.sharesdk.wechat.favorite.a:
    cn.sharesdk.wechat.favorite.WechatFavorite a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.friends.Wechat -> cn.sharesdk.wechat.friends.Wechat:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean isValid() -> isValid
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.friends.Wechat) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.friends.Wechat) -> b
    void a(cn.sharesdk.wechat.friends.Wechat,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.friends.Wechat) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.friends.Wechat) -> d
cn.sharesdk.wechat.friends.Wechat$ShareParams -> cn.sharesdk.wechat.friends.Wechat$ShareParams:
cn.sharesdk.wechat.friends.a -> cn.sharesdk.wechat.friends.a:
    cn.sharesdk.wechat.friends.Wechat a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.moments.WechatMoments -> cn.sharesdk.wechat.moments.WechatMoments:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.a.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.moments.WechatMoments) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.moments.WechatMoments) -> b
    void a(cn.sharesdk.wechat.moments.WechatMoments,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.moments.WechatMoments) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.moments.WechatMoments) -> d
cn.sharesdk.wechat.moments.WechatMoments$ShareParams -> cn.sharesdk.wechat.moments.WechatMoments$ShareParams:
cn.sharesdk.wechat.moments.a -> cn.sharesdk.wechat.moments.a:
    cn.sharesdk.wechat.moments.WechatMoments a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.utils.WXAppExtendObject -> cn.sharesdk.wechat.utils.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXEmojiObject -> cn.sharesdk.wechat.utils.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXFileObject -> cn.sharesdk.wechat.utils.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXImageObject -> cn.sharesdk.wechat.utils.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage -> cn.sharesdk.wechat.utils.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject -> cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage$a -> cn.sharesdk.wechat.utils.WXMediaMessage$a:
    android.os.Bundle a(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    cn.sharesdk.wechat.utils.WXMediaMessage a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WXMusicObject -> cn.sharesdk.wechat.utils.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXTextObject -> cn.sharesdk.wechat.utils.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXVideoObject -> cn.sharesdk.wechat.utils.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXWebpageObject -> cn.sharesdk.wechat.utils.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WechatClientNotExistException -> cn.sharesdk.wechat.utils.WechatClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException -> cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatHandlerActivity -> cn.sharesdk.wechat.utils.WechatHandlerActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
cn.sharesdk.wechat.utils.WechatHelper -> cn.sharesdk.wechat.utils.WechatHelper:
    boolean a -> a
    cn.sharesdk.wechat.utils.WechatHelper b -> b
    cn.sharesdk.wechat.utils.g c -> c
    cn.sharesdk.wechat.utils.h d -> d
    cn.sharesdk.wechat.utils.WechatHelper a() -> a
    void a(cn.sharesdk.wechat.utils.h) -> a
    void a(cn.sharesdk.wechat.utils.h,cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.wechat.utils.h) -> b
    void a(java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> b
    void c(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> c
    void c(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> c
    void b(java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> b
    void b(java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.h) -> b
    byte[] a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] a(byte[]) -> a
    java.lang.String c(java.lang.String) -> c
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity) -> a
    boolean b() -> b
    boolean c() -> c
    void a(cn.sharesdk.wechat.utils.WXMediaMessage,java.lang.String,int,cn.sharesdk.wechat.utils.h) -> a
cn.sharesdk.wechat.utils.WechatHelper$ShareParams -> cn.sharesdk.wechat.utils.WechatHelper$ShareParams:
    int shareType -> shareType
    java.lang.String title -> title
    java.lang.String musicUrl -> musicUrl
    java.lang.String url -> url
    java.lang.String imageUrl -> imageUrl
    android.graphics.Bitmap imageData -> imageData
    int scene -> scene
    java.lang.String filePath -> filePath
    java.lang.String extInfo -> extInfo
cn.sharesdk.wechat.utils.WechatResp -> cn.sharesdk.wechat.utils.WechatResp:
    int e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int a() -> a
    void b(android.os.Bundle) -> b
    void a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WechatResp$ErrCode -> cn.sharesdk.wechat.utils.WechatResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException -> cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.a -> cn.sharesdk.wechat.utils.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.b -> cn.sharesdk.wechat.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.c -> cn.sharesdk.wechat.utils.c:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.d -> cn.sharesdk.wechat.utils.d:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.e -> cn.sharesdk.wechat.utils.e:
    int a() -> a
cn.sharesdk.wechat.utils.f -> cn.sharesdk.wechat.utils.f:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.g -> cn.sharesdk.wechat.utils.g:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean a(android.content.Context,java.lang.String) -> a
    void a(cn.sharesdk.wechat.utils.i) -> a
    boolean a() -> a
    boolean c() -> c
    byte[] a(java.lang.String,java.lang.String,int) -> a
    java.lang.String a(java.lang.String) -> a
    boolean b() -> b
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity,cn.sharesdk.wechat.utils.h) -> a
    boolean a(byte[],byte[]) -> a
cn.sharesdk.wechat.utils.h -> cn.sharesdk.wechat.utils.h:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d -> d
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(cn.sharesdk.wechat.utils.WechatResp) -> a
    cn.sharesdk.framework.Platform$ShareParams a() -> a
    cn.sharesdk.framework.Platform b() -> b
    cn.sharesdk.framework.PlatformActionListener c() -> c
cn.sharesdk.wechat.utils.i -> cn.sharesdk.wechat.utils.i:
    java.lang.String c -> c
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.smssdk.EventHandler -> cn.smssdk.a:
    void onRegister() -> a
    void beforeEvent(int,java.lang.Object) -> a
    void afterEvent(int,int,java.lang.Object) -> a
    void onUnregister() -> b
cn.smssdk.SMSSDK -> cn.smssdk.b:
    cn.smssdk.a a -> a
    void initSDK(android.content.Context,java.lang.String,java.lang.String) -> a
    void registerEventHandler(cn.smssdk.EventHandler) -> a
    void unregisterEventHandler(cn.smssdk.EventHandler) -> b
    void unregisterAllEventHandler() -> a
    void a() -> f
    void getSupportedCountries() -> b
    void getVerificationCode(java.lang.String,java.lang.String) -> a
    void submitVerificationCode(java.lang.String,java.lang.String,java.lang.String) -> a
    void getContacts(boolean) -> a
    void submitUserInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void getFriendsInApp() -> c
    void getNewFriendsCount() -> d
    java.util.HashMap getGroupedCountryList() -> e
    java.lang.String[] getCountry(java.lang.String) -> a
cn.smssdk.SMSSDKUIShell -> cn.smssdk.SMSSDKUIShell:
cn.smssdk.a -> cn.smssdk.c:
    android.content.Context a -> a
    java.util.HashSet b -> b
    cn.smssdk.b.a c -> c
    cn.smssdk.contact.a d -> d
    cn.smssdk.a.a e -> e
    java.util.HashMap f -> f
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(cn.smssdk.EventHandler) -> a
    void b(cn.smssdk.EventHandler) -> b
    void b() -> b
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void a(int,int,java.lang.Object) -> a
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
    void c(java.lang.Object) -> c
    void d() -> d
    void d(java.lang.Object) -> d
    void e() -> e
    void f() -> f
    void onContactChange(boolean) -> a
    java.util.HashMap c() -> c
    java.lang.String[] a(java.lang.String) -> a
    java.util.HashSet a(cn.smssdk.a) -> a
    void a(cn.smssdk.a,int,java.lang.Object) -> a
    void a(cn.smssdk.a,int,int,java.lang.Object) -> a
cn.smssdk.a.a -> cn.smssdk.a.a:
    cn.smssdk.a.a a -> a
    cn.smssdk.b.a b -> b
    cn.smssdk.b.c c -> c
    cn.smssdk.a.b d -> d
    cn.smssdk.contact.a e -> e
    cn.smssdk.a.a a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a() -> a
    boolean c() -> c
    java.util.ArrayList a(java.util.ArrayList) -> a
    java.util.ArrayList b() -> b
    void a(int,android.os.Handler$Callback) -> a
    java.lang.String[] d() -> d
cn.smssdk.a.b -> cn.smssdk.a.b:
    android.os.Handler a -> a
    cn.smssdk.contact.a b -> b
    cn.smssdk.b.c c -> c
    cn.smssdk.b.a d -> d
    cn.smssdk.a.a e -> e
    int f -> f
    android.os.Handler$Callback g -> g
    void a(int,android.os.Handler$Callback) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    int a() -> a
    android.os.Handler$Callback a(cn.smssdk.a.b) -> a
    int b(cn.smssdk.a.b) -> b
cn.smssdk.a.c -> cn.smssdk.a.c:
    cn.smssdk.a.b a -> a
    void run() -> run
cn.smssdk.b -> cn.smssdk.d:
    int a -> a
    java.lang.Object b -> b
    cn.smssdk.a c -> c
    void run() -> run
cn.smssdk.b.a -> cn.smssdk.b.a:
    cn.smssdk.b.a a -> a
    android.content.Context b -> b
    cn.smssdk.framework.utils.c c -> c
    cn.smssdk.framework.network.e d -> d
    cn.smssdk.b.c e -> e
    cn.smssdk.framework.utils.b f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    cn.smssdk.b.a a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    void a(java.util.ArrayList) -> a
    java.lang.String g() -> g
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String h() -> h
    java.util.HashMap a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.util.ArrayList a() -> a
    java.lang.String j() -> j
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String k() -> k
    java.util.ArrayList a(java.lang.String[]) -> a
    java.util.HashMap a(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,boolean) -> a
    java.util.HashMap a(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,int,boolean) -> a
    byte[] a(java.util.HashMap,java.lang.String,boolean) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    java.util.ArrayList b(byte[],java.lang.String) -> b
    java.util.HashMap a(java.lang.String,java.util.HashMap,java.lang.String,java.lang.String,java.util.HashMap,int,boolean) -> a
    java.lang.String a(int) -> a
    java.lang.String b(int) -> b
cn.smssdk.b.b -> cn.smssdk.b.b:
    java.util.HashMap a -> a
    cn.smssdk.b.a b -> b
    void onResponse(java.io.InputStream) -> a
cn.smssdk.b.c -> cn.smssdk.b.c:
    cn.smssdk.b.c a -> a
    cn.smssdk.framework.utils.e b -> b
    cn.smssdk.b.c a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    void c() -> c
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    void a(java.util.ArrayList) -> a
    java.util.ArrayList e() -> e
    void b(java.util.ArrayList) -> b
    java.util.ArrayList f() -> f
    void c(java.util.ArrayList) -> c
    long g() -> g
    void h() -> h
    void a(java.lang.String[]) -> a
    java.lang.String[] i() -> i
cn.smssdk.c -> cn.smssdk.e:
    cn.smssdk.a a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.contact.OnContactChangeListener -> cn.smssdk.c.a:
    void onContactChange(boolean) -> a
cn.smssdk.contact.a -> cn.smssdk.c.b:
    cn.smssdk.contact.a a -> a
    android.database.ContentObserver b -> b
    android.content.ContentResolver c -> c
    cn.smssdk.contact.c d -> d
    long e -> e
    java.util.ArrayList f -> f
    cn.smssdk.contact.OnContactChangeListener g -> g
    cn.smssdk.contact.d h -> h
    cn.smssdk.contact.a a(android.content.Context) -> a
    void d() -> d
    void a() -> a
    void b() -> b
    java.util.ArrayList e() -> e
    java.util.ArrayList a(boolean) -> a
    java.lang.String[] c() -> c
    void a(cn.smssdk.contact.OnContactChangeListener) -> a
    cn.smssdk.contact.d a(cn.smssdk.contact.a) -> a
    cn.smssdk.contact.OnContactChangeListener b(cn.smssdk.contact.a) -> b
cn.smssdk.contact.a.a -> cn.smssdk.c.a.a:
    java.lang.String a -> a
    cn.smssdk.contact.a.h b -> b
    cn.smssdk.contact.a.i c -> c
    cn.smssdk.contact.a.e d -> d
    cn.smssdk.contact.a.k e -> e
    java.util.ArrayList f -> f
    cn.smssdk.contact.a.m g -> g
    cn.smssdk.contact.a.j h -> h
    java.util.ArrayList i -> i
    java.util.ArrayList j -> j
    java.util.ArrayList k -> k
    java.util.ArrayList l -> l
    java.util.ArrayList m -> m
    java.util.ArrayList n -> n
    java.util.ArrayList o -> o
    cn.smssdk.contact.a.f p -> p
    void a(cn.smssdk.contact.c) -> a
    cn.smssdk.contact.a.h a() -> a
    cn.smssdk.contact.a.i b() -> b
    cn.smssdk.contact.a.e c() -> c
    cn.smssdk.contact.a.k d() -> d
    cn.smssdk.contact.a.m e() -> e
    cn.smssdk.contact.a.j f() -> f
    java.util.ArrayList g() -> g
    java.util.ArrayList h() -> h
    java.util.ArrayList i() -> i
    java.util.ArrayList j() -> j
    java.util.ArrayList k() -> k
    java.util.ArrayList l() -> l
    java.util.ArrayList m() -> m
    java.lang.String toString() -> toString
    java.util.HashMap n() -> n
cn.smssdk.contact.a.b -> cn.smssdk.c.a.b:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    cn.smssdk.contact.a.b a(java.util.HashMap) -> a
    void b(java.util.HashMap) -> b
    byte[] a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    int a(java.lang.String,int) -> a
    java.lang.String toString() -> toString
    java.util.HashMap a() -> a
cn.smssdk.contact.a.c -> cn.smssdk.c.a.c:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.d -> cn.smssdk.c.a.d:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.e -> cn.smssdk.c.a.e:
    java.lang.String b() -> b
cn.smssdk.contact.a.f -> cn.smssdk.c.a.f:
cn.smssdk.contact.a.g -> cn.smssdk.c.a.g:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.h -> cn.smssdk.c.a.h:
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
cn.smssdk.contact.a.i -> cn.smssdk.c.a.i:
    java.lang.String b() -> b
cn.smssdk.contact.a.j -> cn.smssdk.c.a.j:
    java.lang.String b() -> b
cn.smssdk.contact.a.k -> cn.smssdk.c.a.k:
    java.lang.String b() -> b
    java.lang.String c() -> c
cn.smssdk.contact.a.l -> cn.smssdk.c.a.l:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.m -> cn.smssdk.c.a.m:
    java.lang.String b() -> b
cn.smssdk.contact.a.n -> cn.smssdk.c.a.n:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.o -> cn.smssdk.c.a.o:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.a.p -> cn.smssdk.c.a.p:
cn.smssdk.contact.a.q -> cn.smssdk.c.a.q:
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    int a(int) -> a
cn.smssdk.contact.b -> cn.smssdk.c.c:
    cn.smssdk.contact.a a -> a
    void onChange(boolean) -> onChange
cn.smssdk.contact.c -> cn.smssdk.c.d:
    android.content.ContentResolver a -> a
    java.util.ArrayList a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
cn.smssdk.contact.d -> cn.smssdk.c.e:
    android.os.Handler a -> a
    cn.smssdk.contact.a b -> b
    cn.smssdk.b.c c -> c
    cn.smssdk.b.a d -> d
    void a() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    java.lang.String a(java.lang.Object) -> a
    cn.smssdk.contact.a a(cn.smssdk.contact.d) -> a
    java.lang.String a(cn.smssdk.contact.d,java.lang.Object) -> a
    cn.smssdk.b.c b(cn.smssdk.contact.d) -> b
    cn.smssdk.b.a c(cn.smssdk.contact.d) -> c
cn.smssdk.contact.e -> cn.smssdk.c.f:
    cn.smssdk.contact.d a -> a
    void run() -> run
cn.smssdk.framework.FakeActivity -> cn.smssdk.d.a:
    java.lang.Class shell -> b
    android.app.Activity activity -> a
    cn.smssdk.framework.FakeActivity resultReceiver -> c
    java.util.HashMap result -> d
    android.view.View contentView -> e
    void setShell(java.lang.Class) -> a
    void setActivity(android.app.Activity) -> a
    void setContentView(android.view.View) -> a
    void onCreate() -> a
    void onNewIntent(android.content.Intent) -> a
    void onStart() -> b
    void onPause() -> c
    void onResume() -> d
    void onStop() -> e
    void onRestart() -> f
    boolean onFinish() -> g
    void onDestroy() -> h
    void finish() -> i
    boolean onKeyEvent(int,android.view.KeyEvent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void startActivity(android.content.Intent) -> b
    void startActivityForResult(android.content.Intent,int) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    android.content.Context getContext() -> j
    void show(android.content.Context,android.content.Intent) -> a
    void showForResult(android.content.Context,android.content.Intent,cn.smssdk.framework.FakeActivity) -> a
    void setResult(java.util.HashMap) -> a
    void sendResult() -> k
    void onResult(java.util.HashMap) -> b
    void runOnUIThread(java.lang.Runnable) -> a
    void runOnUIThread(java.lang.Runnable,long) -> a
cn.smssdk.framework.ShareSDKUIShell -> cn.smssdk.d.b:
    java.util.HashMap executors -> a
    cn.smssdk.framework.FakeActivity executor -> b
    java.lang.String registerExecutor(cn.smssdk.framework.FakeActivity) -> a
    java.lang.String registerExecutor(java.lang.String,cn.smssdk.framework.FakeActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
cn.smssdk.framework.a -> cn.smssdk.d.c:
    cn.smssdk.framework.FakeActivity a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.framework.b -> cn.smssdk.d.d:
    java.lang.Runnable a -> a
    cn.smssdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.framework.c -> cn.smssdk.d.e:
    java.lang.Runnable a -> a
    cn.smssdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.framework.network.RawNetworkCallback -> cn.smssdk.d.a.a:
    void onResponse(java.io.InputStream) -> a
cn.smssdk.framework.network.a -> cn.smssdk.d.a.b:
    byte[] a() -> a
cn.smssdk.framework.network.b -> cn.smssdk.d.a.c:
    cn.smssdk.framework.network.a a -> a
    cn.smssdk.framework.network.b a(byte[]) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.smssdk.framework.network.c -> cn.smssdk.d.a.d:
    java.io.InputStream a() -> a
    long b() -> b
    org.apache.http.entity.InputStreamEntity c() -> c
cn.smssdk.framework.network.d -> cn.smssdk.d.a.e:
    java.lang.String a -> a
    java.lang.Object b -> b
    java.lang.String toString() -> toString
cn.smssdk.framework.network.e -> cn.smssdk.d.a.f:
    void a(java.lang.String,java.util.ArrayList,cn.smssdk.framework.network.c,cn.smssdk.framework.network.RawNetworkCallback) -> a
    org.apache.http.client.HttpClient a() -> a
cn.smssdk.framework.network.f -> cn.smssdk.d.a.g:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
cn.smssdk.framework.network.g -> cn.smssdk.d.a.h:
    cn.smssdk.framework.network.f a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
cn.smssdk.framework.utils.R -> cn.smssdk.d.b.a:
    java.lang.String a -> a
    float b -> b
    int dipToPx(android.content.Context,int) -> a
    int getResId(java.lang.Class,java.lang.String) -> a
    int getBitmapRes(android.content.Context,java.lang.String) -> a
    int getStringRes(android.content.Context,java.lang.String) -> b
    int getStringArrayRes(android.content.Context,java.lang.String) -> c
    int getLayoutRes(android.content.Context,java.lang.String) -> d
    int getStyleRes(android.content.Context,java.lang.String) -> e
    int getIdRes(android.content.Context,java.lang.String) -> f
    int getColorRes(android.content.Context,java.lang.String) -> g
    void setCacheRoot(java.lang.String) -> a
cn.smssdk.framework.utils.a -> cn.smssdk.d.b.b:
    cn.smssdk.framework.utils.c a -> a
    byte[] a(byte[],java.lang.String) -> a
    byte[] a(byte[],byte[]) -> a
    java.lang.String a(byte[],int,int) -> a
    byte[] a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
cn.smssdk.framework.utils.b -> cn.smssdk.d.b.c:
    android.content.Context a -> a
    cn.smssdk.framework.utils.b b -> b
    cn.smssdk.framework.utils.b a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.Object a(java.lang.String) -> a
    java.lang.String j() -> j
    java.lang.String k() -> k
    boolean p() -> n
    java.lang.String l() -> l
    java.lang.String m() -> m
cn.smssdk.framework.utils.c -> cn.smssdk.d.b.d:
    java.util.HashMap a(java.lang.String) -> a
    java.util.HashMap a(org.json.JSONObject) -> a
    java.util.ArrayList a(org.json.JSONArray) -> a
    java.lang.String a(java.util.HashMap) -> a
    org.json.JSONObject b(java.util.HashMap) -> b
    boolean a(java.lang.Object) -> a
    java.util.ArrayList b(java.lang.Object) -> b
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.smssdk.framework.utils.d -> cn.smssdk.d.b.e:
    android.content.Context c -> c
    java.lang.String d -> d
    cn.smssdk.framework.utils.d$a a -> a
    cn.smssdk.framework.utils.d$b b -> b
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.Object[]) -> b
    int b(java.lang.Throwable) -> b
    int c(java.lang.Throwable) -> c
    int c(java.lang.Object,java.lang.Object[]) -> c
    android.content.Context a() -> a
    java.lang.String b() -> b
cn.smssdk.framework.utils.d$a -> cn.smssdk.d.b.f:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
cn.smssdk.framework.utils.d$b -> cn.smssdk.d.b.g:
    int a(int,java.lang.String) -> a
    int b(int,java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
cn.smssdk.framework.utils.e -> cn.smssdk.d.b.h:
    cn.smssdk.framework.utils.e a -> a
    android.content.Context b -> b
    android.content.SharedPreferences c -> c
    cn.smssdk.framework.utils.e a(android.content.Context) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Object) -> a
    java.lang.Object c(java.lang.String) -> c
    void d(java.lang.String) -> d
cn.smssdk.framework.utils.f -> cn.smssdk.d.b.i:
    java.lang.String[] a -> a
    android.os.Handler b -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void b(android.os.Message) -> b
    android.os.Message b(android.os.Message,android.os.Handler$Callback) -> b
    android.os.Message b(int,android.os.Handler$Callback) -> b
    boolean a(android.os.Message,android.os.Handler$Callback) -> a
    boolean a(int,android.os.Handler$Callback) -> a
    boolean a(int,long,android.os.Handler$Callback) -> a
    void a(android.os.Message) -> a
cn.smssdk.framework.utils.g -> cn.smssdk.d.b.j:
    boolean handleMessage(android.os.Message) -> handleMessage
cn.smssdk.gui.CommonDialog -> cn.smssdk.gui.a:
    android.app.Dialog ProgressDialog(android.content.Context) -> a
cn.smssdk.gui.ContactDetailPage -> cn.smssdk.gui.b:
    java.lang.String phoneName -> b
    java.util.ArrayList phoneList -> c
    void onCreate() -> a
    void onResume() -> d
    void onPause() -> c
    void setContact(java.util.HashMap) -> c
    void onClick(android.view.View) -> onClick
    void sendMsg(java.lang.String) -> a
    void showDialog() -> l
    java.util.ArrayList access$0(cn.smssdk.gui.ContactDetailPage) -> a
    void access$1(cn.smssdk.gui.ContactDetailPage,java.lang.String) -> a
cn.smssdk.gui.ContactDetailPage$1 -> cn.smssdk.gui.c:
    cn.smssdk.gui.ContactDetailPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.smssdk.gui.ContactDetailPage$2 -> cn.smssdk.gui.d:
    cn.smssdk.gui.ContactDetailPage this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.smssdk.gui.ContactEntry -> cn.smssdk.gui.e:
    java.lang.String key -> a
    java.util.HashMap value -> b
    java.lang.String getKey() -> a
    java.util.HashMap getValue() -> b
    java.util.HashMap setValue(java.util.HashMap) -> a
    java.lang.String toString() -> toString
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
    java.lang.Object setValue(java.lang.Object) -> setValue
cn.smssdk.gui.ContactItemMaker -> cn.smssdk.gui.f:
    android.view.View getView(java.util.HashMap,android.view.View,android.view.ViewGroup) -> a
cn.smssdk.gui.ContactsAdapter -> cn.smssdk.gui.g:
    java.util.ArrayList titles -> b
    java.util.ArrayList contacts -> c
    java.util.ArrayList friendsInApp -> d
    java.util.ArrayList contactsOutApp -> e
    cn.smssdk.gui.ContactItemMaker itemMaker -> f
    void search(java.lang.String) -> a
    void setContactItemMaker(cn.smssdk.gui.ContactItemMaker) -> a
    void reSortFia(java.lang.String,java.util.ArrayList) -> a
    void reSortFoa(java.lang.String,java.util.ArrayList) -> b
    int getGroupCount() -> a
    int getCount(int) -> a
    java.lang.String getGroupTitle(int) -> b
    java.util.HashMap getItem(int,int) -> a
    android.widget.TextView getTitleView(int,android.widget.TextView,android.view.ViewGroup) -> a
    android.view.View getView(int,int,android.view.View,android.view.ViewGroup) -> a
    java.lang.Object getItem(int,int) -> b
cn.smssdk.gui.ContactsListView -> cn.smssdk.gui.ContactsListView:
    android.widget.ListView lvBody -> a
    cn.smssdk.gui.ContactsListView$InnerAdapter innerAdapter -> b
    cn.smssdk.gui.ContactsListView$GroupAdapter adapter -> c
    android.widget.TextView tvTitle -> d
    int curFirstItem -> e
    int titleHeight -> f
    android.widget.AbsListView$OnScrollListener osListener -> g
    void init(android.content.Context) -> a
    void setAdapter(cn.smssdk.gui.ContactsListView$GroupAdapter) -> setAdapter
    cn.smssdk.gui.ContactsListView$GroupAdapter getAdapter() -> getAdapter
    void notifyDataSetChanged() -> a
    void setTitle() -> b
    void setSelection(int) -> setSelection
    void setSelection(int,int) -> a
    void onScroll() -> c
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void access$0(cn.smssdk.gui.ContactsListView) -> a
    android.widget.AbsListView$OnScrollListener access$1(cn.smssdk.gui.ContactsListView) -> b
    void access$2(cn.smssdk.gui.ContactsListView,int) -> a
    android.widget.TextView access$3(cn.smssdk.gui.ContactsListView) -> c
    void access$4(cn.smssdk.gui.ContactsListView) -> d
cn.smssdk.gui.ContactsListView$1 -> cn.smssdk.gui.h:
    cn.smssdk.gui.ContactsListView this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
cn.smssdk.gui.ContactsListView$GroupAdapter -> cn.smssdk.gui.i:
    cn.smssdk.gui.ContactsListView view -> a
    int getGroupCount() -> a
    int getCount(int) -> a
    java.lang.String getGroupTitle(int) -> b
    java.lang.Object getItem(int,int) -> b
    android.widget.TextView getTitleView(int,android.widget.TextView,android.view.ViewGroup) -> a
    android.view.View getView(int,int,android.view.View,android.view.ViewGroup) -> a
    void notifyDataSetChanged() -> b
cn.smssdk.gui.ContactsListView$InnerAdapter -> cn.smssdk.gui.j:
    cn.smssdk.gui.ContactsListView$GroupAdapter adapter -> a
    java.util.ArrayList listData -> b
    java.util.ArrayList titleIndex -> c
    java.util.ArrayList lastItemIndex -> d
    void init() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemGroup(int) -> a
    boolean isTitle(int) -> b
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    boolean isLastItem(int) -> c
    java.util.ArrayList access$0(cn.smssdk.gui.ContactsListView$InnerAdapter) -> a
cn.smssdk.gui.ContactsPage -> cn.smssdk.gui.k:
    android.widget.EditText etSearch -> b
    cn.smssdk.gui.ContactsListView listView -> c
    cn.smssdk.gui.ContactsAdapter adapter -> d
    cn.smssdk.gui.ContactItemMaker itemMaker -> e
    android.app.Dialog pd -> f
    cn.smssdk.EventHandler handler -> g
    java.util.ArrayList friendsInApp -> h
    java.util.ArrayList contactsInMobile -> i
    void onCreate() -> a
    void onResume() -> d
    void onPause() -> c
    void show(android.content.Context) -> a
    void show(android.content.Context,cn.smssdk.gui.ContactItemMaker) -> a
    void initView() -> l
    void initData() -> m
    void onDestroy() -> h
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onClick(android.view.View) -> onClick
    void refreshContactList() -> n
    void access$0(cn.smssdk.gui.ContactsPage,java.util.ArrayList) -> a
    void access$1(cn.smssdk.gui.ContactsPage) -> a
    void access$2(cn.smssdk.gui.ContactsPage,java.util.ArrayList) -> b
    android.app.Dialog access$3(cn.smssdk.gui.ContactsPage) -> b
    android.app.Activity access$4(cn.smssdk.gui.ContactsPage) -> c
    cn.smssdk.gui.ContactsListView access$5(cn.smssdk.gui.ContactsPage) -> d
    java.util.ArrayList access$6(cn.smssdk.gui.ContactsPage) -> e
    java.util.ArrayList access$7(cn.smssdk.gui.ContactsPage) -> f
    void access$8(cn.smssdk.gui.ContactsPage,cn.smssdk.gui.ContactsAdapter) -> a
    cn.smssdk.gui.ContactsAdapter access$9(cn.smssdk.gui.ContactsPage) -> g
    cn.smssdk.gui.ContactItemMaker access$10(cn.smssdk.gui.ContactsPage) -> h
cn.smssdk.gui.ContactsPage$1 -> cn.smssdk.gui.l:
    cn.smssdk.gui.ContactsPage this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> a
    cn.smssdk.gui.ContactsPage access$0(cn.smssdk.gui.ContactsPage$1) -> a
cn.smssdk.gui.ContactsPage$1$1 -> cn.smssdk.gui.m:
    cn.smssdk.gui.ContactsPage$1 this$1 -> a
    void run() -> run
cn.smssdk.gui.ContactsPage$2 -> cn.smssdk.gui.n:
    cn.smssdk.gui.ContactsPage this$0 -> a
    void run() -> run
cn.smssdk.gui.CountryAdapter -> cn.smssdk.gui.o:
    java.util.HashMap rawData -> b
    java.util.ArrayList titles -> c
    java.util.ArrayList countries -> d
    void search(java.lang.String) -> a
    int getGroupCount() -> a
    int getCount(int) -> a
    java.lang.String getGroupTitle(int) -> b
    java.lang.String[] getItem(int,int) -> a
    android.view.View getTitleView(int,android.view.View,android.view.ViewGroup) -> a
    void onGroupChange(android.view.View,java.lang.String) -> a
    android.view.View getView(int,int,android.view.View,android.view.ViewGroup) -> a
    java.lang.Object getItem(int,int) -> b
cn.smssdk.gui.CountryListView -> cn.smssdk.gui.CountryListView:
    cn.smssdk.gui.GroupListView lvContries -> a
    android.widget.TextView tvScroll -> b
    android.widget.LinearLayout llScroll -> c
    cn.smssdk.gui.CountryAdapter adapter -> d
    void init(android.content.Context) -> a
    void initScroll(android.content.Context) -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onScroll(android.view.ViewGroup,float,float) -> a
    void onSearch(java.lang.String) -> a
    void setOnItemClickListener(cn.smssdk.gui.GroupListView$OnItemClickListener) -> setOnItemClickListener
    java.lang.String[] getCountry(int,int) -> a
cn.smssdk.gui.CountryPage -> cn.smssdk.gui.p:
    java.lang.String id -> b
    java.util.HashMap countryRules -> c
    cn.smssdk.EventHandler handler -> d
    cn.smssdk.gui.CountryListView listView -> e
    android.widget.EditText etSearch -> f
    android.app.Dialog pd -> g
    void setCountryId(java.lang.String) -> a
    void setCountryRuls(java.util.HashMap) -> c
    void onCreate() -> a
    void onResume() -> d
    void onPause() -> c
    void initPage() -> l
    void onCountryListGot(java.util.ArrayList) -> a
    void onItemClick(cn.smssdk.gui.GroupListView,android.view.View,int,int) -> a
    void onClick(android.view.View) -> onClick
    boolean onKeyEvent(int,android.view.KeyEvent) -> a
    boolean onFinish() -> g
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    android.app.Dialog access$0(cn.smssdk.gui.CountryPage) -> a
    void access$1(cn.smssdk.gui.CountryPage,java.util.ArrayList) -> a
    android.app.Activity access$2(cn.smssdk.gui.CountryPage) -> b
cn.smssdk.gui.CountryPage$1 -> cn.smssdk.gui.q:
    cn.smssdk.gui.CountryPage this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> a
    cn.smssdk.gui.CountryPage access$0(cn.smssdk.gui.CountryPage$1) -> a
cn.smssdk.gui.CountryPage$1$1 -> cn.smssdk.gui.r:
    cn.smssdk.gui.CountryPage$1 this$1 -> a
    int val$result -> b
    java.lang.Object val$data -> c
    void run() -> run
cn.smssdk.gui.DefaultContactViewItem -> cn.smssdk.gui.s:
    android.view.View getView(java.util.HashMap,android.view.View,android.view.ViewGroup) -> a
cn.smssdk.gui.DefaultContactViewItem$1 -> cn.smssdk.gui.t:
    cn.smssdk.gui.DefaultContactViewItem this$0 -> a
    java.util.HashMap val$user -> b
    android.view.ViewGroup val$parent -> c
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.DefaultContactViewItem$ViewHolder -> cn.smssdk.gui.u:
    android.view.View bg -> a
    m.framework.ui.widget.asyncview.AsyncImageView ivContact -> b
    android.widget.TextView tvName -> c
    android.widget.TextView tvContact -> d
    android.widget.Button btnAdd -> e
    cn.smssdk.gui.DefaultContactViewItem this$0 -> f
cn.smssdk.gui.GroupListView -> cn.smssdk.gui.v:
    android.widget.ListView lvBody -> a
    cn.smssdk.gui.GroupListView$InnerAdapter innerAdapter -> b
    cn.smssdk.gui.GroupListView$GroupAdapter adapter -> c
    android.view.View tvTitle -> d
    int curFirstItem -> e
    int titleHeight -> f
    android.widget.AbsListView$OnScrollListener osListener -> g
    cn.smssdk.gui.GroupListView$OnItemClickListener oicListener -> h
    void init(android.content.Context) -> a
    void setDividerHeight(int) -> setDividerHeight
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void setAdapter(cn.smssdk.gui.GroupListView$GroupAdapter) -> setAdapter
    cn.smssdk.gui.GroupListView$GroupAdapter getAdapter() -> getAdapter
    void notifyDataSetChanged() -> a
    void setTitle() -> b
    void setSelection(int) -> setSelection
    void setSelection(int,int) -> a
    void onScroll() -> c
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnItemClickListener(cn.smssdk.gui.GroupListView$OnItemClickListener) -> setOnItemClickListener
    void access$0(cn.smssdk.gui.GroupListView) -> a
    android.widget.AbsListView$OnScrollListener access$1(cn.smssdk.gui.GroupListView) -> b
    void access$2(cn.smssdk.gui.GroupListView,int) -> a
    android.view.View access$3(cn.smssdk.gui.GroupListView) -> c
    void access$4(cn.smssdk.gui.GroupListView) -> d
    cn.smssdk.gui.GroupListView$OnItemClickListener access$5(cn.smssdk.gui.GroupListView) -> e
    cn.smssdk.gui.GroupListView$InnerAdapter access$6(cn.smssdk.gui.GroupListView) -> f
cn.smssdk.gui.GroupListView$1 -> cn.smssdk.gui.w:
    cn.smssdk.gui.GroupListView this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
cn.smssdk.gui.GroupListView$2 -> cn.smssdk.gui.x:
    cn.smssdk.gui.GroupListView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.smssdk.gui.GroupListView$GroupAdapter -> cn.smssdk.gui.y:
    cn.smssdk.gui.GroupListView view -> a
    int getGroupCount() -> a
    int getCount(int) -> a
    java.lang.String getGroupTitle(int) -> b
    java.lang.Object getItem(int,int) -> b
    android.view.View getTitleView(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getView(int,int,android.view.View,android.view.ViewGroup) -> a
    void notifyDataSetChanged() -> b
    void onGroupChange(android.view.View,java.lang.String) -> a
cn.smssdk.gui.GroupListView$InnerAdapter -> cn.smssdk.gui.z:
    cn.smssdk.gui.GroupListView$GroupAdapter adapter -> a
    java.util.ArrayList listData -> b
    java.util.ArrayList titleIndex -> c
    java.util.ArrayList lastItemIndex -> d
    void init() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemGroup(int) -> a
    boolean isTitle(int) -> b
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    boolean isLastItem(int) -> c
    java.util.ArrayList access$0(cn.smssdk.gui.GroupListView$InnerAdapter) -> a
cn.smssdk.gui.GroupListView$OnItemClickListener -> cn.smssdk.gui.aa:
    void onItemClick(cn.smssdk.gui.GroupListView,android.view.View,int,int) -> a
cn.smssdk.gui.IdentifyNumPage -> cn.smssdk.gui.ab:
    java.lang.String phone -> b
    java.lang.String code -> c
    java.lang.String formatedPhone -> d
    int time -> e
    cn.smssdk.EventHandler handler -> f
    android.app.Dialog pd -> g
    android.widget.EditText etIdentifyNum -> h
    android.widget.TextView tvTitle -> i
    android.widget.TextView tvPhone -> j
    android.widget.TextView tvIdentifyNotify -> k
    android.widget.TextView tvUnreceiveIdentify -> l
    android.widget.ImageView ivClear -> m
    android.widget.Button btnSubmit -> n
    cn.smssdk.gui.SMSReceiver receiver -> o
    void setPhone(java.lang.String,java.lang.String,java.lang.String) -> a
    void onCreate() -> a
    void onResume() -> d
    void onPause() -> c
    boolean onFinish() -> g
    void countDown() -> l
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void receiveVerifyCode(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void showDialog() -> m
    void afterSubmit(int,java.lang.Object) -> a
    void afterGet(int,java.lang.Object) -> b
    void showNotifyDialog() -> n
    boolean onKeyEvent(int,android.view.KeyEvent) -> a
    void access$0(cn.smssdk.gui.IdentifyNumPage,int,java.lang.Object) -> a
    void access$1(cn.smssdk.gui.IdentifyNumPage,int,java.lang.Object) -> b
    int access$2(cn.smssdk.gui.IdentifyNumPage) -> a
    void access$3(cn.smssdk.gui.IdentifyNumPage,int) -> a
    android.app.Activity access$4(cn.smssdk.gui.IdentifyNumPage) -> b
    android.widget.TextView access$5(cn.smssdk.gui.IdentifyNumPage) -> c
    void access$6(cn.smssdk.gui.IdentifyNumPage) -> d
    android.app.Dialog access$7(cn.smssdk.gui.IdentifyNumPage) -> e
    void access$8(cn.smssdk.gui.IdentifyNumPage,android.app.Dialog) -> a
    java.lang.String access$9(cn.smssdk.gui.IdentifyNumPage) -> f
    java.lang.String access$10(cn.smssdk.gui.IdentifyNumPage) -> g
    void access$11(cn.smssdk.gui.IdentifyNumPage) -> h
cn.smssdk.gui.IdentifyNumPage$1 -> cn.smssdk.gui.ac:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> a
cn.smssdk.gui.IdentifyNumPage$10 -> cn.smssdk.gui.ad:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$2 -> cn.smssdk.gui.ae:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$3 -> cn.smssdk.gui.af:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$4 -> cn.smssdk.gui.ag:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.IdentifyNumPage$5 -> cn.smssdk.gui.ah:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
cn.smssdk.gui.IdentifyNumPage$6 -> cn.smssdk.gui.ai:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    int val$result -> b
    java.lang.Object val$data -> c
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$7 -> cn.smssdk.gui.aj:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    int val$result -> b
    java.lang.Object val$data -> c
    void run() -> run
cn.smssdk.gui.IdentifyNumPage$8 -> cn.smssdk.gui.ak:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.IdentifyNumPage$9 -> cn.smssdk.gui.al:
    cn.smssdk.gui.IdentifyNumPage this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.RegisterPage -> cn.smssdk.gui.am:
    cn.smssdk.EventHandler callback -> b
    android.widget.TextView tvCountry -> c
    android.widget.EditText etPhoneNum -> d
    android.widget.TextView tvCountryNum -> e
    android.widget.ImageView ivClear -> f
    android.widget.Button btnNext -> g
    java.lang.String currentId -> h
    java.lang.String currentCode -> i
    cn.smssdk.EventHandler handler -> j
    java.util.HashMap countryRules -> k
    android.app.Dialog pd -> l
    void setRegisterCallback(cn.smssdk.EventHandler) -> a
    void show(android.content.Context) -> a
    void onCreate() -> a
    java.lang.String getLine1Number(java.lang.String) -> a
    void onResume() -> d
    void onPause() -> c
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onClick(android.view.View) -> onClick
    void onResult(java.util.HashMap) -> b
    void onCountryListGot(java.util.ArrayList) -> a
    java.lang.String splitPhoneNum(java.lang.String) -> b
    void checkPhoneNum(java.lang.String,java.lang.String) -> b
    void showDialog(java.lang.String,java.lang.String) -> a
    void afterVerificationCodeRequested() -> l
    android.app.Dialog access$0(cn.smssdk.gui.RegisterPage) -> a
    void access$1(cn.smssdk.gui.RegisterPage,java.util.ArrayList) -> a
    void access$2(cn.smssdk.gui.RegisterPage) -> b
    android.app.Activity access$3(cn.smssdk.gui.RegisterPage) -> c
    void access$4(cn.smssdk.gui.RegisterPage,android.app.Dialog) -> a
cn.smssdk.gui.RegisterPage$1 -> cn.smssdk.gui.an:
    cn.smssdk.gui.RegisterPage this$0 -> a
    void afterEvent(int,int,java.lang.Object) -> a
    cn.smssdk.gui.RegisterPage access$0(cn.smssdk.gui.RegisterPage$1) -> a
cn.smssdk.gui.RegisterPage$1$1 -> cn.smssdk.gui.ao:
    cn.smssdk.gui.RegisterPage$1 this$1 -> a
    int val$result -> b
    int val$event -> c
    java.lang.Object val$data -> d
    void run() -> run
cn.smssdk.gui.RegisterPage$2 -> cn.smssdk.gui.ap:
    cn.smssdk.gui.RegisterPage this$0 -> a
    android.app.Dialog val$dialog -> b
    java.lang.String val$phone -> c
    java.lang.String val$code -> d
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.RegisterPage$3 -> cn.smssdk.gui.aq:
    cn.smssdk.gui.RegisterPage this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cn.smssdk.gui.SMSReceiver -> cn.smssdk.gui.ar:
    cn.smssdk.gui.SMSReceiver$SMSVerifyCodeListener verifyCodeListener -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void setSMSVerifyCodeListener(cn.smssdk.gui.SMSReceiver$SMSVerifyCodeListener) -> a
    android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent) -> a
cn.smssdk.gui.SMSReceiver$SMSVerifyCodeListener -> cn.smssdk.gui.as:
    void receiveVerifyCode(java.lang.String) -> a
com.baidu.android.bbalbs.common.a.a -> com.baidu.android.bbalbs.common.a.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.bbalbs.common.a.b -> com.baidu.android.bbalbs.common.a.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.bbalbs.common.a.c -> com.baidu.android.bbalbs.common.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.android.bbalbs.common.util.CommonParam -> com.baidu.android.bbalbs.common.util.CommonParam:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.android.bbalbs.common.util.a -> com.baidu.android.bbalbs.common.util.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.android.bbalbs.common.util.a$a -> com.baidu.android.bbalbs.common.util.a$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.bbalbs.common.util.a$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.android.pushservice.BasicPushNotificationBuilder -> com.baidu.android.pushservice.BasicPushNotificationBuilder:
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder getInner() -> getInner
    android.app.Notification construct(android.content.Context) -> construct
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder a(com.baidu.android.pushservice.BasicPushNotificationBuilder,com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder) -> a
com.baidu.android.pushservice.BasicPushNotificationBuilder$1 -> com.baidu.android.pushservice.BasicPushNotificationBuilder$1:
    android.content.Context a -> a
    com.baidu.android.pushservice.BasicPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder -> com.baidu.android.pushservice.CustomPushNotificationBuilder:
    boolean a -> a
    com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder getInner() -> getInner
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    void a(int) -> a
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder getInner() -> getInner
    boolean a(com.baidu.android.pushservice.CustomPushNotificationBuilder,boolean) -> a
    boolean a(com.baidu.android.pushservice.CustomPushNotificationBuilder) -> a
    void a(com.baidu.android.pushservice.CustomPushNotificationBuilder,int) -> a
com.baidu.android.pushservice.CustomPushNotificationBuilder$1 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$1:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    com.baidu.android.pushservice.CustomPushNotificationBuilder f -> f
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$2 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$2:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$3 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$3:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$4 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$4:
    java.lang.String a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$5 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$5:
    java.lang.String a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$6 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$6:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$7 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$7:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$8 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$8:
    android.net.Uri a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$9 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$9:
    long[] a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.IPushLightappListener -> com.baidu.android.pushservice.IPushLightappListener:
    void initialComplete(com.baidu.android.pushservice.PushLightapp) -> initialComplete
    void onSubscribeResult(int,java.lang.String,java.lang.String) -> onSubscribeResult
    void onUnsubscribeResult(int) -> onUnsubscribeResult
com.baidu.android.pushservice.Internal -> com.baidu.android.pushservice.Internal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    void createBdussIntent(android.content.Context) -> createBdussIntent
com.baidu.android.pushservice.Internal$1 -> com.baidu.android.pushservice.Internal$1:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$2 -> com.baidu.android.pushservice.Internal$2:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$3 -> com.baidu.android.pushservice.Internal$3:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$4 -> com.baidu.android.pushservice.Internal$4:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$5 -> com.baidu.android.pushservice.Internal$5:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.LoadExecutor -> com.baidu.android.pushservice.LoadExecutor:
    java.lang.String a -> a
    boolean loadPush(android.content.Context) -> loadPush
    boolean isPushLibLoaded(android.content.Context) -> isPushLibLoaded
    void excuteMethod(java.lang.Runnable,android.content.Context) -> excuteMethod
com.baidu.android.pushservice.LoadExecutor$1 -> com.baidu.android.pushservice.LoadExecutor$1:
    android.content.Context a -> a
    java.lang.Runnable b -> b
    void run() -> run
com.baidu.android.pushservice.PushConstants -> com.baidu.android.pushservice.PushConstants:
    java.lang.String EXTRA_PUSH_MESSAGE -> EXTRA_PUSH_MESSAGE
    java.lang.String EXTRA_PUSH_MESSAGE_STRING -> EXTRA_PUSH_MESSAGE_STRING
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
    java.lang.String ACTION_SDK_MESSAGE -> ACTION_SDK_MESSAGE
    java.lang.String ACTION_FB_MESSAGE -> ACTION_FB_MESSAGE
    java.lang.String ACTION_METHOD -> ACTION_METHOD
    java.lang.String ACTION_LAPP_RECEIVE -> ACTION_LAPP_RECEIVE
    java.lang.String ACTION_RECEIVE -> ACTION_RECEIVE
    java.lang.String ACTION_RECEIVER_NOTIFICATION_CLICK -> ACTION_RECEIVER_NOTIFICATION_CLICK
    java.lang.String ACTION_SDK_RECEIVE -> ACTION_SDK_RECEIVE
    java.lang.String ACTION_WEB_RECEIVE -> ACTION_WEB_RECEIVE
    java.lang.String EXTRA_WEB_BIND_API_KEY -> EXTRA_WEB_BIND_API_KEY
    java.lang.String ACTION_LAPP_MESSAGE -> ACTION_LAPP_MESSAGE
    java.lang.String METHOD_LAPP_BIND_INTENT -> METHOD_LAPP_BIND_INTENT
    java.lang.String METHOD_LAPP_UNBIND -> METHOD_LAPP_UNBIND
    java.lang.String METHOD_GET_LAPP_BIND_STATE -> METHOD_GET_LAPP_BIND_STATE
    java.lang.String EXTRA_LAPP_BIND_STATE -> EXTRA_LAPP_BIND_STATE
    java.lang.String METHOD_SET_LAPP_TAGS -> METHOD_SET_LAPP_TAGS
    java.lang.String METHOD_DEL_LAPP_TAGS -> METHOD_DEL_LAPP_TAGS
    int LOGIN_TYPE_LIGHT_APP_API_KEY -> LOGIN_TYPE_LIGHT_APP_API_KEY
    java.lang.String EXTRA_METHOD -> EXTRA_METHOD
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String EXTRA_ERROR_CODE -> EXTRA_ERROR_CODE
    java.lang.String EXTRA_CONTENT -> EXTRA_CONTENT
    java.lang.String EXTRA_TAGS_LIST -> EXTRA_TAGS_LIST
    java.lang.String EXTRA_APP_ID -> EXTRA_APP_ID
    java.lang.String EXTRA_USER_ID -> EXTRA_USER_ID
    java.lang.String EXTRA_APP -> EXTRA_APP
    java.lang.String EXTRA_ACCESS_TOKEN -> EXTRA_ACCESS_TOKEN
    java.lang.String EXTRA_API_KEY -> EXTRA_API_KEY
    java.lang.String EXTRA_BIND_NAME -> EXTRA_BIND_NAME
    java.lang.String EXTRA_BIND_STATUS -> EXTRA_BIND_STATUS
    java.lang.String EXTRA_PUSH_SDK_VERSION -> EXTRA_PUSH_SDK_VERSION
    java.lang.String EXTRA_MSG_KEY -> EXTRA_MSG_KEY
    java.lang.String EXTRA_MSG -> EXTRA_MSG
    java.lang.String EXTRA_CB_URL -> EXTRA_CB_URL
    java.lang.String EXTRA_TIMESTAMP -> EXTRA_TIMESTAMP
    java.lang.String EXTRA_MSGID -> EXTRA_MSGID
    java.lang.String EXTRA_HASHCODE -> EXTRA_HASHCODE
    java.lang.String EXTRA_OPENTYPE -> EXTRA_OPENTYPE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    int OPEN_BY_USER -> OPEN_BY_USER
    int OPEN_BY_NOTIFICATION -> OPEN_BY_NOTIFICATION
    int BIND_STATUS_ONLINE -> BIND_STATUS_ONLINE
    int BIND_STATUS_OFFLINE -> BIND_STATUS_OFFLINE
    java.lang.String METHOD_SEND_MSG_TO_SERVER -> METHOD_SEND_MSG_TO_SERVER
    java.lang.String METHOD_SEND_MSG_TO_USER -> METHOD_SEND_MSG_TO_USER
    java.lang.String METHOD_APPSTART -> METHOD_APPSTART
    java.lang.String METHOD_APPSTOP -> METHOD_APPSTOP
    java.lang.String METHOD_SEND -> METHOD_SEND
    java.lang.String METHOD_BIND -> METHOD_BIND
    java.lang.String METHOD_UNBIND -> METHOD_UNBIND
    java.lang.String EXTRA_FETCH_TYPE -> EXTRA_FETCH_TYPE
    java.lang.String EXTRA_FETCH_NUM -> EXTRA_FETCH_NUM
    java.lang.String METHOD_FETCH -> METHOD_FETCH
    java.lang.String METHOD_COUNT -> METHOD_COUNT
    java.lang.String EXTRA_MSG_IDS -> EXTRA_MSG_IDS
    java.lang.String METHOD_DELETE -> METHOD_DELETE
    java.lang.String METHOD_GBIND -> METHOD_GBIND
    java.lang.String EXTRA_GID -> EXTRA_GID
    java.lang.String METHOD_SET_TAGS -> METHOD_SET_TAGS
    java.lang.String METHOD_DEL_TAGS -> METHOD_DEL_TAGS
    java.lang.String EXTRA_TAGS -> EXTRA_TAGS
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_NOTIFICATION_CONTENT -> EXTRA_NOTIFICATION_CONTENT
    java.lang.String METHOD_GUNBIND -> METHOD_GUNBIND
    java.lang.String METHOD_GINFO -> METHOD_GINFO
    java.lang.String METHOD_GLIST -> METHOD_GLIST
    java.lang.String METHOD_LISTTAGS -> METHOD_LISTTAGS
    java.lang.String METHOD_LIST_LAPP_TAGS -> METHOD_LIST_LAPP_TAGS
    java.lang.String METHOD_FETCHGMSG -> METHOD_FETCHGMSG
    java.lang.String EXTRA_GROUP_FETCH_TYPE -> EXTRA_GROUP_FETCH_TYPE
    java.lang.String EXTRA_GROUP_FETCH_NUM -> EXTRA_GROUP_FETCH_NUM
    java.lang.String METHOD_COUNTGMSG -> METHOD_COUNTGMSG
    java.lang.String METHOD_ONLINE -> METHOD_ONLINE
    int ERROR_SUCCESS -> ERROR_SUCCESS
    int ERROR_NETWORK_ERROR -> ERROR_NETWORK_ERROR
    int ERROR_SERVICE_NOT_AVAILABLE -> ERROR_SERVICE_NOT_AVAILABLE
    int ERROR_SERVICE_NOT_AVAILABLE_TEMP -> ERROR_SERVICE_NOT_AVAILABLE_TEMP
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_SERVER_INTERNAL_ERROR -> ERROR_SERVER_INTERNAL_ERROR
    int ERROR_METHOD_ERROR -> ERROR_METHOD_ERROR
    int ERROR_PARAMS_ERROR -> ERROR_PARAMS_ERROR
    int ERROR_AUTHENTICATION_FAILED -> ERROR_AUTHENTICATION_FAILED
    int ERROR_QUOTA_USE_UP -> ERROR_QUOTA_USE_UP
    int ERROR_DATA_NOT_FOUND -> ERROR_DATA_NOT_FOUND
    int ERROR_TIME_EXPIRES -> ERROR_TIME_EXPIRES
    int ERROR_CHANNEL_TOKEN_TIMEOUT -> ERROR_CHANNEL_TOKEN_TIMEOUT
    int ERROR_BIND_NOT_EXIST -> ERROR_BIND_NOT_EXIST
    int ERROR_BIND_OVERLOAD -> ERROR_BIND_OVERLOAD
    int LOGIN_TYPE_API_KEY -> LOGIN_TYPE_API_KEY
    int LOGIN_TYPE_ACCESS_TOKEN -> LOGIN_TYPE_ACCESS_TOKEN
    int LOGIN_TYPE_BDUSS -> LOGIN_TYPE_BDUSS
    int LOGIN_TYPE_UNKNOWN -> LOGIN_TYPE_UNKNOWN
    int ERROR_AIDL_FAIL -> ERROR_AIDL_FAIL
    int a -> a
    java.lang.String b -> b
    java.lang.String rsaEncrypt(java.lang.String) -> rsaEncrypt
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
    java.lang.String getErrorMsg(int) -> getErrorMsg
    byte[] a(byte[],java.lang.String,int) -> a
com.baidu.android.pushservice.PushLightapp -> com.baidu.android.pushservice.PushLightapp:
    int b -> b
    boolean c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.PushLightapp e -> e
    com.baidu.android.pushservice.IPushLightappListener f -> f
    android.content.Context g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    com.baidu.android.pushservice.aidl.IPushService a -> a
    android.content.ServiceConnection k -> k
    java.lang.String ACTION_REGISTER_SYNC -> ACTION_REGISTER_SYNC
    java.lang.String SHARED_NAME_SETTINGS -> SHARED_NAME_SETTINGS
    int CONTEXT_FLAG_MODE_MULTI_PROCESS -> CONTEXT_FLAG_MODE_MULTI_PROCESS
    java.lang.String KEY_PRIORITY2 -> KEY_PRIORITY2
    java.lang.String SETTINGS_KEY_CURRENT_PACKAGE_NAME -> SETTINGS_KEY_CURRENT_PACKAGE_NAME
    void c() -> c
    com.baidu.android.pushservice.PushLightapp a(android.content.Context) -> a
    void getInstanceAsync(android.content.Context,com.baidu.android.pushservice.IPushLightappListener) -> getInstanceAsync
    boolean isReady() -> isReady
    void destroy() -> destroy
    void subscribeLight(java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unsubscribeLight
    java.lang.String getSubcribeApps() -> getSubcribeApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.util.List getFriendPackages(android.content.Context) -> getFriendPackages
    boolean a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    com.baidu.android.pushservice.IPushLightappListener a() -> a
    com.baidu.android.pushservice.PushLightapp b() -> b
    boolean a(com.baidu.android.pushservice.PushLightapp,boolean) -> a
    void a(com.baidu.android.pushservice.PushLightapp) -> a
com.baidu.android.pushservice.PushLightapp$1 -> com.baidu.android.pushservice.PushLightapp$1:
    com.baidu.android.pushservice.PushLightapp a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.android.pushservice.PushLightapp$2 -> com.baidu.android.pushservice.PushLightapp$2:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int) -> onUnsubscribe
    void onSubscribe(int,java.lang.String,java.lang.String) -> onSubscribe
com.baidu.android.pushservice.PushLightapp$3 -> com.baidu.android.pushservice.PushLightapp$3:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onSubscribe(int,java.lang.String,java.lang.String) -> onSubscribe
    void onUnsubscribe(int) -> onUnsubscribe
com.baidu.android.pushservice.PushManager -> com.baidu.android.pushservice.PushManager:
    java.lang.String a -> a
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.PushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    boolean a(android.content.Context) -> a
    void tryConnect(android.content.Context) -> tryConnect
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    void lappUnbind(android.content.Context,java.lang.String) -> lappUnbind
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    java.util.HashMap getAppNotiMap(android.content.Context) -> getAppNotiMap
    void saveAppNotiMap(android.content.Context,java.util.HashMap) -> saveAppNotiMap
com.baidu.android.pushservice.PushManager$1 -> com.baidu.android.pushservice.PushManager$1:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$10 -> com.baidu.android.pushservice.PushManager$10:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$11 -> com.baidu.android.pushservice.PushManager$11:
    android.content.Context a -> a
    int b -> b
    int c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$12 -> com.baidu.android.pushservice.PushManager$12:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$13 -> com.baidu.android.pushservice.PushManager$13:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$14 -> com.baidu.android.pushservice.PushManager$14:
    android.content.Context a -> a
    java.lang.String[] b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$15 -> com.baidu.android.pushservice.PushManager$15:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.baidu.android.pushservice.PushManager$16 -> com.baidu.android.pushservice.PushManager$16:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$17 -> com.baidu.android.pushservice.PushManager$17:
    android.content.Context a -> a
    java.util.List b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$18 -> com.baidu.android.pushservice.PushManager$18:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$19 -> com.baidu.android.pushservice.PushManager$19:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$2 -> com.baidu.android.pushservice.PushManager$2:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$20 -> com.baidu.android.pushservice.PushManager$20:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$21 -> com.baidu.android.pushservice.PushManager$21:
    android.content.Context a -> a
    java.util.List b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$22 -> com.baidu.android.pushservice.PushManager$22:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$23 -> com.baidu.android.pushservice.PushManager$23:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$24 -> com.baidu.android.pushservice.PushManager$24:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$25 -> com.baidu.android.pushservice.PushManager$25:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$26 -> com.baidu.android.pushservice.PushManager$26:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$27 -> com.baidu.android.pushservice.PushManager$27:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$28 -> com.baidu.android.pushservice.PushManager$28:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    void run() -> run
com.baidu.android.pushservice.PushManager$29 -> com.baidu.android.pushservice.PushManager$29:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$3 -> com.baidu.android.pushservice.PushManager$3:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$30 -> com.baidu.android.pushservice.PushManager$30:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$31 -> com.baidu.android.pushservice.PushManager$31:
    android.content.Context a -> a
    int b -> b
    com.baidu.android.pushservice.PushNotificationBuilder c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$32 -> com.baidu.android.pushservice.PushManager$32:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$33 -> com.baidu.android.pushservice.PushManager$33:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$34 -> com.baidu.android.pushservice.PushManager$34:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$35 -> com.baidu.android.pushservice.PushManager$35:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$36 -> com.baidu.android.pushservice.PushManager$36:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$37 -> com.baidu.android.pushservice.PushManager$37:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$38 -> com.baidu.android.pushservice.PushManager$38:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$39 -> com.baidu.android.pushservice.PushManager$39:
    java.util.HashMap a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$4 -> com.baidu.android.pushservice.PushManager$4:
    android.app.Activity a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$40 -> com.baidu.android.pushservice.PushManager$40:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$41 -> com.baidu.android.pushservice.PushManager$41:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$42 -> com.baidu.android.pushservice.PushManager$42:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$43 -> com.baidu.android.pushservice.PushManager$43:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$44 -> com.baidu.android.pushservice.PushManager$44:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$5 -> com.baidu.android.pushservice.PushManager$5:
    android.app.Activity a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$6 -> com.baidu.android.pushservice.PushManager$6:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$7 -> com.baidu.android.pushservice.PushManager$7:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$8 -> com.baidu.android.pushservice.PushManager$8:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$9 -> com.baidu.android.pushservice.PushManager$9:
    android.content.Context a -> a
    int b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder -> com.baidu.android.pushservice.PushNotificationBuilder:
    boolean a -> a
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder mInstance -> mInstance
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder getInner() -> getInner
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    void a(int) -> a
    android.app.Notification construct(android.content.Context) -> construct
    boolean a(com.baidu.android.pushservice.PushNotificationBuilder,boolean) -> a
    boolean a(com.baidu.android.pushservice.PushNotificationBuilder) -> a
    void a(com.baidu.android.pushservice.PushNotificationBuilder,int) -> a
com.baidu.android.pushservice.PushNotificationBuilder$1 -> com.baidu.android.pushservice.PushNotificationBuilder$1:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$2 -> com.baidu.android.pushservice.PushNotificationBuilder$2:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$3 -> com.baidu.android.pushservice.PushNotificationBuilder$3:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$4 -> com.baidu.android.pushservice.PushNotificationBuilder$4:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$5 -> com.baidu.android.pushservice.PushNotificationBuilder$5:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$6 -> com.baidu.android.pushservice.PushNotificationBuilder$6:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$7 -> com.baidu.android.pushservice.PushNotificationBuilder$7:
    android.net.Uri a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$8 -> com.baidu.android.pushservice.PushNotificationBuilder$8:
    long[] a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushSettings -> com.baidu.android.pushservice.PushSettings:
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
com.baidu.android.pushservice.PushSettings$1 -> com.baidu.android.pushservice.PushSettings$1:
    android.content.Context a -> a
    boolean b -> b
    void run() -> run
com.baidu.android.pushservice.aidl.IPushService -> com.baidu.android.pushservice.aidl.IPushService:
    void subscribeLight(java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unsubscribeLight
    java.lang.String getSubcribedApps() -> getSubcribedApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
com.baidu.android.pushservice.aidl.IPushService$Stub -> com.baidu.android.pushservice.aidl.IPushService$Stub:
    java.lang.String r -> r
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    com.baidu.android.pushservice.aidl.IPushService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.aidl.IPushService$Stub$a -> com.baidu.android.pushservice.aidl.IPushService$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void subscribeLight(java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unsubscribeLight
    java.lang.String getSubcribedApps() -> getSubcribedApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
com.baidu.android.pushservice.aidl.IPushServiceListener -> com.baidu.android.pushservice.aidl.IPushServiceListener:
    void onSubscribe(int,java.lang.String,java.lang.String) -> onSubscribe
    void onUnsubscribe(int) -> onUnsubscribe
com.baidu.android.pushservice.aidl.IPushServiceListener$Stub -> com.baidu.android.pushservice.aidl.IPushServiceListener$Stub:
    java.lang.String a -> a
    int c -> c
    int d -> d
    com.baidu.android.pushservice.aidl.IPushServiceListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.aidl.IPushServiceListener$Stub$a -> com.baidu.android.pushservice.aidl.IPushServiceListener$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void onSubscribe(int,java.lang.String,java.lang.String) -> onSubscribe
    void onUnsubscribe(int) -> onUnsubscribe
com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder:
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder getInner() -> getInner
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder:
    com.baidu.android.pushservice.internal.CustomPushNotificationBuilder getInner() -> getInner
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    com.baidu.android.pushservice.internal.PushNotificationBuilder getInner() -> getInner
com.baidu.android.pushservice.apiproxy.BridgeInternal -> com.baidu.android.pushservice.apiproxy.BridgeInternal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    void createBdussIntent(android.content.Context) -> createBdussIntent
com.baidu.android.pushservice.apiproxy.BridgePushConstants -> com.baidu.android.pushservice.apiproxy.BridgePushConstants:
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
com.baidu.android.pushservice.apiproxy.BridgePushManager -> com.baidu.android.pushservice.apiproxy.BridgePushManager:
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    void tryConnect(android.content.Context) -> tryConnect
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void lappUnbind(android.content.Context,java.lang.String) -> lappUnbind
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    java.util.HashMap getAppNotiMap() -> getAppNotiMap
    void saveAppNotiMap(java.util.HashMap) -> saveAppNotiMap
com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder:
    com.baidu.android.pushservice.internal.PushNotificationBuilder mInstance -> mInstance
    com.baidu.android.pushservice.internal.PushNotificationBuilder getInner() -> getInner
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder$1 -> com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder$1:
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder a -> a
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgePushSettings -> com.baidu.android.pushservice.apiproxy.BridgePushSettings:
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
com.baidu.android.silentupdate.SilentManager -> com.baidu.android.silentupdate.SilentManager:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
    void enableDebugMode(boolean) -> enableDebugMode
    void enableRSA(boolean) -> enableRSA
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    boolean loadLib(android.content.Context,java.lang.String,java.lang.String) -> loadLib
    boolean loadLib(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> loadLib
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.io.File) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    void a(java.io.Closeable) -> a
com.baidu.android.silentupdate.a -> com.baidu.android.silentupdate.a:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.silentupdate.b -> com.baidu.android.silentupdate.b:
    java.lang.String a -> a
    boolean a(java.lang.ClassLoader,java.lang.ClassLoader) -> a
    java.lang.ClassLoader a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
com.baidu.android.silentupdate.c -> com.baidu.android.silentupdate.c:
    void a(android.app.Application,java.lang.String) -> a
com.baidu.frontia.Frontia -> com.baidu.frontia.Frontia:
    java.lang.String a -> a
    com.baidu.frontia.base.impl.FrontiaImpl b -> b
    java.lang.String c -> c
    boolean init(android.content.Context,java.lang.String) -> init
    java.lang.String getApiKey() -> getApiKey
    java.lang.String getFrontiaVersion() -> getFrontiaVersion
    void setSlientUpdateEnabled(boolean) -> setSlientUpdateEnabled
    com.baidu.frontia.api.FrontiaPush getPush() -> getPush
com.baidu.frontia.FrontiaApplication -> com.baidu.frontia.FrontiaApplication:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void onCreate() -> onCreate
    void initFrontiaApplication(android.content.Context) -> initFrontiaApplication
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
com.baidu.frontia.FrontiaQuery -> com.baidu.frontia.FrontiaQuery:
    com.baidu.frontia.base.impl.FrontiaQueryImpl a -> a
    void a(com.baidu.frontia.base.impl.FrontiaQueryImpl) -> a
    org.json.JSONObject toJSONObject() -> toJSONObject
    com.baidu.frontia.FrontiaQuery equals(java.lang.String,java.lang.Object) -> equals
    com.baidu.frontia.FrontiaQuery notEqual(java.lang.String,java.lang.Object) -> notEqual
    com.baidu.frontia.FrontiaQuery greaterThan(java.lang.String,java.lang.Object) -> greaterThan
    com.baidu.frontia.FrontiaQuery lessThan(java.lang.String,java.lang.Object) -> lessThan
    com.baidu.frontia.FrontiaQuery greaterThanEqualTo(java.lang.String,java.lang.Object) -> greaterThanEqualTo
    com.baidu.frontia.FrontiaQuery lessThanEqualTo(java.lang.String,java.lang.Object) -> lessThanEqualTo
    com.baidu.frontia.FrontiaQuery in(java.lang.String,java.lang.Object[]) -> in
    com.baidu.frontia.FrontiaQuery notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.baidu.frontia.FrontiaQuery regEx(java.lang.String,java.lang.String) -> regEx
    com.baidu.frontia.FrontiaQuery startsWith(java.lang.String,java.lang.String) -> startsWith
    com.baidu.frontia.FrontiaQuery endsWith(java.lang.String,java.lang.String) -> endsWith
    com.baidu.frontia.FrontiaQuery all(java.lang.String,java.lang.Object[]) -> all
    com.baidu.frontia.FrontiaQuery size(java.lang.String,int) -> size
    com.baidu.frontia.FrontiaQuery and(com.baidu.frontia.FrontiaQuery) -> and
    com.baidu.frontia.FrontiaQuery or(com.baidu.frontia.FrontiaQuery) -> or
    com.baidu.frontia.FrontiaQuery not() -> not
    com.baidu.frontia.FrontiaQuery setLimit(int) -> setLimit
    int getLimit() -> getLimit
    com.baidu.frontia.FrontiaQuery addSort(java.lang.String,com.baidu.frontia.FrontiaQuery$SortOrder) -> addSort
    org.json.JSONObject getSort() -> getSort
    com.baidu.frontia.FrontiaQuery setSkip(int) -> setSkip
    int getSkip() -> getSkip
com.baidu.frontia.FrontiaQuery$SortOrder -> com.baidu.frontia.FrontiaQuery$SortOrder:
    com.baidu.frontia.FrontiaQuery$SortOrder ASC -> ASC
    com.baidu.frontia.FrontiaQuery$SortOrder DESC -> DESC
    com.baidu.frontia.FrontiaQuery$SortOrder[] a -> a
    com.baidu.frontia.FrontiaQuery$SortOrder[] values() -> values
    com.baidu.frontia.FrontiaQuery$SortOrder valueOf(java.lang.String) -> valueOf
com.baidu.frontia.a -> com.baidu.frontia.a:
    java.lang.String[] a() -> a
    void a(android.content.Context,java.lang.String) -> a
com.baidu.frontia.api.FrontiaPush -> com.baidu.frontia.api.FrontiaPush:
    com.baidu.frontia.api.FrontiaPush a -> a
    com.baidu.frontia.module.push.FrontiaPushImpl b -> b
    android.content.Context c -> c
    com.baidu.frontia.module.push.FrontiaPushImpl a() -> a
    com.baidu.frontia.api.FrontiaPush newInstance(android.content.Context) -> newInstance
    void init(java.lang.String) -> init
    void setNotificationBuilder(int,com.baidu.frontia.api.FrontiaPushUtil$a) -> setNotificationBuilder
    void stop() -> stop
    void resume() -> resume
    boolean isPushWorking() -> isPushWorking
    void start() -> start
    void start(java.lang.String) -> start
    void setTags(java.util.List) -> setTags
    void deleteTags(java.util.List) -> deleteTags
    void listTags() -> listTags
    void enableLbs() -> enableLbs
    void disableLbs() -> disableLbs
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void listMessage(com.baidu.frontia.FrontiaQuery,com.baidu.frontia.api.FrontiaPushListener$ListMessageListener) -> listMessage
    void describeMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener) -> describeMessage
    void replaceMessage(java.lang.String,java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void replaceMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void replaceMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void removeMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> removeMessage
    void setDebugModeEnabled(boolean) -> setDebugModeEnabled
com.baidu.frontia.api.FrontiaPush$a -> com.baidu.frontia.api.FrontiaPush$a:
    com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$CommonMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$CommonMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener a(com.baidu.frontia.api.FrontiaPush$a) -> a
com.baidu.frontia.api.FrontiaPush$a$1 -> com.baidu.frontia.api.FrontiaPush$a$1:
    com.baidu.frontia.api.FrontiaPush$a a -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$b -> com.baidu.frontia.api.FrontiaPush$b:
    com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener a(com.baidu.frontia.api.FrontiaPush$b) -> a
com.baidu.frontia.api.FrontiaPush$b$1 -> com.baidu.frontia.api.FrontiaPush$b$1:
    com.baidu.frontia.api.FrontiaPush$b a -> a
    void onSuccess(com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageResult) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$c -> com.baidu.frontia.api.FrontiaPush$c:
    com.baidu.frontia.api.FrontiaPushListener$ListMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$ListMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$ListMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$ListMessageListener a(com.baidu.frontia.api.FrontiaPush$c) -> a
com.baidu.frontia.api.FrontiaPush$c$1 -> com.baidu.frontia.api.FrontiaPush$c$1:
    com.baidu.frontia.api.FrontiaPush$c a -> a
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$d -> com.baidu.frontia.api.FrontiaPush$d:
    com.baidu.frontia.api.FrontiaPushListener$PushMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$PushMessageListener a(com.baidu.frontia.api.FrontiaPush$d) -> a
com.baidu.frontia.api.FrontiaPush$d$1 -> com.baidu.frontia.api.FrontiaPush$d$1:
    com.baidu.frontia.api.FrontiaPush$d a -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener -> com.baidu.frontia.api.FrontiaPushListener:
com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener -> com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener -> com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener:
    void onSuccess(com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult -> com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult:
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageResult a -> a
    java.lang.String getId() -> getId
    java.lang.String getUserId() -> getUserId
    java.lang.String getChannelId() -> getChannelId
    java.lang.String getTag() -> getTag
    com.baidu.frontia.api.FrontiaPushUtil$Trigger getTrigger() -> getTrigger
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent getMessage() -> getMessage
    org.json.JSONObject getExtras() -> getExtras
com.baidu.frontia.api.FrontiaPushListener$ListMessageListener -> com.baidu.frontia.api.FrontiaPushListener$ListMessageListener:
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$PushMessageListener -> com.baidu.frontia.api.FrontiaPushListener$PushMessageListener:
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushMessageReceiver -> com.baidu.frontia.api.FrontiaPushMessageReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
com.baidu.frontia.api.FrontiaPushUtil -> com.baidu.frontia.api.FrontiaPushUtil:
com.baidu.frontia.api.FrontiaPushUtil$AndroidContent -> com.baidu.frontia.api.FrontiaPushUtil$AndroidContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$AndroidContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$AndroidContentImpl a() -> a
    void setBuilderId(int) -> setBuilderId
    int getBuilderId() -> getBuilderId
    void setPKGContent(java.lang.String) -> setPKGContent
    java.lang.String getPKGContent() -> getPKGContent
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getUrl() -> getUrl
    void setNotificationStyle(com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle) -> setNotificationStyle
    com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle getNotificationStyle() -> getNotificationStyle
com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle -> com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$DefaultNotificationStyleImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$DefaultNotificationStyleImpl a() -> a
    void enableAlert() -> enableAlert
    void disableAlert() -> disableAlert
    boolean isAlertEnabled() -> isAlertEnabled
    void enableVibration() -> enableVibration
    void disableVibration() -> disableVibration
    boolean isVibrationEnabled() -> isVibrationEnabled
    void enableDismissible() -> enableDismissible
    void disableDismissible() -> disableDismissible
    boolean isDismissible() -> isDismissible
com.baidu.frontia.api.FrontiaPushUtil$DeployStatus -> com.baidu.frontia.api.FrontiaPushUtil$DeployStatus:
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus DEVELOPE -> DEVELOPE
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus PRODUCTION -> PRODUCTION
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus[] a -> a
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus[] values() -> values
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus valueOf(java.lang.String) -> valueOf
com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushBasicNotificationBuilder -> com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushBasicNotificationBuilder:
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushCustomNotificationBuilder -> com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushCustomNotificationBuilder:
    com.baidu.android.pushservice.internal.CustomPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
com.baidu.frontia.api.FrontiaPushUtil$IOSContent -> com.baidu.frontia.api.FrontiaPushUtil$IOSContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$IOSContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$IOSContentImpl a() -> a
    void setAlertMsg(java.lang.String) -> setAlertMsg
    java.lang.String getAlertMsg() -> getAlertMsg
    void setSoundFile(java.lang.String) -> setSoundFile
    java.lang.String getSoundFile() -> getSoundFile
    void setBadge(int) -> setBadge
    int getBadge() -> getBadge
com.baidu.frontia.api.FrontiaPushUtil$MessageContent -> com.baidu.frontia.api.FrontiaPushUtil$MessageContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl a -> a
    int b -> b
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent createStringMessage(java.lang.String,java.lang.String) -> createStringMessage
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent createNotificationMessage(java.lang.String,java.lang.String,java.lang.String) -> createNotificationMessage
    void setMessage(java.lang.String) -> setMessage
    void setNotification(com.baidu.frontia.api.FrontiaPushUtil$NotificationContent) -> setNotification
    java.lang.String getMessageKeys() -> getMessageKeys
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus getDeployStatus() -> getDeployStatus
    java.lang.String getMessage() -> getMessage
    com.baidu.frontia.api.FrontiaPushUtil$NotificationContent getNotification() -> getNotification
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl a() -> a
com.baidu.frontia.api.FrontiaPushUtil$NotificationContent -> com.baidu.frontia.api.FrontiaPushUtil$NotificationContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$NotificationContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$NotificationContentImpl a() -> a
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    void addCustomContent(java.lang.String,java.lang.String) -> addCustomContent
    org.json.JSONObject getCustomContent() -> getCustomContent
    void addAndroidContent(com.baidu.frontia.api.FrontiaPushUtil$AndroidContent) -> addAndroidContent
    com.baidu.frontia.api.FrontiaPushUtil$AndroidContent getAndroidContent() -> getAndroidContent
    void addIOSContent(com.baidu.frontia.api.FrontiaPushUtil$IOSContent) -> addIOSContent
    com.baidu.frontia.api.FrontiaPushUtil$IOSContent getIOSContent() -> getIOSContent
com.baidu.frontia.api.FrontiaPushUtil$Trigger -> com.baidu.frontia.api.FrontiaPushUtil$Trigger:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$TriggerImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$TriggerImpl a() -> a
    void setTime(java.lang.String) -> setTime
    java.lang.String getTime() -> getTime
    void setCrontab(java.lang.String) -> setCrontab
    java.lang.String getCrontab() -> getCrontab
com.baidu.frontia.api.FrontiaPushUtil$a -> com.baidu.frontia.api.FrontiaPushUtil$a:
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
com.baidu.frontia.framework.IModule -> com.baidu.frontia.framework.IModule:
    void init(java.lang.String) -> init
com.baidu.lbsapi.auth.ErrorMessage -> com.baidu.lbsapi.auth.ErrorMessage:
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.a -> com.baidu.lbsapi.auth.a:
    boolean a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b -> com.baidu.lbsapi.auth.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean b(android.content.Context,java.lang.String) -> b
com.baidu.lbsapi.auth.b$a -> com.baidu.lbsapi.auth.b$a:
    java.lang.String a(byte[]) -> a
com.baidu.lbsapi.auth.c -> com.baidu.lbsapi.auth.c:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.HashMap e -> e
    com.baidu.lbsapi.auth.c$a f -> f
    void a(java.util.HashMap,com.baidu.lbsapi.auth.c$a) -> a
    void a(java.lang.String) -> a
    boolean a(org.apache.http.client.HttpClient) -> a
    void b(org.apache.http.client.HttpClient) -> b
    void a(org.apache.http.client.HttpClient,java.lang.String,java.util.HashMap) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String a(android.content.Context) -> a
    java.util.HashMap a(java.util.HashMap) -> a
    org.apache.http.client.HttpClient a() -> a
    java.lang.String a(com.baidu.lbsapi.auth.c) -> a
    java.util.HashMap b(com.baidu.lbsapi.auth.c) -> b
    void a(com.baidu.lbsapi.auth.c,java.lang.String,java.util.HashMap) -> a
com.baidu.lbsapi.auth.c$a -> com.baidu.lbsapi.auth.c$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.c$b -> com.baidu.lbsapi.auth.c$b:
    javax.net.ssl.SSLContext a -> a
    javax.net.ssl.X509TrustManager b -> b
    com.baidu.lbsapi.auth.c c -> c
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.baidu.lbsapi.auth.d -> com.baidu.lbsapi.auth.d:
    com.baidu.lbsapi.auth.c a -> a
    void run() -> run
com.baidu.lbsapi.auth.e -> com.baidu.lbsapi.auth.e:
    boolean a -> a
    android.content.Context b -> b
    com.baidu.lbsapi.auth.c c -> c
    com.baidu.lbsapi.auth.j d -> d
    int e -> e
    java.util.Hashtable f -> f
    android.os.Handler g -> g
    void c() -> c
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    int a(java.lang.String) -> a
    int a(boolean,java.lang.String,java.util.Hashtable,com.baidu.lbsapi.auth.i) -> a
    boolean b(java.lang.String) -> b
    void a(boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> a
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String a(android.content.Context) -> a
    java.util.Hashtable a() -> a
    boolean a(com.baidu.lbsapi.auth.e,java.lang.String) -> a
    void a(com.baidu.lbsapi.auth.e,boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> a
    com.baidu.lbsapi.auth.j b() -> b
    void a(com.baidu.lbsapi.auth.e,java.lang.String,java.lang.String) -> a
com.baidu.lbsapi.auth.f -> com.baidu.lbsapi.auth.f:
    com.baidu.lbsapi.auth.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.auth.g -> com.baidu.lbsapi.auth.g:
    int a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Hashtable e -> e
    com.baidu.lbsapi.auth.e f -> f
    void run() -> run
com.baidu.lbsapi.auth.h -> com.baidu.lbsapi.auth.h:
    java.lang.String a -> a
    com.baidu.lbsapi.auth.e b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.i -> com.baidu.lbsapi.auth.i:
    void a(int,java.lang.String) -> a
com.baidu.lbsapi.auth.j -> com.baidu.lbsapi.auth.j:
    android.os.Handler a -> a
    java.lang.Object b -> b
    boolean c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.location.BDErrorReport -> com.baidu.location.BDErrorReport:
    java.lang.String a -> a
    void onReportResult(boolean) -> onReportResult
    int setErrorInfo(boolean,double,double,boolean,java.lang.String,double,double,java.lang.String,java.lang.String) -> setErrorInfo
    android.os.Bundle getErrorInfo() -> getErrorInfo
com.baidu.location.BDGeofence -> com.baidu.location.BDGeofence:
    int GEOFENCE_TRANSITION_ENTER -> GEOFENCE_TRANSITION_ENTER
    java.lang.String COORD_TYPE_BD09 -> COORD_TYPE_BD09
    java.lang.String COORD_TYPE_BD09LL -> COORD_TYPE_BD09LL
    java.lang.String COORD_TYPE_GCJ -> COORD_TYPE_GCJ
    int RADIUS_TYPE_SMALL -> RADIUS_TYPE_SMALL
    java.lang.String getGeofenceId() -> getGeofenceId
com.baidu.location.BDGeofence$Builder -> com.baidu.location.BDGeofence$Builder:
    java.lang.String do -> do
    double for -> for
    double try -> try
    int a -> a
    boolean new -> new
    long if -> if
    java.lang.String int -> int
    com.baidu.location.BDGeofence$Builder setExpirationDruation(long) -> setExpirationDruation
    com.baidu.location.BDGeofence$Builder setCircularRegion(double,double,int) -> setCircularRegion
    com.baidu.location.BDGeofence$Builder setGeofenceId(java.lang.String) -> setGeofenceId
    com.baidu.location.BDGeofence$Builder setCoordType(java.lang.String) -> setCoordType
    com.baidu.location.BDGeofence build() -> build
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int OPERATORS_TYPE_UNKONW -> OPERATORS_TYPE_UNKONW
    int OPERATORS_TYPE_MOBILE -> OPERATORS_TYPE_MOBILE
    int OPERATORS_TYPE_UNICOM -> OPERATORS_TYPE_UNICOM
    int OPERATORS_TYPE_TELECOMU -> OPERATORS_TYPE_TELECOMU
    int gU -> gU
    java.lang.String gY -> gY
    double gH -> gH
    double gV -> gV
    boolean gJ -> gJ
    double gN -> gN
    boolean gK -> gK
    float gX -> gX
    boolean gQ -> gQ
    float gS -> gS
    boolean gW -> gW
    int gG -> gG
    float gM -> gM
    java.lang.String gZ -> gZ
    boolean gT -> gT
    java.lang.String gF -> gF
    boolean gO -> gO
    com.baidu.location.BDLocation$a gP -> gP
    java.lang.String gI -> gI
    java.lang.String gR -> gR
    int g0 -> g0
    java.lang.String gL -> gL
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String bm() -> bm
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    com.baidu.location.BDLocation p(java.lang.String) -> p
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    boolean hasSateNumber() -> hasSateNumber
    boolean hasAddr() -> hasAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getFloor() -> getFloor
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    int getOperators() -> getOperators
    void byte(int) -> byte
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String bn() -> bn
    java.lang.String getAdUrl(java.lang.String) -> getAdUrl
    java.lang.String bo() -> bo
    void internalSet(int,java.lang.String) -> internalSet
com.baidu.location.BDLocation$1 -> com.baidu.location.BDLocation$1:
    com.baidu.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.BDLocation$a -> com.baidu.location.BDLocation$a:
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String try -> try
    com.baidu.location.BDLocation a -> a
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.BDLocationStatusCodes -> com.baidu.location.BDLocationStatusCodes:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int GEOFENCE_NOT_AVAIABLE -> GEOFENCE_NOT_AVAIABLE
    int GEOFENCE_TOO_MANY_GEOFENCES -> GEOFENCE_TOO_MANY_GEOFENCES
    int GEOFENCE_SERVICE_NO_ALIVIABLE -> GEOFENCE_SERVICE_NO_ALIVIABLE
    int getStatusCode(int) -> getStatusCode
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.z mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.CommonEncrypt -> com.baidu.location.CommonEncrypt:
    boolean a -> a
    byte[] encrypt(byte[]) -> encrypt
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.baidu.location.GeofenceClient -> com.baidu.location.GeofenceClient:
    int bj -> bj
    java.lang.String BUNDLE_FOR_GEOFENCE_ID -> BUNDLE_FOR_GEOFENCE_ID
    android.content.Context bf -> bf
    boolean bl -> bl
    android.os.Messenger bk -> bk
    com.baidu.location.GeofenceClient$a bm -> bm
    android.os.Messenger bi -> bi
    com.baidu.location.GeofenceClient$OnGeofenceTriggerListener bg -> bg
    long bn -> bn
    android.content.ServiceConnection bh -> bh
    void start() -> start
    void void() -> void
    void setInterval(long) -> setInterval
    long d() -> d
    boolean isStarted() -> isStarted
    void registerGeofenceTriggerListener(com.baidu.location.GeofenceClient$OnGeofenceTriggerListener) -> registerGeofenceTriggerListener
    void addBDGeofence(com.baidu.location.BDGeofence,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> addBDGeofence
    void removeBDGeofences(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> removeBDGeofences
    void for(java.lang.String) -> for
    void int(java.lang.String) -> int
    void startGeofenceScann() -> startGeofenceScann
    void stop() -> stop
    void long() -> long
    android.os.Messenger if(com.baidu.location.GeofenceClient,android.os.Messenger) -> if
    android.os.Messenger if(com.baidu.location.GeofenceClient) -> if
    boolean if(com.baidu.location.GeofenceClient,boolean) -> if
    void do(com.baidu.location.GeofenceClient,java.lang.String) -> do
    void do(com.baidu.location.GeofenceClient) -> do
    void if(com.baidu.location.GeofenceClient,java.lang.String) -> if
com.baidu.location.GeofenceClient$1 -> com.baidu.location.GeofenceClient$1:
    com.baidu.location.GeofenceClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener:
    void onAddBDGeofencesResult(int,java.lang.String) -> onAddBDGeofencesResult
com.baidu.location.GeofenceClient$OnGeofenceTriggerListener -> com.baidu.location.GeofenceClient$OnGeofenceTriggerListener:
    void onGeofenceTrigger(java.lang.String) -> onGeofenceTrigger
    void onGeofenceExit(java.lang.String) -> onGeofenceExit
com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener:
    void onRemoveBDGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveBDGeofencesByRequestIdsResult
com.baidu.location.GeofenceClient$a -> com.baidu.location.GeofenceClient$a:
    com.baidu.location.GeofenceClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.Jni -> com.baidu.location.Jni:
    int ff -> ff
    int fd -> fd
    int fe -> fe
    int fa -> fa
    int fb -> fb
    int e8 -> e8
    int e7 -> e7
    int e9 -> e9
    boolean fc -> fc
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String i(java.lang.String) -> i
    java.lang.String l(java.lang.String) -> l
    java.lang.String j(java.lang.String) -> j
    double[] if(double,double,java.lang.String) -> if
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String k(java.lang.String) -> k
com.baidu.location.LLSInterface -> com.baidu.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String jq -> jq
    int jt -> jt
    int jS -> jS
    int jB -> jB
    int j4 -> j4
    int jO -> jO
    int jR -> jR
    int jH -> jH
    int jC -> jC
    int jF -> jF
    int jo -> jo
    int j1 -> j1
    int jP -> jP
    int jx -> jx
    long jU -> jU
    java.lang.String j3 -> j3
    com.baidu.location.LocationClientOption jN -> jN
    boolean jT -> jT
    android.content.Context jK -> jK
    android.os.Messenger jL -> jL
    com.baidu.location.LocationClient$a jp -> jp
    android.os.Messenger jJ -> jJ
    java.util.ArrayList j5 -> j5
    com.baidu.location.BDLocation j0 -> j0
    boolean jE -> jE
    boolean jY -> jY
    boolean jG -> jG
    com.baidu.location.LocationClient$b ju -> ju
    boolean jn -> jn
    java.lang.Object jr -> jr
    long jM -> jM
    long jV -> jV
    com.baidu.location.z jw -> jw
    boolean jZ -> jZ
    com.baidu.location.BDLocationListener jD -> jD
    java.lang.String j2 -> j2
    java.lang.String jX -> jX
    boolean jA -> jA
    java.lang.Boolean jz -> jz
    java.lang.Boolean jv -> jv
    java.lang.Boolean jQ -> jQ
    boolean jI -> jI
    android.content.ServiceConnection jW -> jW
    long jy -> jy
    com.baidu.location.BDErrorReport js -> js
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void cB() -> cB
    int requestLocation() -> requestLocation
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void cy() -> cy
    void stop() -> stop
    void cz() -> cz
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void l(android.os.Message) -> l
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void q(android.os.Message) -> q
    void n(android.os.Message) -> n
    android.os.Bundle cx() -> cx
    android.os.Bundle cw() -> cw
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void s(android.os.Message) -> s
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void r(android.os.Message) -> r
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void m(android.os.Message) -> m
    void cA() -> cA
    void o(android.os.Message) -> o
    void if(android.os.Message,int) -> if
    void p(android.os.Message) -> p
    void char(int) -> char
    void setForBaiduMap(boolean) -> setForBaiduMap
    void setDebug(boolean) -> setDebug
    boolean notifyError() -> notifyError
    int reportErrorWithInfo(com.baidu.location.BDErrorReport) -> reportErrorWithInfo
    void cancleError() -> cancleError
    void goto(boolean) -> goto
    boolean else(int) -> else
    java.lang.String getAccessKey() -> getAccessKey
    android.os.Messenger if(com.baidu.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger char(com.baidu.location.LocationClient) -> char
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    android.os.Messenger new(com.baidu.location.LocationClient) -> new
    android.os.Bundle long(com.baidu.location.LocationClient) -> long
    com.baidu.location.LocationClientOption else(com.baidu.location.LocationClient) -> else
    java.lang.Boolean if(com.baidu.location.LocationClient) -> if
    java.lang.Boolean if(com.baidu.location.LocationClient,java.lang.Boolean) -> if
    com.baidu.location.LocationClient$a byte(com.baidu.location.LocationClient) -> byte
    java.lang.Object for(com.baidu.location.LocationClient) -> for
    boolean int(com.baidu.location.LocationClient,boolean) -> int
    java.util.ArrayList goto(com.baidu.location.LocationClient) -> goto
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void case(com.baidu.location.LocationClient,android.os.Message) -> case
    void byte(com.baidu.location.LocationClient,android.os.Message) -> byte
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void do(com.baidu.location.LocationClient) -> do
    void try(com.baidu.location.LocationClient) -> try
    void case(com.baidu.location.LocationClient) -> case
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
    void int(com.baidu.location.LocationClient) -> int
    boolean for(com.baidu.location.LocationClient,boolean) -> for
    void if(com.baidu.location.LocationClient,android.os.Message,int) -> if
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void do(com.baidu.location.LocationClient,boolean) -> do
com.baidu.location.LocationClient$1 -> com.baidu.location.LocationClient$1:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int MIN_SCAN_SPAN_NETWORK -> MIN_SCAN_SPAN_NETWORK
    int byte -> byte
    int void -> void
    int try -> try
    java.lang.String do -> do
    java.lang.String else -> else
    boolean for -> for
    int int -> int
    int d -> d
    java.lang.String if -> if
    int h -> h
    boolean goto -> goto
    boolean a -> a
    boolean new -> new
    boolean e -> e
    float c -> c
    int long -> long
    java.lang.String case -> case
    boolean b -> b
    boolean char -> char
    boolean g -> g
    com.baidu.location.LocationClientOption$LocationMode f -> f
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setIsNeedAddress(boolean) -> setIsNeedAddress
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    void setLocationMode(com.baidu.location.LocationClientOption$LocationMode) -> setLocationMode
    com.baidu.location.LocationClientOption$LocationMode getLocationMode() -> getLocationMode
    void setNeedDeviceDirect(boolean) -> setNeedDeviceDirect
    boolean a() -> a
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
com.baidu.location.LocationClientOption$1 -> com.baidu.location.LocationClientOption$1:
    int[] a -> a
com.baidu.location.LocationClientOption$LocationMode -> com.baidu.location.LocationClientOption$LocationMode:
    com.baidu.location.LocationClientOption$LocationMode Hight_Accuracy -> Hight_Accuracy
    com.baidu.location.LocationClientOption$LocationMode Battery_Saving -> Battery_Saving
    com.baidu.location.LocationClientOption$LocationMode Device_Sensors -> Device_Sensors
    com.baidu.location.LocationClientOption$LocationMode[] a -> a
    com.baidu.location.LocationClientOption$LocationMode[] values() -> values
    com.baidu.location.LocationClientOption$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.location.a -> com.baidu.location.a:
    java.lang.Boolean kX -> kX
    java.lang.Boolean kS -> kS
    char kT -> kT
    java.lang.String kU -> kU
    int kW -> kW
    java.lang.String kR -> kR
    java.text.SimpleDateFormat kY -> kY
    java.text.SimpleDateFormat kV -> kV
    void if(java.lang.String,java.lang.Object) -> if
    void int(java.lang.String,java.lang.Object) -> int
    void new(java.lang.String,java.lang.Object) -> new
    void do(java.lang.String,java.lang.Object) -> do
    void for(java.lang.String,java.lang.Object) -> for
    void case(java.lang.String,java.lang.String) -> case
    void goto(java.lang.String,java.lang.String) -> goto
    void byte(java.lang.String,java.lang.String) -> byte
    void char(java.lang.String,java.lang.String) -> char
    void else(java.lang.String,java.lang.String) -> else
    void if(java.lang.String,java.lang.String,char) -> if
    void int(java.lang.String,java.lang.String,java.lang.String) -> int
    void c0() -> c0
    java.util.Date c1() -> c1
com.baidu.location.a.a -> com.baidu.location.a.a:
    java.lang.String goto -> goto
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String char -> char
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String else -> else
    java.lang.String if -> if
    java.lang.String b -> b
    java.lang.String try -> try
    java.lang.String new -> new
    java.lang.String case -> case
    java.lang.String void -> void
    java.lang.String long -> long
    java.lang.String a -> a
com.baidu.location.a.b -> com.baidu.location.a.b:
    java.lang.String a -> a
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String for -> for
    java.lang.String int -> int
    java.lang.String do -> do
com.baidu.location.a0 -> com.baidu.location.a0:
    int iT -> iT
    int jb -> jb
    int iU -> iU
    int jd -> jd
    long i2 -> i2
    int iW -> iW
    java.lang.String ji -> ji
    java.lang.String ja -> ja
    java.lang.String jk -> jk
    java.lang.String i4 -> i4
    java.lang.String jh -> jh
    java.lang.String iR -> iR
    java.lang.String iZ -> iZ
    boolean iX -> iX
    java.util.List jl -> jl
    java.util.List iS -> iS
    android.os.PowerManager$WakeLock i9 -> i9
    android.os.HandlerThread je -> je
    com.baidu.location.a0$d i1 -> i1
    com.baidu.location.a0$c i8 -> i8
    boolean iY -> iY
    java.lang.String i0 -> i0
    java.lang.String i7 -> i7
    com.baidu.location.ar$b jm -> jm
    com.baidu.location.ar$b jj -> jj
    java.lang.String iV -> iV
    android.os.Messenger jg -> jg
    int jc -> jc
    java.util.Map i6 -> i6
    com.baidu.location.a0 jf -> jf
    android.os.Handler i5 -> i5
    boolean i3 -> i3
    com.baidu.location.a0 cq() -> cq
    void cv() -> cv
    void for(java.util.List) -> for
    void ct() -> ct
    void for(com.baidu.location.aq) -> for
    java.util.List else(boolean) -> else
    boolean cs() -> cs
    void byte(android.content.Context) -> byte
    void cu() -> cu
    void if(android.content.Context,android.os.Message) -> if
    void new(android.content.Context) -> new
    void try(android.content.Context) -> try
    void if(android.content.Context,int) -> if
    java.util.List for(java.lang.String,boolean) -> for
    java.util.List if(java.util.List,boolean) -> if
    java.util.Map cr() -> cr
    boolean do(com.baidu.location.a0,boolean) -> do
    java.lang.String do(com.baidu.location.a0,java.lang.String) -> do
    com.baidu.location.ar$b if(com.baidu.location.a0,com.baidu.location.ar$b) -> if
    boolean try(com.baidu.location.a0) -> try
    boolean if(com.baidu.location.a0,boolean) -> if
    java.util.Map goto(com.baidu.location.a0) -> goto
    android.os.Messenger char(com.baidu.location.a0) -> char
    java.util.List for(com.baidu.location.a0,boolean) -> for
    java.lang.String case(com.baidu.location.a0) -> case
    java.lang.String for(com.baidu.location.a0) -> for
    boolean else(com.baidu.location.a0) -> else
    boolean new(com.baidu.location.a0) -> new
    com.baidu.location.ar$b int(com.baidu.location.a0) -> int
    java.lang.String if(com.baidu.location.a0,java.lang.String) -> if
    java.util.List if(com.baidu.location.a0,java.util.List) -> if
    java.util.List do(com.baidu.location.a0,java.util.List) -> do
    void for(com.baidu.location.a0,java.util.List) -> for
    void do(com.baidu.location.a0) -> do
    void if(com.baidu.location.a0,android.content.Context) -> if
    com.baidu.location.a0$d if(com.baidu.location.a0) -> if
    android.os.Handler byte(com.baidu.location.a0) -> byte
com.baidu.location.a0$1 -> com.baidu.location.a0$1:
com.baidu.location.a0$a -> com.baidu.location.a0$a:
    java.lang.String dQ -> dQ
    java.lang.String dT -> dT
    java.lang.String dS -> dS
    java.lang.String dU -> dU
    java.lang.String dW -> dW
    com.baidu.location.aq dR -> dR
    java.lang.String dV -> dV
    com.baidu.location.a0 dP -> dP
    void T() -> T
    void do(boolean) -> do
    void aj() -> aj
    void ah() -> ah
    void ai() -> ai
com.baidu.location.a0$b -> com.baidu.location.a0$b:
    com.baidu.location.a0 eC -> eC
    void byte(android.os.Message) -> byte
    void at() -> at
com.baidu.location.a0$c -> com.baidu.location.a0$c:
    com.baidu.location.a0 a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.a0$d -> com.baidu.location.a0$d:
    com.baidu.location.a0 kQ -> kQ
    void run() -> run
com.baidu.location.aa -> com.baidu.location.aa:
    com.baidu.location.aa gu -> gu
    com.baidu.location.aa bg() -> bg
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void if(java.io.File,java.lang.String,java.lang.String) -> if
    void bh() -> bh
    java.lang.String if(java.lang.Throwable) -> if
    boolean new(java.lang.String,java.lang.String) -> new
com.baidu.location.ab -> com.baidu.location.ab:
    com.baidu.location.ab$a gD -> gD
    android.os.Messenger gz -> gz
    android.content.Context gy -> gy
    boolean gv -> gv
    android.os.Looper gB -> gB
    android.os.HandlerThread gA -> gA
    boolean gx -> gx
    long gC -> gC
    boolean gE -> gE
    long gw -> gw
    void onCreate(android.content.Context) -> onCreate
    void bl() -> bl
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void bk() -> bk
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler bj() -> bj
    long bi() -> bi
    void h(android.os.Message) -> h
    void e(android.os.Message) -> e
    void i(android.os.Message) -> i
    void d(android.os.Message) -> d
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void for(com.baidu.location.ab,android.os.Message) -> for
    void if(com.baidu.location.ab,android.os.Message) -> if
    void do(com.baidu.location.ab,android.os.Message) -> do
    void int(com.baidu.location.ab,android.os.Message) -> int
    void do(com.baidu.location.ab) -> do
    void if(com.baidu.location.ab) -> if
com.baidu.location.ab$a -> com.baidu.location.ab$a:
    com.baidu.location.ab a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ac -> com.baidu.location.ac:
    boolean R -> R
    boolean S -> S
com.baidu.location.ad -> com.baidu.location.ad:
    int kn -> kn
    int j8 -> j8
    android.hardware.SensorManager kk -> kk
    android.hardware.Sensor j7 -> j7
    android.hardware.Sensor kd -> kd
    android.os.Handler kf -> kf
    com.baidu.location.ad kg -> kg
    boolean ke -> ke
    boolean kc -> kc
    boolean ka -> ka
    boolean j9 -> j9
    java.lang.StringBuffer kl -> kl
    java.lang.StringBuffer kj -> kj
    java.lang.Runnable km -> km
    java.lang.Runnable j6 -> j6
    int ki -> ki
    int kb -> kb
    boolean kh -> kh
    com.baidu.location.ad cM() -> cM
    void goto(int) -> goto
    boolean long(int) -> long
    void if(java.io.RandomAccessFile,int) -> if
    void d(int) -> d
    boolean cQ() -> cQ
    boolean if(java.io.File) -> if
    java.lang.String void(int) -> void
    java.lang.String e(int) -> e
    java.lang.String cR() -> cR
    boolean if(java.io.File,int) -> if
    java.lang.String cN() -> cN
    java.lang.String cH() -> cH
    java.lang.String cG() -> cG
    void cO() -> cO
    void cK() -> cK
    void cJ() -> cJ
    void cP() -> cP
    void cF() -> cF
    void cL() -> cL
    void cE() -> cE
    void cI() -> cI
    void cC() -> cC
    void cD() -> cD
    void do(java.lang.StringBuffer) -> do
    void if(java.lang.StringBuffer) -> if
    void if(java.lang.StringBuffer,java.lang.StringBuffer,java.lang.String) -> if
    void if(java.lang.StringBuffer,java.io.File) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    java.lang.Runnable for(com.baidu.location.ad) -> for
    android.os.Handler if(com.baidu.location.ad) -> if
    java.lang.Runnable do(com.baidu.location.ad) -> do
com.baidu.location.ad$1 -> com.baidu.location.ad$1:
    com.baidu.location.ad a -> a
    void run() -> run
com.baidu.location.ad$2 -> com.baidu.location.ad$2:
    com.baidu.location.ad a -> a
    void run() -> run
com.baidu.location.ad$3 -> com.baidu.location.ad$3:
    com.baidu.location.ad a -> a
    void run() -> run
com.baidu.location.ad$a -> com.baidu.location.ad$a:
    boolean if -> if
    java.lang.StringBuffer do -> do
    com.baidu.location.ad a -> a
    void if() -> if
    void a() -> a
    void do() -> do
com.baidu.location.ad$b -> com.baidu.location.ad$b:
    com.baidu.location.ad a -> a
com.baidu.location.ae -> com.baidu.location.ae:
    com.baidu.location.ae g2 -> g2
    android.os.Handler g1 -> g1
    com.baidu.location.ae bp() -> bp
    void bt() -> bt
    void br() -> br
    boolean bs() -> bs
    boolean bq() -> bq
com.baidu.location.af -> com.baidu.location.af:
    float[] g4 -> g4
    float[] g8 -> g8
    float[] g7 -> g7
    android.hardware.SensorManager g6 -> g6
    com.baidu.location.af g9 -> g9
    float g5 -> g5
    boolean g3 -> g3
    com.baidu.location.af bw() -> bw
    void bx() -> bx
    void bv() -> bv
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void try(boolean) -> try
    boolean by() -> by
    float bu() -> bu
com.baidu.location.ag -> com.baidu.location.ag:
    com.baidu.location.ar$b ek -> ek
    com.baidu.location.t$a eh -> eh
    boolean ef -> ef
    boolean ej -> ej
    boolean ei -> ei
    boolean ed -> ed
    java.lang.String ee -> ee
    android.os.Handler eg -> eg
    void byte(android.os.Message) -> byte
    void at() -> at
    java.lang.String e(java.lang.String) -> e
com.baidu.location.ag$a -> com.baidu.location.ag$a:
    java.lang.String dy -> dy
    java.lang.String dx -> dx
    com.baidu.location.ag dw -> dw
    void T() -> T
    void do(boolean) -> do
    void d(java.lang.String) -> d
com.baidu.location.ag$b -> com.baidu.location.ag$b:
    com.baidu.location.ag a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ah -> com.baidu.location.ah:
    com.baidu.location.ah eo -> eo
    int eA -> eA
    int el -> el
    boolean ew -> ew
    com.baidu.location.as er -> er
    com.baidu.location.ag$a em -> em
    java.lang.String eB -> eB
    com.baidu.location.BDLocation ey -> ey
    com.baidu.location.BDLocation ez -> ez
    com.baidu.location.ar$b eu -> eu
    com.baidu.location.t$a et -> et
    boolean ex -> ex
    boolean en -> en
    boolean ev -> ev
    long eq -> eq
    long es -> es
    int ep -> ep
    android.os.Handler eg -> eg
    com.baidu.location.ah ay() -> ay
    void case(android.os.Message) -> case
    void aC() -> aC
    void ax() -> ax
    void else(android.os.Message) -> else
    void goto(android.os.Message) -> goto
    void char(android.os.Message) -> char
    void aB() -> aB
    boolean if(com.baidu.location.ar$b) -> if
    boolean au() -> au
    boolean aA() -> aA
    boolean if(com.baidu.location.t$a) -> if
    void aE() -> aE
    void aw() -> aw
    void byte(android.os.Message) -> byte
    void at() -> at
    void az() -> az
    void for(com.baidu.location.BDLocation) -> for
    void av() -> av
    void aD() -> aD
    boolean do(com.baidu.location.ah) -> do
    boolean if(com.baidu.location.ah,boolean) -> if
    void if(com.baidu.location.ah) -> if
com.baidu.location.ah$1 -> com.baidu.location.ah$1:
com.baidu.location.ah$a -> com.baidu.location.ah$a:
    com.baidu.location.ah a -> a
    void run() -> run
com.baidu.location.ai -> com.baidu.location.ai:
    com.baidu.location.ai hb -> hb
    android.os.Handler hc -> hc
    boolean ha -> ha
    boolean hd -> hd
    com.baidu.location.ai bA() -> bA
    void bz() -> bz
    void bC() -> bC
    void bB() -> bB
    void for(com.baidu.location.ai) -> for
    boolean if(com.baidu.location.ai,boolean) -> if
    boolean do(com.baidu.location.ai) -> do
    android.os.Handler if(com.baidu.location.ai) -> if
com.baidu.location.ai$1 -> com.baidu.location.ai$1:
    com.baidu.location.ai a -> a
    void run() -> run
com.baidu.location.ai$2 -> com.baidu.location.ai$2:
    com.baidu.location.ai a -> a
    void run() -> run
com.baidu.location.aj -> com.baidu.location.aj:
    android.hardware.SensorManager hC -> hC
    boolean hD -> hD
    int hr -> hr
    android.hardware.Sensor ht -> ht
    long hh -> hh
    int hw -> hw
    int hg -> hg
    float hA -> hA
    float hj -> hj
    float hz -> hz
    int hu -> hu
    float[] hi -> hi
    float[] hv -> hv
    int hx -> hx
    double[] hy -> hy
    int hB -> hB
    int he -> he
    java.util.Timer hq -> hq
    int hs -> hs
    double[] hm -> hm
    int ho -> ho
    double hl -> hl
    int hf -> hf
    long hp -> hp
    int hk -> hk
    android.hardware.SensorEventListener hn -> hn
    void bH() -> bH
    void bI() -> bI
    void bG() -> bG
    void do(double) -> do
    boolean if(double) -> if
    float[] if(float,float,float) -> if
    double if(double[]) -> if
    void case(int) -> case
    int bF() -> bF
    int bD() -> bD
    void bE() -> bE
    float[] if(com.baidu.location.aj,float[]) -> if
    float[] if(com.baidu.location.aj,float,float,float) -> if
    int do(com.baidu.location.aj) -> do
    int for(com.baidu.location.aj) -> for
    int if(com.baidu.location.aj,int) -> if
    void if(com.baidu.location.aj) -> if
com.baidu.location.aj$1 -> com.baidu.location.aj$1:
    com.baidu.location.aj a -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.location.aj$2 -> com.baidu.location.aj$2:
    com.baidu.location.aj a -> a
    void run() -> run
com.baidu.location.ak -> com.baidu.location.ak:
    com.baidu.location.ak goto -> goto
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String else -> else
    java.lang.String new -> new
    boolean a -> a
    java.lang.String case -> case
    java.lang.String do -> do
    com.baidu.location.ak$a try -> try
    long char -> char
    long for -> for
    long if -> if
    com.baidu.location.ak a() -> a
    void do() -> do
    void if() -> if
    void a(android.os.Message) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    java.lang.String a(com.baidu.location.ak) -> a
    java.lang.String if(com.baidu.location.ak,java.lang.String) -> if
    java.lang.String if(com.baidu.location.ak) -> if
    java.lang.String a(com.baidu.location.ak,java.lang.String) -> a
    long do(com.baidu.location.ak) -> do
    long for(com.baidu.location.ak) -> for
    long a(com.baidu.location.ak,long) -> a
com.baidu.location.ak$a -> com.baidu.location.ak$a:
    boolean dC -> dC
    java.lang.String dA -> dA
    android.os.Messenger dB -> dB
    com.baidu.location.ak dz -> dz
    void T() -> T
    void do(boolean) -> do
    void try(android.os.Message) -> try
com.baidu.location.al -> com.baidu.location.al:
com.baidu.location.am -> com.baidu.location.am:
    java.lang.String hG -> hG
    double hL -> hL
    int hK -> hK
    java.lang.String hJ -> hJ
    java.lang.String hH -> hH
    java.lang.String[] hF -> hF
    java.lang.String[] hI -> hI
    com.baidu.location.am hE -> hE
    com.baidu.location.am bQ() -> bQ
    void new(com.baidu.location.BDLocation) -> new
    com.baidu.location.am$a bN() -> bN
    void bO() -> bO
    double bP() -> bP
    double bK() -> bK
    double bJ() -> bJ
    long bL() -> bL
    boolean bM() -> bM
    int bR() -> bR
com.baidu.location.am$a -> com.baidu.location.am$a:
    double int -> int
    double try -> try
    double if -> if
    long new -> new
    boolean for -> for
    int do -> do
    com.baidu.location.am a -> a
com.baidu.location.an -> com.baidu.location.an:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void if(boolean,java.lang.Object) -> if
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void if(boolean) -> if
com.baidu.location.ao -> com.baidu.location.ao:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.ap -> com.baidu.location.ap:
    com.baidu.location.ap do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.aq -> com.baidu.location.aq:
    int d -> d
    long void -> void
    int int -> int
    int e -> e
    java.lang.String for -> for
    java.lang.String byte -> byte
    int else -> else
    int case -> case
    int i -> i
    java.lang.String do -> do
    double goto -> goto
    double try -> try
    int a -> a
    float b -> b
    long long -> long
    int c -> c
    java.lang.String new -> new
    boolean f -> f
    boolean char -> char
    boolean if -> if
    long h -> h
    int g -> g
    int try() -> try
    void a(int) -> a
    java.lang.String getGeofenceId() -> getGeofenceId
    double case() -> case
    double a() -> a
    float do() -> do
    void a(float) -> a
    long goto() -> goto
    java.lang.String int() -> int
    boolean byte() -> byte
    void do(boolean) -> do
    boolean for() -> for
    void if(boolean) -> if
    boolean if() -> if
    void a(boolean) -> a
    long else() -> else
    void a(long) -> a
    int char() -> char
    int new() -> new
    void if(java.lang.String) -> if
    void do(int) -> do
    void a(double,double) -> a
    void a(java.lang.String) -> a
    void if(long) -> if
    java.lang.String if(int) -> if
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.location.ar -> com.baidu.location.ar:
    int hN -> hN
    long hM -> hM
    long hS -> hS
    long hU -> hU
    com.baidu.location.ar hW -> hW
    android.net.wifi.WifiManager hV -> hV
    com.baidu.location.ar$a h0 -> h0
    com.baidu.location.ar$b hQ -> hQ
    long hT -> hT
    long hZ -> hZ
    boolean hY -> hY
    java.lang.Object hR -> hR
    java.lang.reflect.Method hX -> hX
    boolean hO -> hO
    long hP -> hP
    com.baidu.location.ar bW() -> bW
    void b2() -> b2
    void bT() -> bT
    boolean b3() -> b3
    boolean bX() -> bX
    boolean b5() -> b5
    boolean bU() -> bU
    java.lang.String b4() -> b4
    com.baidu.location.ar$b bS() -> bS
    com.baidu.location.ar$b b1() -> b1
    com.baidu.location.ar$b bY() -> bY
    void bV() -> bV
    boolean bZ() -> bZ
    boolean if(com.baidu.location.ar$b,com.baidu.location.ar$b,float) -> if
    double if(com.baidu.location.ar$b,com.baidu.location.ar$b) -> if
    java.lang.String b0() -> b0
    boolean q(java.lang.String) -> q
    long if(com.baidu.location.ar,long) -> if
    void if(com.baidu.location.ar) -> if
    boolean if(com.baidu.location.ar,java.lang.String) -> if
    long do(com.baidu.location.ar) -> do
com.baidu.location.ar$1 -> com.baidu.location.ar$1:
com.baidu.location.ar$a -> com.baidu.location.ar$a:
    com.baidu.location.ar a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.ar$b -> com.baidu.location.ar$b:
    java.util.List for -> for
    long if -> if
    long int -> int
    boolean do -> do
    boolean new -> new
    com.baidu.location.ar a -> a
    java.lang.String int() -> int
    int try() -> try
    java.lang.String char() -> char
    java.lang.String byte() -> byte
    java.lang.String a(int) -> a
    java.lang.String else() -> else
    void a() -> a
    java.lang.String if(int) -> if
    boolean if(com.baidu.location.ar$b) -> if
    boolean do(com.baidu.location.ar$b) -> do
    boolean a(com.baidu.location.ar$b) -> a
    int do() -> do
    boolean case() -> case
    boolean for() -> for
    boolean new() -> new
    boolean if() -> if
com.baidu.location.as -> com.baidu.location.as:
    boolean do(com.baidu.location.ar$b) -> do
    int try(com.baidu.location.BDLocation) -> try
    void b6() -> b6
com.baidu.location.at -> com.baidu.location.at:
    boolean kz -> kz
    java.lang.String ky -> ky
    boolean kG -> kG
    java.lang.String ku -> ku
    int kA -> kA
    int kC -> kC
    java.lang.String kE -> kE
    char kx -> kx
    java.lang.String kF -> kF
    boolean kB -> kB
    int kp -> kp
    double kw -> kw
    double ks -> ks
    java.util.List kq -> kq
    boolean kv -> kv
    int kD -> kD
    boolean kr -> kr
    java.lang.String kt -> kt
    int ko -> ko
    void cS() -> cS
    boolean t(java.lang.String) -> t
    boolean cV() -> cV
    int cX() -> cX
    java.lang.String cU() -> cU
    double cW() -> cW
    double cT() -> cT
com.baidu.location.au -> com.baidu.location.au:
    int h4 -> h4
    java.lang.String i -> i
    java.lang.String h2 -> h2
    java.lang.String h5 -> h5
    java.lang.String h7 -> h7
    java.lang.String h9 -> h9
    java.lang.String h6 -> h6
    java.lang.String ih -> ih
    int ie -> ie
    int id -> id
    int h3 -> h3
    int ic -> ic
    android.content.Context h1 -> h1
    com.baidu.location.au$a ig -> ig
    android.os.HandlerThread ib -> ib
    java.lang.Object h8 -> h8
    com.baidu.location.au ia -> ia
    com.baidu.location.au for(android.content.Context) -> for
    void if(com.baidu.location.aq,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void do(com.baidu.location.aq) -> do
    void if(com.baidu.location.aq) -> if
    void do(java.lang.String,boolean) -> do
    void if(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    long cc() -> cc
    void if(int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    void ca() -> ca
    void b7() -> b7
    void cb() -> cb
    int if(com.baidu.location.aq,java.lang.String) -> if
    int do(java.util.List) -> do
    void b9() -> b9
    void b8() -> b8
    void if(com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    void int(android.content.Context) -> int
    int do(android.content.Context) -> do
    void for(com.baidu.location.au) -> for
    android.content.Context if(com.baidu.location.au) -> if
    void if(com.baidu.location.au,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    com.baidu.location.au$a do(com.baidu.location.au) -> do
    void if(com.baidu.location.au,int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(com.baidu.location.au,int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    int if(com.baidu.location.au,com.baidu.location.aq,java.lang.String) -> if
    int if(com.baidu.location.au,java.util.List) -> if
com.baidu.location.au$1 -> com.baidu.location.au$1:
    com.baidu.location.aq if -> if
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.au$2 -> com.baidu.location.au$2:
    com.baidu.location.aq if -> if
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.au$3 -> com.baidu.location.au$3:
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.au$a -> com.baidu.location.au$a:
    int if -> if
    int do -> do
    int for -> for
    com.baidu.location.au a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.au$b -> com.baidu.location.au$b:
    java.lang.String dI -> dI
    java.lang.String dG -> dG
    java.lang.String dL -> dL
    java.lang.String dH -> dH
    java.lang.String dN -> dN
    java.lang.String dJ -> dJ
    java.lang.String dE -> dE
    int dF -> dF
    com.baidu.location.aq dO -> dO
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener dD -> dD
    int dM -> dM
    com.baidu.location.au dK -> dK
    void T() -> T
    void do(boolean) -> do
    void ag() -> ag
com.baidu.location.au$c -> com.baidu.location.au$c:
    com.baidu.location.aq do -> do
    java.lang.String if -> if
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener for -> for
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.au$d -> com.baidu.location.au$d:
    java.util.List if -> if
    com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener do -> do
    com.baidu.location.au a -> a
    void run() -> run
com.baidu.location.av -> com.baidu.location.av:
    void if() -> if
    void a() -> a
com.baidu.location.aw -> com.baidu.location.aw:
    boolean for -> for
    java.lang.String if -> if
    com.baidu.location.aw$a do -> do
    com.baidu.location.aw a -> a
    com.baidu.location.aw do() -> do
    void for() -> for
    void if() -> if
    java.lang.String a() -> a
    boolean int() -> int
    boolean a(com.baidu.location.aw,boolean) -> a
    java.lang.String a(com.baidu.location.aw,java.lang.String) -> a
    boolean a(com.baidu.location.aw) -> a
com.baidu.location.aw$a -> com.baidu.location.aw$a:
    com.baidu.location.aw a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.ax -> com.baidu.location.ax:
    java.lang.String i -> i
    java.lang.String I -> I
    int F -> F
    int byte -> byte
    int for -> for
    int k -> k
    int r -> r
    int O -> O
    int d -> d
    int L -> L
    int Q -> Q
    int else -> else
    int E -> E
    int goto -> goto
    int q -> q
    int K -> K
    int G -> G
    int o -> o
    int void -> void
    int do -> do
    int char -> char
    int p -> p
    int n -> n
    int h -> h
    int x -> x
    int e -> e
    int case -> case
    int C -> C
    int f -> f
    int D -> D
    int A -> A
    int B -> B
    int z -> z
    int m -> m
    int M -> M
    int u -> u
    int s -> s
    int N -> N
    int H -> H
    int w -> w
    int y -> y
    int v -> v
    int try -> try
    int l -> l
    int g -> g
    int int -> int
    int t -> t
    int long -> long
    int if -> if
    int b -> b
    int P -> P
    int j -> j
    int J -> J
    int new -> new
    int c -> c
com.baidu.location.ay -> com.baidu.location.ay:
    com.baidu.location.ay im -> im
    java.lang.String iG -> iG
    boolean iy -> iy
    boolean iE -> iE
    boolean in -> in
    java.lang.String io -> io
    int iC -> iC
    double iv -> iv
    double iu -> iu
    double iz -> iz
    double is -> is
    double ir -> ir
    long ip -> ip
    boolean iw -> iw
    boolean iA -> iA
    int iq -> iq
    int iF -> iF
    java.lang.String it -> it
    java.lang.String iD -> iD
    java.lang.String iB -> iB
    boolean ix -> ix
    com.baidu.location.ay cd() -> cd
    void j(android.os.Message) -> j
    void ci() -> ci
    void ch() -> ch
    void k(android.os.Message) -> k
    com.baidu.location.BDLocation case(boolean) -> case
    void for(com.baidu.location.ar$b) -> for
    void if(com.baidu.location.ar$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
    void cf() -> cf
    void if(java.lang.String,com.baidu.location.t$a,com.baidu.location.ar$b,com.baidu.location.BDLocation) -> if
    void r(java.lang.String) -> r
    void if(java.lang.String,com.baidu.location.t$a,android.database.sqlite.SQLiteDatabase) -> if
    void cg() -> cg
    java.lang.String byte(boolean) -> byte
    void ce() -> ce
    void do(com.baidu.location.ay) -> do
    boolean if(com.baidu.location.ay,boolean) -> if
    java.lang.String if(com.baidu.location.ay) -> if
    void if(com.baidu.location.ay,java.lang.String,com.baidu.location.t$a,android.database.sqlite.SQLiteDatabase) -> if
    void if(com.baidu.location.ay,com.baidu.location.ar$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
com.baidu.location.ay$1 -> com.baidu.location.ay$1:
    com.baidu.location.ay a -> a
    void run() -> run
com.baidu.location.ay$a -> com.baidu.location.ay$a:
    com.baidu.location.ay a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.ay$b -> com.baidu.location.ay$b:
    com.baidu.location.ay a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.az -> com.baidu.location.az:
    com.baidu.location.az iQ -> iQ
    java.lang.String iL -> iL
    java.lang.String iP -> iP
    java.lang.String iN -> iN
    android.hardware.SensorManager iJ -> iJ
    int iK -> iK
    int iI -> iI
    android.hardware.Sensor iO -> iO
    java.lang.String iH -> iH
    java.lang.String iM -> iM
    com.baidu.location.az cn() -> cn
    void cm() -> cm
    void cp() -> cp
    void try(java.lang.String,java.lang.String) -> try
    java.lang.String ck() -> ck
    java.lang.String co() -> co
    java.lang.String cl() -> cl
    java.lang.String cj() -> cj
    java.lang.String s(java.lang.String) -> s
    java.lang.String char(boolean) -> char
    java.lang.String if(boolean,java.lang.String) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.location.b -> com.baidu.location.b:
    boolean a -> a
com.baidu.location.b.a.a -> com.baidu.location.b.a.a:
    boolean a -> a
    java.lang.String if -> if
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
com.baidu.location.b.a.b -> com.baidu.location.b.a.b:
    java.lang.String do -> do
    boolean a -> a
    java.lang.String int -> int
    java.lang.String for -> for
    java.lang.String if -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String do(android.content.Context) -> do
    java.lang.String if(android.content.Context) -> if
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.location.b.a.b$a -> com.baidu.location.b.a.b$a:
    java.lang.String do -> do
    java.lang.String if -> if
    boolean a -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.location.b.a.b$a a(android.content.Context) -> a
com.baidu.location.b.a.c -> com.baidu.location.b.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.b.b.a -> com.baidu.location.b.b.a:
    java.lang.String if -> if
    java.lang.String a -> a
    byte[] if(java.lang.String,java.lang.String,byte[]) -> if
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.location.b.b.b -> com.baidu.location.b.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.c -> com.baidu.location.c:
    boolean a3 -> a3
    boolean am -> am
    boolean ah -> ah
    int al -> al
    java.lang.String aN -> aN
    java.lang.String Y -> Y
    java.lang.String a1 -> a1
    java.lang.String aY -> aY
    java.lang.String aE -> aE
    boolean aG -> aG
    boolean aA -> aA
    boolean aC -> aC
    java.lang.String aL -> aL
    java.lang.Process aP -> aP
    java.lang.String aw -> aw
    java.lang.String bc -> bc
    boolean a7 -> a7
    int aM -> aM
    double a9 -> a9
    double an -> an
    double aH -> aH
    double ac -> ac
    int ak -> ak
    byte[] aB -> aB
    boolean ar -> ar
    int ai -> ai
    float ae -> ae
    float aR -> aR
    float ag -> ag
    float aT -> aT
    int aI -> aI
    int W -> W
    int aJ -> aJ
    int X -> X
    int aa -> aa
    int ax -> ax
    int a4 -> a4
    float be -> be
    float bb -> bb
    float ap -> ap
    float a0 -> a0
    int aX -> aX
    float ab -> ab
    int at -> at
    float aU -> aU
    float bd -> bd
    float ba -> ba
    int a8 -> a8
    int a6 -> a6
    int aj -> aj
    boolean az -> az
    boolean aZ -> aZ
    int av -> av
    int as -> as
    int ay -> ay
    long aQ -> aQ
    long aK -> aK
    long ad -> ad
    long ao -> ao
    long aS -> aS
    long aD -> aD
    int a5 -> a5
    int aV -> aV
    int aW -> aW
    int aO -> aO
    float a2 -> a2
    float af -> af
    float Z -> Z
    int aq -> aq
    int aF -> aF
    int au -> au
    int do(java.lang.String,java.lang.String,java.lang.String) -> do
    float if(java.lang.String,java.lang.String,java.lang.String) -> if
    double for(java.lang.String,java.lang.String,java.lang.String) -> for
    java.lang.String if(java.lang.String,java.lang.String,java.lang.String,double) -> if
    java.lang.String new() -> new
    java.lang.String if() -> if
    java.lang.String if(com.baidu.location.t$a,com.baidu.location.ar$b,android.location.Location,java.lang.String,int) -> if
    java.lang.String if(com.baidu.location.t$a,com.baidu.location.ar$b,android.location.Location,java.lang.String) -> if
    void char() -> char
    void case() -> case
    void do(java.lang.String,java.lang.String) -> do
    void if(java.lang.String,java.lang.String) -> if
    void if(java.lang.String) -> if
    boolean if(com.baidu.location.BDLocation) -> if
    void do(java.lang.String) -> do
    java.lang.String for() -> for
    java.lang.String try() -> try
    java.lang.String int() -> int
    java.lang.String do() -> do
    java.lang.String byte() -> byte
    java.lang.String else() -> else
    java.lang.String goto() -> goto
com.baidu.location.d -> com.baidu.location.d:
    java.lang.String c5 -> c5
    java.lang.String c4 -> c4
    java.lang.String c3 -> c3
    android.os.Handler c2 -> c2
    com.baidu.location.d c1 -> c1
    com.baidu.location.d X() -> X
    void Z() -> Z
    android.os.Handler W() -> W
    void T() -> T
    void do(boolean) -> do
    void Y() -> Y
    boolean U() -> U
    void V() -> V
    boolean for(java.lang.String,java.lang.String) -> for
    void if(java.io.File,java.io.File) -> if
    void if(com.baidu.location.d) -> if
    boolean do(com.baidu.location.d) -> do
    void for(com.baidu.location.d) -> for
com.baidu.location.d$1 -> com.baidu.location.d$1:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.d$2 -> com.baidu.location.d$2:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.d$3 -> com.baidu.location.d$3:
    com.baidu.location.d a -> a
    void run() -> run
com.baidu.location.e -> com.baidu.location.e:
    java.lang.String int -> int
    int for -> for
    com.baidu.location.e if -> if
    int do -> do
    int a -> a
    com.baidu.location.e do() -> do
    void a(int,long) -> a
    long a(int) -> a
    long if() -> if
    void a(long) -> a
    long a() -> a
    void if(long) -> if
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.LLSInterface ii -> ii
    com.baidu.location.LLSInterface ik -> ik
    com.baidu.location.LLSInterface il -> il
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String ij -> ij
    android.content.Context mC -> mC
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.location.g -> com.baidu.location.g:
    boolean bs -> bs
    long bp -> bp
    long bo -> bo
    long bq -> bq
    com.baidu.location.g br -> br
    com.baidu.location.g e() -> e
    void h() -> h
    void try(java.lang.String) -> try
    long new(java.lang.String) -> new
com.baidu.location.h -> com.baidu.location.h:
    com.baidu.location.h a -> a
    com.baidu.location.h for() -> for
    void int() -> int
    void do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.i -> com.baidu.location.i:
    void a(android.content.Context,android.app.PendingIntent,int) -> a
    void a(android.content.Context,android.app.PendingIntent) -> a
com.baidu.location.j -> com.baidu.location.j:
    double kP -> kP
    double kM -> kM
    boolean kJ -> kJ
    long kO -> kO
    double kH -> kH
    double kI -> kI
    int kK -> kK
    int kN -> kN
    com.baidu.location.j kL -> kL
    com.baidu.location.j cZ() -> cZ
    void if(boolean,boolean,double,double) -> if
    void byte(com.baidu.location.BDLocation) -> byte
    java.lang.String cY() -> cY
com.baidu.location.k -> com.baidu.location.k:
    com.baidu.location.k bv -> bv
    java.util.ArrayList bu -> bu
    boolean bw -> bw
    boolean bt -> bt
    com.baidu.location.k p() -> p
    void n() -> n
    boolean k() -> k
    void new(android.os.Message) -> new
    void do(android.os.Message) -> do
    boolean int(android.os.Message) -> int
    java.lang.String if(android.os.Message) -> if
    void if(com.baidu.location.BDLocation,int) -> if
    void do(com.baidu.location.BDLocation) -> do
    void byte(java.lang.String) -> byte
    void if(com.baidu.location.BDLocation,android.os.Message) -> if
    void i() -> i
    java.lang.String o() -> o
    int for(android.os.Message) -> for
    com.baidu.location.k$a if(android.os.Messenger) -> if
    void if(com.baidu.location.k$a) -> if
    void j() -> j
    void l() -> l
    void m() -> m
com.baidu.location.k$a -> com.baidu.location.k$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.location.LocationClientOption do -> do
    int if -> if
    com.baidu.location.k a -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void if(com.baidu.location.BDLocation) -> if
    void a() -> a
    void if() -> if
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.k$a,int) -> a
com.baidu.location.l -> com.baidu.location.l:
    java.lang.String bG -> bG
    java.lang.String bZ -> bZ
    java.io.File bD -> bD
    java.io.File b7 -> b7
    int bK -> bK
    int bW -> bW
    int b5 -> b5
    long by -> by
    int b1 -> b1
    android.app.AlarmManager bI -> bI
    com.baidu.location.l$a b8 -> b8
    android.app.PendingIntent bJ -> bJ
    android.content.Context bL -> bL
    long bX -> bX
    long[] bC -> bC
    int bH -> bH
    com.baidu.location.t$a bR -> bR
    java.lang.String bM -> bM
    java.lang.String bN -> bN
    int b3 -> b3
    boolean bF -> bF
    boolean bP -> bP
    boolean b4 -> b4
    android.os.Handler bA -> bA
    int bT -> bT
    boolean bE -> bE
    long bS -> bS
    int b2 -> b2
    long bQ -> bQ
    long bO -> bO
    long b0 -> b0
    java.lang.String bz -> bz
    boolean bB -> bB
    com.baidu.location.l$c bx -> bx
    java.util.ArrayList bY -> bY
    java.util.ArrayList bV -> bV
    long b6 -> b6
    java.lang.String bU -> bU
    void u() -> u
    void v() -> v
    void if(boolean) -> if
    void t() -> t
    void q() -> q
    java.lang.String s() -> s
    boolean r() -> r
    boolean if(double,double) -> if
    android.os.Handler if(com.baidu.location.l) -> if
com.baidu.location.l$1 -> com.baidu.location.l$1:
    com.baidu.location.l a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.l$a -> com.baidu.location.l$a:
    com.baidu.location.l a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.l$b -> com.baidu.location.l$b:
    double do -> do
    double if -> if
    java.util.HashMap int -> int
    double for -> for
    com.baidu.location.l a -> a
    double a(com.baidu.location.l$b) -> a
    java.util.HashMap if() -> if
    double a() -> a
com.baidu.location.l$c -> com.baidu.location.l$c:
    boolean if -> if
    com.baidu.location.l a -> a
    void a(android.content.Context) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.m -> com.baidu.location.m:
    java.lang.String do -> do
    int if -> if
    com.baidu.location.m a -> a
    com.baidu.location.m a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.n -> com.baidu.location.n:
    float V -> V
    java.lang.String T -> T
    int U -> U
com.baidu.location.o -> com.baidu.location.o:
    java.util.ArrayList di -> di
    boolean de -> de
    long dg -> dg
    long dh -> dh
    int df -> df
    android.os.Handler dj -> dj
    int db -> db
    com.baidu.location.o dd -> dd
    com.baidu.location.o$a dc -> dc
    int da -> da
    com.baidu.location.o ac() -> ac
    void do(int) -> do
    void T() -> T
    void do(boolean) -> do
    boolean for(boolean) -> for
    void ad() -> ad
    boolean ab() -> ab
    void if(com.baidu.location.o) -> if
    android.os.Handler do(com.baidu.location.o) -> do
com.baidu.location.o$1 -> com.baidu.location.o$1:
    com.baidu.location.o a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.o$a -> com.baidu.location.o$a:
    java.lang.String c9 -> c9
    int c7 -> c7
    boolean c8 -> c8
    com.baidu.location.o c6 -> c6
    void T() -> T
    void do(boolean) -> do
    boolean aa() -> aa
com.baidu.location.p -> com.baidu.location.p:
    boolean do(com.baidu.location.ar$b) -> do
    int try(com.baidu.location.BDLocation) -> try
    void b6() -> b6
com.baidu.location.q -> com.baidu.location.q:
    java.util.ArrayList ct -> ct
    java.util.ArrayList ck -> ck
    java.util.ArrayList cz -> cz
    java.util.ArrayList cL -> cL
    java.util.ArrayList cv -> cv
    java.util.ArrayList cE -> cE
    java.lang.String cN -> cN
    java.lang.String cI -> cI
    java.lang.String cH -> cH
    java.lang.String cw -> cw
    java.lang.String cC -> cC
    int ca -> ca
    int cb -> cb
    int cG -> cG
    int cp -> cp
    int cr -> cr
    int cj -> cj
    java.io.File ci -> ci
    int cg -> cg
    int cK -> cK
    int cf -> cf
    int cu -> cu
    int cm -> cm
    int ce -> ce
    int cB -> cB
    int cx -> cx
    double cd -> cd
    double cA -> cA
    double cl -> cl
    double cc -> cc
    int co -> co
    int ch -> ch
    int cJ -> cJ
    android.location.Location cq -> cq
    android.location.Location cD -> cD
    android.location.Location b9 -> b9
    com.baidu.location.ar$b cs -> cs
    com.baidu.location.q$b cy -> cy
    com.baidu.location.q cM -> cM
    int cn -> cn
    long cF -> cF
    com.baidu.location.q x() -> x
    java.lang.String B() -> B
    void do(com.baidu.location.t$a,com.baidu.location.ar$b,android.location.Location,java.lang.String) -> do
    void if(double,double,double,double) -> if
    boolean if(android.location.Location,boolean) -> if
    boolean if(android.location.Location) -> if
    boolean if(android.location.Location,com.baidu.location.ar$b) -> if
    void z() -> z
    void A() -> A
    void E() -> E
    void goto(java.lang.String) -> goto
    void else(java.lang.String) -> else
    void void(java.lang.String) -> void
    int if(java.util.List,int) -> if
    boolean if(int,int,int,int,long) -> if
    void case(java.lang.String) -> case
    void char(java.lang.String) -> char
    void if(int,boolean) -> if
    boolean if(java.lang.String,java.util.List) -> if
    java.lang.String D() -> D
    void w() -> w
    java.lang.String if(int) -> if
    java.lang.String y() -> y
    void if(java.lang.String,int) -> if
    void if(java.lang.String,int,boolean) -> if
    void if(int,int) -> if
    void if(int,int,boolean) -> if
    void C() -> C
    void F() -> F
    void long(java.lang.String) -> long
    java.lang.String if(com.baidu.location.t$a,com.baidu.location.ar$b,android.location.Location,java.lang.String,java.lang.String) -> if
com.baidu.location.q$a -> com.baidu.location.q$a:
    java.lang.String dl -> dl
    com.baidu.location.q dk -> dk
    void T() -> T
    void do(boolean) -> do
    void ae() -> ae
com.baidu.location.q$b -> com.baidu.location.q$b:
    boolean dn -> dn
    int dr -> dr
    int dq -> dq
    java.util.ArrayList dp -> dp
    com.baidu.location.q dm -> dm
    void T() -> T
    void do(boolean) -> do
    void af() -> af
com.baidu.location.r -> com.baidu.location.r:
    com.baidu.location.r cP -> cP
    com.baidu.location.l cO -> cO
    android.os.Handler cQ -> cQ
    com.baidu.location.r H() -> H
    void K() -> K
    void G() -> G
    android.os.Handler I() -> I
    void J() -> J
    void if(com.baidu.location.r) -> if
com.baidu.location.r$a -> com.baidu.location.r$a:
    com.baidu.location.r a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.s -> com.baidu.location.s:
    boolean cV -> cV
    int cU -> cU
    java.lang.String cX -> cX
    int cZ -> cZ
    java.lang.String cR -> cR
    int c0 -> c0
    org.apache.http.HttpEntity cS -> cS
    java.util.List cT -> cT
    java.lang.String cW -> cW
    int cY -> cY
    void T() -> T
    void do(boolean) -> do
    void Q() -> Q
    void N() -> N
    void R() -> R
    void L() -> L
    int P() -> P
    int if(android.content.Context,android.net.NetworkInfo) -> if
    boolean if(android.content.Context) -> if
    void if(com.baidu.location.s) -> if
    int M() -> M
    java.lang.String O() -> O
    int S() -> S
    boolean if(com.baidu.location.s,boolean) -> if
com.baidu.location.s$1 -> com.baidu.location.s$1:
    com.baidu.location.s a -> a
    void run() -> run
com.baidu.location.s$2 -> com.baidu.location.s$2:
    com.baidu.location.s a -> a
    void run() -> run
com.baidu.location.s$3 -> com.baidu.location.s$3:
    com.baidu.location.s a -> a
    void run() -> run
com.baidu.location.t -> com.baidu.location.t:
    com.baidu.location.t d2 -> d2
    android.telephony.TelephonyManager d3 -> d3
    com.baidu.location.t$a dX -> dX
    java.util.List d1 -> d1
    java.lang.String d4 -> d4
    com.baidu.location.t$b d0 -> d0
    boolean ea -> ea
    java.lang.reflect.Method d8 -> d8
    java.lang.reflect.Method d5 -> d5
    java.lang.reflect.Method dZ -> dZ
    java.lang.Class ec -> ec
    long d9 -> d9
    int eb -> eb
    boolean d6 -> d6
    int d7 -> d7
    int dY -> dY
    com.baidu.location.t an() -> an
    void am() -> am
    void as() -> as
    int ap() -> ap
    java.lang.String ao() -> ao
    boolean al() -> al
    com.baidu.location.t$a ak() -> ak
    void if(android.telephony.CellLocation) -> if
    int aq() -> aq
    long ar() -> ar
    com.baidu.location.t$a for(com.baidu.location.t) -> for
    java.util.List do(com.baidu.location.t) -> do
    int new(com.baidu.location.t) -> new
    int if(com.baidu.location.t,int) -> if
    int if(com.baidu.location.t) -> if
    android.telephony.TelephonyManager int(com.baidu.location.t) -> int
    void if(com.baidu.location.t,android.telephony.CellLocation) -> if
com.baidu.location.t$a -> com.baidu.location.t$a:
    int for -> for
    int try -> try
    int do -> do
    int if -> if
    long byte -> byte
    int int -> int
    char new -> new
    com.baidu.location.t a -> a
    boolean a(com.baidu.location.t$a) -> a
    boolean do() -> do
    boolean for() -> for
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    java.lang.String if() -> if
    java.lang.String int() -> int
com.baidu.location.t$b -> com.baidu.location.t$b:
    com.baidu.location.t a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.u -> com.baidu.location.u:
    com.baidu.location.u eD -> eD
    int eE -> eE
    com.baidu.location.BDLocation eG -> eG
    long eF -> eF
    com.baidu.location.ag$a eH -> eH
    com.baidu.location.u aG() -> aG
    void long(android.os.Message) -> long
    void void(android.os.Message) -> void
    void aF() -> aF
    void byte(android.os.Message) -> byte
    void at() -> at
com.baidu.location.v -> com.baidu.location.v:
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.v$a -> com.baidu.location.v$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.w -> com.baidu.location.w:
    com.baidu.location.w e5 -> e5
    java.lang.String eV -> eV
    java.io.File eL -> eL
    int eI -> eI
    int eR -> eR
    int eZ -> eZ
    int e2 -> e2
    int eY -> eY
    int e0 -> e0
    int eK -> eK
    int eM -> eM
    java.lang.StringBuffer eJ -> eJ
    boolean eQ -> eQ
    int eW -> eW
    int e4 -> e4
    long eP -> eP
    long eO -> eO
    long e6 -> e6
    double eT -> eT
    double eU -> eU
    int eN -> eN
    int eS -> eS
    int eX -> eX
    java.lang.String e1 -> e1
    boolean e3 -> e3
    com.baidu.location.w aK() -> aK
    void aL() -> aL
    void aO() -> aO
    boolean do(android.location.Location) -> do
    boolean if(android.location.Location,int,int) -> if
    boolean aN() -> aN
    boolean h(java.lang.String) -> h
    java.lang.String for(int) -> for
    void aI() -> aI
    void aJ() -> aJ
    java.lang.String aM() -> aM
    boolean aH() -> aH
    boolean if(int,int,int) -> if
com.baidu.location.x -> com.baidu.location.x:
    int fH -> fH
    long fD -> fD
    int fM -> fM
    int fC -> fC
    int fs -> fs
    double fq -> fq
    com.baidu.location.x fN -> fN
    android.content.Context fz -> fz
    android.location.LocationManager fk -> fk
    android.location.Location fS -> fS
    com.baidu.location.x$b fL -> fL
    com.baidu.location.x$c fQ -> fQ
    android.location.GpsStatus fg -> fg
    com.baidu.location.x$a fn -> fn
    int fB -> fB
    long fw -> fw
    long ft -> ft
    boolean fl -> fl
    boolean fI -> fI
    java.lang.String fR -> fR
    boolean fP -> fP
    long fA -> fA
    long fU -> fU
    java.lang.String fE -> fE
    java.lang.String fY -> fY
    java.io.File fO -> fO
    android.os.Handler fi -> fi
    int fT -> fT
    int fj -> fj
    int fF -> fF
    int fo -> fo
    int fJ -> fJ
    int fV -> fV
    android.location.Location fm -> fm
    android.location.Location fv -> fv
    android.location.Location fG -> fG
    android.location.Location fy -> fy
    long fK -> fK
    long fZ -> fZ
    long fW -> fW
    long fx -> fx
    java.lang.StringBuilder fp -> fp
    java.lang.String fu -> fu
    int fX -> fX
    int fh -> fh
    java.util.HashMap fr -> fr
    com.baidu.location.x a4() -> a4
    void aU() -> aU
    void if(java.lang.String,android.location.Location) -> if
    void a2() -> a2
    void a3() -> a3
    void aW() -> aW
    java.lang.String aV() -> aV
    void int(boolean) -> int
    java.lang.String aY() -> aY
    java.lang.String case(android.location.Location) -> case
    java.lang.String aP() -> aP
    android.location.Location aS() -> aS
    boolean aT() -> aT
    boolean aR() -> aR
    boolean aQ() -> aQ
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void int(android.location.Location) -> int
    void for(android.location.Location) -> for
    void if(double,double,float) -> if
    void new(boolean) -> new
    java.lang.String byte(android.location.Location) -> byte
    java.lang.String new(android.location.Location) -> new
    void try(android.location.Location) -> try
    void a0() -> a0
    java.lang.String if(android.location.GpsSatellite,java.util.HashMap) -> if
    int if(java.util.HashMap) -> if
    java.lang.String aX() -> aX
    double[] if(java.util.List) -> if
    double[] do(double,double) -> do
    double[] for(double,double) -> for
    int if(com.baidu.location.at,int) -> if
    boolean a1() -> a1
    void do(com.baidu.location.x,android.location.Location) -> do
    com.baidu.location.x$a for(com.baidu.location.x) -> for
    void if(com.baidu.location.x,java.lang.String,android.location.Location) -> if
    boolean case(com.baidu.location.x) -> case
    long for(com.baidu.location.x,long) -> for
    android.os.Handler byte(com.baidu.location.x) -> byte
    long do(com.baidu.location.x,long) -> do
    void if(com.baidu.location.x,boolean) -> if
    void if(com.baidu.location.x,android.location.Location) -> if
    boolean do(com.baidu.location.x,boolean) -> do
    long if(com.baidu.location.x,long) -> if
    android.location.LocationManager if(com.baidu.location.x) -> if
    android.location.GpsStatus do(com.baidu.location.x) -> do
    android.location.GpsStatus if(com.baidu.location.x,android.location.GpsStatus) -> if
    java.lang.StringBuilder if(java.lang.StringBuilder) -> if
    int do(com.baidu.location.x,int) -> do
    int if(com.baidu.location.x,int) -> if
    java.util.HashMap do(com.baidu.location.x,java.util.HashMap) -> do
    int int(com.baidu.location.x) -> int
    java.util.HashMap new(com.baidu.location.x) -> new
    java.lang.String if(com.baidu.location.x,android.location.GpsSatellite,java.util.HashMap) -> if
    java.lang.StringBuilder aZ() -> aZ
    int int(int) -> int
    int if(com.baidu.location.x,java.util.HashMap) -> if
    long char(com.baidu.location.x) -> char
    int try(com.baidu.location.x) -> try
    int if(com.baidu.location.x,com.baidu.location.at,int) -> if
    java.lang.String m(java.lang.String) -> m
com.baidu.location.x$1 -> com.baidu.location.x$1:
    com.baidu.location.x a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.x$a -> com.baidu.location.x$a:
    long if -> if
    long a -> a
    int char -> char
    boolean try -> try
    boolean byte -> byte
    java.util.List case -> case
    java.lang.String for -> for
    java.lang.String new -> new
    java.lang.String do -> do
    com.baidu.location.x int -> int
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.x$b -> com.baidu.location.x$b:
    com.baidu.location.x a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.x$c -> com.baidu.location.x$c:
    long if -> if
    com.baidu.location.x a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.y -> com.baidu.location.y:
    com.baidu.location.y f9 -> f9
    com.baidu.location.y$a f3 -> f3
    long ga -> ga
    boolean f6 -> f6
    boolean f8 -> f8
    boolean gb -> gb
    boolean f0 -> f0
    boolean f1 -> f1
    boolean f5 -> f5
    int f7 -> f7
    java.lang.String f2 -> f2
    int gc -> gc
    int f4 -> f4
    int gd -> gd
    com.baidu.location.y a7() -> a7
    void a9() -> a9
    void ba() -> ba
    boolean o(java.lang.String) -> o
    void a5() -> a5
    void bb() -> bb
    void a8() -> a8
    void n(java.lang.String) -> n
    void if(org.apache.http.HttpEntity) -> if
    void do(org.apache.http.HttpEntity) -> do
    void try(int) -> try
    void a6() -> a6
    void bc() -> bc
    void new(int) -> new
    void if(com.baidu.location.y,org.apache.http.HttpEntity) -> if
    void do(com.baidu.location.y,org.apache.http.HttpEntity) -> do
com.baidu.location.y$a -> com.baidu.location.y$a:
    java.lang.String du -> du
    boolean dt -> dt
    boolean dv -> dv
    com.baidu.location.y ds -> ds
    void T() -> T
    void do(boolean) -> do
    void if(java.lang.String,boolean) -> if
com.baidu.location.z -> com.baidu.location.z:
    java.util.ArrayList gk -> gk
    float go -> go
    com.baidu.location.BDLocation gl -> gl
    long gr -> gr
    com.baidu.location.LocationClient gt -> gt
    android.content.Context gf -> gf
    int ge -> ge
    long gm -> gm
    boolean gq -> gq
    boolean gp -> gp
    android.app.PendingIntent gj -> gj
    android.app.AlarmManager gg -> gg
    com.baidu.location.z$b gn -> gn
    java.lang.String gi -> gi
    com.baidu.location.z$a gh -> gh
    boolean gs -> gs
    void be() -> be
    int do(com.baidu.location.BDNotifyListener) -> do
    void if(com.baidu.location.BDNotifyListener) -> if
    int for(com.baidu.location.BDNotifyListener) -> for
    boolean bf() -> bf
    void bd() -> bd
    void if(long) -> if
    void int(com.baidu.location.BDLocation) -> int
    void if(com.baidu.location.z,com.baidu.location.BDLocation) -> if
    java.util.ArrayList do(com.baidu.location.z) -> do
    com.baidu.location.LocationClient if(com.baidu.location.z) -> if
com.baidu.location.z$a -> com.baidu.location.z$a:
    com.baidu.location.z a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void a(com.baidu.location.BDLocation) -> a
com.baidu.location.z$b -> com.baidu.location.z$b:
    com.baidu.location.z a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.mapapi.SDKInitializer -> com.baidu.mapapi.SDKInitializer:
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR
    java.lang.String SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR -> SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR
    java.lang.String SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE -> SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE
    boolean a -> a
    void initialize(java.lang.String,android.content.Context) -> initialize
    void initialize(android.content.Context) -> initialize
com.baidu.mapapi.VersionInfo -> com.baidu.mapapi.VersionInfo:
    java.lang.String VERSION_INFO -> VERSION_INFO
    java.lang.String VERSION_DESC -> VERSION_DESC
    java.lang.String getApiVersion() -> getApiVersion
    java.lang.String getVersionDesc() -> getVersionDesc
com.baidu.mapapi.a -> com.baidu.mapapi.a:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    com.baidu.platform.comapi.a d -> d
    int e -> e
    com.baidu.mapapi.a f -> f
    com.baidu.mapapi.a a() -> a
    void a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    android.content.Context d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Message) -> a
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.b -> com.baidu.mapapi.b:
    com.baidu.mapapi.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.cloud.BaseCloudSearchInfo -> com.baidu.mapapi.cloud.BaseCloudSearchInfo:
    java.lang.String q -> q
    java.lang.String tags -> tags
    java.lang.String sortby -> sortby
    java.lang.String filter -> filter
    int pageIndex -> pageIndex
    int pageSize -> pageSize
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchInfo -> com.baidu.mapapi.cloud.BaseSearchInfo:
    java.lang.String a -> a
    java.lang.String ak -> ak
    int geoTableId -> geoTableId
    java.lang.String sn -> sn
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchResult -> com.baidu.mapapi.cloud.BaseSearchResult:
    int STATUS_CODE_SUCCEED -> STATUS_CODE_SUCCEED
    int STATUS_CODE_SERVER_ERROR -> STATUS_CODE_SERVER_ERROR
    int STATUS_CODE_PARAM_ERROR -> STATUS_CODE_PARAM_ERROR
    int STATUS_CODE_PERMISSION_ERROR -> STATUS_CODE_PERMISSION_ERROR
    int STATUS_CODE_QUOTA_ERROR -> STATUS_CODE_QUOTA_ERROR
    int STATUS_CODE_AK_ERROR -> STATUS_CODE_AK_ERROR
    int STATUS_CODE_SERVICE_DISABLED -> STATUS_CODE_SERVICE_DISABLED
    int STATUS_CODE_SECURITY_CODE_ERROR -> STATUS_CODE_SECURITY_CODE_ERROR
    int STATUS_CODE_PERMISSION_AND_QUOTA_ERROR -> STATUS_CODE_PERMISSION_AND_QUOTA_ERROR
    int status -> status
    int size -> size
    int total -> total
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.BoundSearchInfo -> com.baidu.mapapi.cloud.BoundSearchInfo:
    java.lang.String bound -> bound
    java.lang.String a() -> a
com.baidu.mapapi.cloud.CloudListener -> com.baidu.mapapi.cloud.CloudListener:
    void onGetSearchResult(com.baidu.mapapi.cloud.CloudSearchResult,int) -> onGetSearchResult
    void onGetDetailSearchResult(com.baidu.mapapi.cloud.DetailSearchResult,int) -> onGetDetailSearchResult
com.baidu.mapapi.cloud.CloudManager -> com.baidu.mapapi.cloud.CloudManager:
    java.lang.String a -> a
    android.os.Bundle b -> b
    com.baidu.mapapi.cloud.CloudManager c -> c
    com.baidu.platform.comjni.map.cloud.a d -> d
    android.os.Handler e -> e
    com.baidu.mapapi.cloud.CloudListener f -> f
    com.baidu.mapapi.cloud.CloudManager getInstance() -> getInstance
    void init(com.baidu.mapapi.cloud.CloudListener) -> init
    void destroy() -> destroy
    boolean localSearch(com.baidu.mapapi.cloud.LocalSearchInfo) -> localSearch
    boolean nearbySearch(com.baidu.mapapi.cloud.NearbySearchInfo) -> nearbySearch
    boolean boundSearch(com.baidu.mapapi.cloud.BoundSearchInfo) -> boundSearch
    boolean a(com.baidu.mapapi.cloud.BaseCloudSearchInfo) -> a
    boolean detailSearch(com.baidu.mapapi.cloud.DetailSearchInfo) -> detailSearch
    java.lang.String a(int) -> a
    com.baidu.platform.comjni.map.cloud.a a(com.baidu.mapapi.cloud.CloudManager) -> a
    com.baidu.mapapi.cloud.CloudListener b(com.baidu.mapapi.cloud.CloudManager) -> b
    java.lang.String a(com.baidu.mapapi.cloud.CloudManager,int) -> a
com.baidu.mapapi.cloud.CloudPoiInfo -> com.baidu.mapapi.cloud.CloudPoiInfo:
    int uid -> uid
    int geotableId -> geotableId
    java.lang.String title -> title
    java.lang.String address -> address
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String district -> district
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String tags -> tags
    int distance -> distance
    int weight -> weight
    java.util.Map extras -> extras
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.CloudSearchResult -> com.baidu.mapapi.cloud.CloudSearchResult:
    java.util.List poiList -> poiList
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.DetailSearchInfo -> com.baidu.mapapi.cloud.DetailSearchInfo:
    int uid -> uid
    java.lang.String a() -> a
com.baidu.mapapi.cloud.DetailSearchResult -> com.baidu.mapapi.cloud.DetailSearchResult:
    com.baidu.mapapi.cloud.CloudPoiInfo poiInfo -> poiInfo
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.LocalSearchInfo -> com.baidu.mapapi.cloud.LocalSearchInfo:
    java.lang.String region -> region
    java.lang.String a() -> a
com.baidu.mapapi.cloud.NearbySearchInfo -> com.baidu.mapapi.cloud.NearbySearchInfo:
    java.lang.String location -> location
    int radius -> radius
    java.lang.String a() -> a
com.baidu.mapapi.cloud.a -> com.baidu.mapapi.cloud.a:
    com.baidu.mapapi.cloud.CloudManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.map.Arc -> com.baidu.mapapi.map.Arc:
    java.lang.String f -> f
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.ArcOptions -> com.baidu.mapapi.map.ArcOptions:
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.LatLng g -> g
    com.baidu.mapapi.model.LatLng h -> h
    com.baidu.mapapi.model.LatLng i -> i
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    com.baidu.mapapi.map.ArcOptions color(int) -> color
    com.baidu.mapapi.map.ArcOptions points(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> points
    com.baidu.mapapi.map.ArcOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.ArcOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.ArcOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.ArcOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.BaiduMap -> com.baidu.mapapi.map.BaiduMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    java.lang.String a -> a
    com.baidu.mapapi.map.Projection b -> b
    com.baidu.mapapi.map.UiSettings c -> c
    com.baidu.platform.comapi.map.e d -> d
    java.util.List e -> e
    com.baidu.mapapi.map.Overlay$a f -> f
    com.baidu.platform.comapi.map.g g -> g
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener h -> h
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener i -> i
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback j -> j
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener k -> k
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener l -> l
    com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener m -> m
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener n -> n
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback o -> o
    com.baidu.mapapi.map.InfoWindow p -> p
    com.baidu.mapapi.map.Marker q -> q
    com.baidu.mapapi.map.MyLocationData r -> r
    com.baidu.mapapi.map.MyLocationConfigeration s -> s
    com.baidu.mapapi.map.Overlay addOverlay(com.baidu.mapapi.map.OverlayOptions) -> addOverlay
    void clear() -> clear
    void setMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> setMapStatus
    com.baidu.mapapi.map.MapStatus getMapStatus() -> getMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate,int) -> animateMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> animateMapStatus
    com.baidu.platform.comapi.map.u a(com.baidu.mapapi.map.MapStatusUpdate) -> a
    void setMapType(int) -> setMapType
    int getMapType() -> getMapType
    float getMaxZoomLevel() -> getMaxZoomLevel
    void setMaxAndMinZoomLevel(float,float) -> setMaxAndMinZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    com.baidu.mapapi.map.Projection getProjection() -> getProjection
    com.baidu.mapapi.map.UiSettings getUiSettings() -> getUiSettings
    void setBuildingsEnabled(boolean) -> setBuildingsEnabled
    boolean isBuildingsEnabled() -> isBuildingsEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationData(com.baidu.mapapi.map.MyLocationData) -> setMyLocationData
    com.baidu.mapapi.map.MyLocationData getLocationData() -> getLocationData
    void setMyLocationConfigeration(com.baidu.mapapi.map.MyLocationConfigeration) -> setMyLocationConfigeration
    com.baidu.mapapi.map.MyLocationConfigeration getLocationConfigeration() -> getLocationConfigeration
    void a(com.baidu.mapapi.map.MyLocationData,com.baidu.mapapi.map.MyLocationConfigeration) -> a
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isTrafficEnabled() -> isTrafficEnabled
    void snapshot(com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshot
    void showInfoWindow(com.baidu.mapapi.map.InfoWindow) -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    void setOnMapStatusChangeListener(com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener) -> setOnMapStatusChangeListener
    void setOnMapClickListener(com.baidu.mapapi.map.BaiduMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLoadedCallback(com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback) -> setOnMapLoadedCallback
    void setOnMapDoubleClickListener(com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener) -> setOnMapDoubleClickListener
    void setOnMapLongClickListener(com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMyLocationClickListener(com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener) -> setOnMyLocationClickListener
    java.util.List a(com.baidu.mapapi.map.BaiduMap) -> a
    com.baidu.platform.comapi.map.e b(com.baidu.mapapi.map.BaiduMap) -> b
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener c(com.baidu.mapapi.map.BaiduMap) -> c
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener d(com.baidu.mapapi.map.BaiduMap) -> d
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener e(com.baidu.mapapi.map.BaiduMap) -> e
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener f(com.baidu.mapapi.map.BaiduMap) -> f
    com.baidu.mapapi.map.Projection a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Projection) -> a
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback g(com.baidu.mapapi.map.BaiduMap) -> g
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback h(com.baidu.mapapi.map.BaiduMap) -> h
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener i(com.baidu.mapapi.map.BaiduMap) -> i
    com.baidu.mapapi.map.InfoWindow j(com.baidu.mapapi.map.BaiduMap) -> j
    com.baidu.mapapi.map.Marker k(com.baidu.mapapi.map.BaiduMap) -> k
    com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener l(com.baidu.mapapi.map.BaiduMap) -> l
com.baidu.mapapi.map.BaiduMap$1 -> com.baidu.mapapi.map.BaiduMap$1:
    int[] a -> a
com.baidu.mapapi.map.BaiduMap$OnMapClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapClickListener:
    void onMapClick(com.baidu.mapapi.model.LatLng) -> onMapClick
    boolean onMapPoiClick(com.baidu.mapapi.map.MapPoi) -> onMapPoiClick
com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener:
    void onMapDoubleClick(com.baidu.mapapi.model.LatLng) -> onMapDoubleClick
com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback -> com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback:
    void onMapLoaded() -> onMapLoaded
com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener:
    void onMapLongClick(com.baidu.mapapi.model.LatLng) -> onMapLongClick
com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener -> com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener:
    void onMapStatusChangeStart(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeStart
    void onMapStatusChange(com.baidu.mapapi.map.MapStatus) -> onMapStatusChange
    void onMapStatusChangeFinish(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeFinish
com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener:
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener -> com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener:
    boolean onMyLocationClick() -> onMyLocationClick
com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback -> com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback:
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
com.baidu.mapapi.map.BaiduMapOptions -> com.baidu.mapapi.map.BaiduMapOptions:
    com.baidu.mapapi.map.MapStatus a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.baidu.mapapi.map.BaiduMapOptions mapStatus(com.baidu.mapapi.map.MapStatus) -> mapStatus
    com.baidu.mapapi.map.BaiduMapOptions compassEnabled(boolean) -> compassEnabled
    com.baidu.mapapi.map.BaiduMapOptions mapType(int) -> mapType
    com.baidu.mapapi.map.BaiduMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions overlookingGesturesEnabled(boolean) -> overlookingGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scaleControlEnabled(boolean) -> scaleControlEnabled
    com.baidu.platform.comapi.map.t a() -> a
com.baidu.mapapi.map.BitmapDescriptor -> com.baidu.mapapi.map.BitmapDescriptor:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a() -> a
    android.os.Bundle b() -> b
    void recycle() -> recycle
com.baidu.mapapi.map.BitmapDescriptorFactory -> com.baidu.mapapi.map.BitmapDescriptorFactory:
    com.baidu.mapapi.map.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.baidu.mapapi.map.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
    com.baidu.mapapi.map.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.baidu.mapapi.map.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.baidu.mapapi.map.BitmapDescriptor fromResource(int) -> fromResource
    com.baidu.mapapi.map.BitmapDescriptor fromView(android.view.View) -> fromView
com.baidu.mapapi.map.Circle -> com.baidu.mapapi.map.Circle:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.Stroke d -> d
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setFillColor(int) -> setFillColor
    void setRadius(int) -> setRadius
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.CircleOptions -> com.baidu.mapapi.map.CircleOptions:
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.Stroke h -> h
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.CircleOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.CircleOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.CircleOptions radius(int) -> radius
    com.baidu.mapapi.map.CircleOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.CircleOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.CircleOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.CircleOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Dot -> com.baidu.mapapi.map.Dot:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setColor(int) -> setColor
    void setRadius(int) -> setRadius
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.DotOptions -> com.baidu.mapapi.map.DotOptions:
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.DotOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.DotOptions color(int) -> color
    com.baidu.mapapi.map.DotOptions radius(int) -> radius
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.DotOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.DotOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.DotOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.GroundOverlay -> com.baidu.mapapi.map.GroundOverlay:
    java.lang.String o -> o
    int a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    com.baidu.mapapi.model.LatLng c -> c
    int d -> d
    int e -> e
    float f -> f
    float g -> g
    com.baidu.mapapi.model.LatLngBounds h -> h
    float i -> i
    void setImage(com.baidu.mapapi.map.BitmapDescriptor) -> setImage
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setDimensions(int) -> setDimensions
    void setDimensions(int,int) -> setDimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.GroundOverlayOptions -> com.baidu.mapapi.map.GroundOverlayOptions:
    com.baidu.mapapi.map.BitmapDescriptor d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    float h -> h
    float i -> i
    com.baidu.mapapi.model.LatLngBounds j -> j
    float k -> k
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.GroundOverlayOptions image(com.baidu.mapapi.map.BitmapDescriptor) -> image
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    com.baidu.mapapi.map.GroundOverlayOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int) -> dimensions
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int,int) -> dimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.baidu.mapapi.map.GroundOverlayOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.GroundOverlayOptions positionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> positionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    com.baidu.mapapi.map.GroundOverlayOptions transparency(float) -> transparency
    float getTransparency() -> getTransparency
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.GroundOverlayOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.GroundOverlayOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.GroundOverlayOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.InfoWindow -> com.baidu.mapapi.map.InfoWindow:
    com.baidu.mapapi.map.BitmapDescriptor a -> a
    android.view.View b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener d -> d
com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener -> com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener:
    void onInfoWindowClick() -> onInfoWindowClick
com.baidu.mapapi.map.MapFragment -> com.baidu.mapapi.map.MapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.MapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.MapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.MapPoi -> com.baidu.mapapi.map.MapPoi:
    java.lang.String c -> c
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.map.MapStatus -> com.baidu.mapapi.map.MapStatus:
    float rotate -> rotate
    com.baidu.mapapi.model.LatLng target -> target
    float overlook -> overlook
    float zoom -> zoom
    android.graphics.Point targetScreen -> targetScreen
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.u) -> a
    com.baidu.platform.comapi.map.u a() -> a
    com.baidu.platform.comapi.map.u b(com.baidu.platform.comapi.map.u) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.MapStatus$Builder -> com.baidu.mapapi.map.MapStatus$Builder:
    float a -> a
    com.baidu.mapapi.model.LatLng b -> b
    float c -> c
    float d -> d
    android.graphics.Point e -> e
    com.baidu.mapapi.map.MapStatus$Builder rotate(float) -> rotate
    com.baidu.mapapi.map.MapStatus$Builder target(com.baidu.mapapi.model.LatLng) -> target
    com.baidu.mapapi.map.MapStatus$Builder overlook(float) -> overlook
    com.baidu.mapapi.map.MapStatus$Builder zoom(float) -> zoom
    com.baidu.mapapi.map.MapStatus$Builder targetScreen(android.graphics.Point) -> targetScreen
    com.baidu.mapapi.map.MapStatus build() -> build
com.baidu.mapapi.map.MapStatusUpdate -> com.baidu.mapapi.map.MapStatusUpdate:
    java.lang.String l -> l
    int a -> a
    com.baidu.mapapi.map.MapStatus b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLngBounds d -> d
    int e -> e
    int f -> f
    float g -> g
    int h -> h
    int i -> i
    float j -> j
    android.graphics.Point k -> k
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.e,com.baidu.mapapi.map.MapStatus) -> a
com.baidu.mapapi.map.MapStatusUpdateFactory -> com.baidu.mapapi.map.MapStatusUpdateFactory:
    com.baidu.mapapi.map.MapStatusUpdate newMapStatus(com.baidu.mapapi.map.MapStatus) -> newMapStatus
    com.baidu.mapapi.map.MapStatusUpdate newLatLng(com.baidu.mapapi.model.LatLng) -> newLatLng
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds,int,int) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngZoom(com.baidu.mapapi.model.LatLng,float) -> newLatLngZoom
    com.baidu.mapapi.map.MapStatusUpdate scrollBy(int,int) -> scrollBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomIn() -> zoomIn
    com.baidu.mapapi.map.MapStatusUpdate zoomOut() -> zoomOut
    com.baidu.mapapi.map.MapStatusUpdate zoomTo(float) -> zoomTo
com.baidu.mapapi.map.MapView -> com.baidu.mapapi.map.MapView:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.e b -> b
    com.baidu.mapapi.map.BaiduMap c -> c
    android.widget.ImageView d -> d
    android.graphics.Bitmap e -> e
    android.widget.ZoomControls f -> f
    android.widget.RelativeLayout g -> g
    android.widget.TextView h -> h
    android.widget.TextView i -> i
    android.widget.ImageView j -> j
    android.util.SparseArray k -> k
    float l -> l
    com.baidu.platform.comapi.map.g m -> m
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void b(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    com.baidu.platform.comapi.map.e a(com.baidu.mapapi.map.MapView) -> a
    float b(com.baidu.mapapi.map.MapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.MapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.MapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.MapView) -> e
    float a(com.baidu.mapapi.map.MapView,float) -> a
    void f(com.baidu.mapapi.map.MapView) -> f
com.baidu.mapapi.map.MapViewLayoutParams -> com.baidu.mapapi.map.MapViewLayoutParams:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.baidu.mapapi.model.LatLng a -> a
    android.graphics.Point b -> b
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode c -> c
    float d -> d
    float e -> e
com.baidu.mapapi.map.MapViewLayoutParams$Builder -> com.baidu.mapapi.map.MapViewLayoutParams$Builder:
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    android.graphics.Point d -> d
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.MapViewLayoutParams build() -> build
    com.baidu.mapapi.map.MapViewLayoutParams$Builder width(int) -> width
    com.baidu.mapapi.map.MapViewLayoutParams$Builder height(int) -> height
    com.baidu.mapapi.map.MapViewLayoutParams$Builder align(int,int) -> align
    com.baidu.mapapi.map.MapViewLayoutParams$Builder position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.MapViewLayoutParams$Builder point(android.graphics.Point) -> point
    com.baidu.mapapi.map.MapViewLayoutParams$Builder layoutMode(com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode) -> layoutMode
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode -> com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode:
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode mapMode -> mapMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode absoluteMode -> absoluteMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] $VALUES -> $VALUES
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] values() -> values
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.Marker -> com.baidu.mapapi.map.Marker:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    java.lang.String g -> g
    void setIcon(com.baidu.mapapi.map.BitmapDescriptor) -> setIcon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.MarkerOptions -> com.baidu.mapapi.map.MarkerOptions:
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.map.BitmapDescriptor e -> e
    float f -> f
    float g -> g
    boolean h -> h
    float i -> i
    java.lang.String j -> j
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.MarkerOptions icon(com.baidu.mapapi.map.BitmapDescriptor) -> icon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    com.baidu.mapapi.map.MarkerOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.MarkerOptions perspective(boolean) -> perspective
    boolean isPerspective() -> isPerspective
    com.baidu.mapapi.map.MarkerOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.MarkerOptions rotate(float) -> rotate
    float getRotate() -> getRotate
    com.baidu.mapapi.map.MarkerOptions title(java.lang.String) -> title
    java.lang.String getTitle() -> getTitle
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.MarkerOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.MarkerOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.MarkerOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.MyLocationConfigeration -> com.baidu.mapapi.map.MyLocationConfigeration:
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode locationMode -> locationMode
    boolean enableDirection -> enableDirection
    com.baidu.mapapi.map.BitmapDescriptor customMarker -> customMarker
com.baidu.mapapi.map.MyLocationConfigeration$LocationMode -> com.baidu.mapapi.map.MyLocationConfigeration$LocationMode:
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode NORMAL -> NORMAL
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode FOLLOWING -> FOLLOWING
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode COMPASS -> COMPASS
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode[] a -> a
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode[] values() -> values
    com.baidu.mapapi.map.MyLocationConfigeration$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationData -> com.baidu.mapapi.map.MyLocationData:
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
com.baidu.mapapi.map.MyLocationData$Builder -> com.baidu.mapapi.map.MyLocationData$Builder:
    double a -> a
    double b -> b
    float c -> c
    float d -> d
    float e -> e
    int f -> f
    com.baidu.mapapi.map.MyLocationData$Builder latitude(double) -> latitude
    com.baidu.mapapi.map.MyLocationData$Builder longitude(double) -> longitude
    com.baidu.mapapi.map.MyLocationData$Builder speed(float) -> speed
    com.baidu.mapapi.map.MyLocationData$Builder direction(float) -> direction
    com.baidu.mapapi.map.MyLocationData$Builder accuracy(float) -> accuracy
    com.baidu.mapapi.map.MyLocationData$Builder satellitesNum(int) -> satellitesNum
    com.baidu.mapapi.map.MyLocationData build() -> build
com.baidu.mapapi.map.Overlay -> com.baidu.mapapi.map.Overlay:
    java.lang.String j -> j
    com.baidu.platform.comapi.map.d k -> k
    int l -> l
    boolean m -> m
    android.os.Bundle n -> n
    com.baidu.mapapi.map.Overlay$a listener -> listener
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    android.os.Bundle getExtraInfo() -> getExtraInfo
    void setExtraInfo(android.os.Bundle) -> setExtraInfo
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
    void remove() -> remove
    void a(int,android.os.Bundle) -> a
    void a(java.util.List,android.os.Bundle) -> a
com.baidu.mapapi.map.Overlay$a -> com.baidu.mapapi.map.Overlay$a:
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.OverlayOptions -> com.baidu.mapapi.map.OverlayOptions:
    com.baidu.mapapi.map.Overlay a() -> a
com.baidu.mapapi.map.Polygon -> com.baidu.mapapi.map.Polygon:
    com.baidu.mapapi.map.Stroke a -> a
    int b -> b
    java.util.List c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setFillColor(int) -> setFillColor
    void setPoints(java.util.List) -> setPoints
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolygonOptions -> com.baidu.mapapi.map.PolygonOptions:
    com.baidu.mapapi.map.Stroke d -> d
    int e -> e
    java.util.List f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.PolygonOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.PolygonOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolygonOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolygonOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolygonOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolygonOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Polyline -> com.baidu.mapapi.map.Polyline:
    int a -> a
    java.util.List b -> b
    int c -> c
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(java.util.List) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolylineOptions -> com.baidu.mapapi.map.PolylineOptions:
    int d -> d
    java.util.List e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    com.baidu.mapapi.map.PolylineOptions color(int) -> color
    com.baidu.mapapi.map.PolylineOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolylineOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolylineOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolylineOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolylineOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Projection -> com.baidu.mapapi.map.Projection:
    com.baidu.platform.comapi.map.e a -> a
    com.baidu.mapapi.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.baidu.mapapi.model.LatLng) -> toScreenLocation
com.baidu.mapapi.map.Stroke -> com.baidu.mapapi.map.Stroke:
    int strokeWidth -> strokeWidth
    int color -> color
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.SupportMapFragment -> com.baidu.mapapi.map.SupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.SupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.SupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Text -> com.baidu.mapapi.map.Text:
    java.lang.String o -> o
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    int d -> d
    int e -> e
    android.graphics.Typeface f -> f
    int g -> g
    int h -> h
    float i -> i
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    void setText(java.lang.String) -> setText
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    void setBgColor(int) -> setBgColor
    void setFontColor(int) -> setFontColor
    void setFontSize(int) -> setFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setAlign(int,int) -> setAlign
    void setRotate(float) -> setRotate
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TextOptions -> com.baidu.mapapi.map.TextOptions:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    int h -> h
    android.graphics.Typeface i -> i
    int j -> j
    int k -> k
    float l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    com.baidu.mapapi.map.TextOptions text(java.lang.String) -> text
    com.baidu.mapapi.map.TextOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.TextOptions bgColor(int) -> bgColor
    com.baidu.mapapi.map.TextOptions fontColor(int) -> fontColor
    com.baidu.mapapi.map.TextOptions fontSize(int) -> fontSize
    com.baidu.mapapi.map.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.baidu.mapapi.map.TextOptions align(int,int) -> align
    com.baidu.mapapi.map.TextOptions rotate(float) -> rotate
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.TextOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.TextOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.TextOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.UiSettings -> com.baidu.mapapi.map.UiSettings:
    com.baidu.platform.comapi.map.e a -> a
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isOverlookingGesturesEnabled() -> isOverlookingGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setOverlookingGesturesEnabled(boolean) -> setOverlookingGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
com.baidu.mapapi.map.a -> com.baidu.mapapi.map.a:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.b -> com.baidu.mapapi.map.b:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    void c(com.baidu.platform.comapi.map.u) -> c
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
com.baidu.mapapi.map.c -> com.baidu.mapapi.map.c:
    com.baidu.mapapi.map.MapView a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    void c(com.baidu.platform.comapi.map.u) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
com.baidu.mapapi.map.d -> com.baidu.mapapi.map.d:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.e -> com.baidu.mapapi.map.e:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.offline.MKOLSearchRecord -> com.baidu.mapapi.map.offline.MKOLSearchRecord:
    int cityID -> cityID
    int size -> size
    java.lang.String cityName -> cityName
    int cityType -> cityType
    java.util.ArrayList childCities -> childCities
com.baidu.mapapi.map.offline.MKOLUpdateElement -> com.baidu.mapapi.map.offline.MKOLUpdateElement:
    int UNDEFINED -> UNDEFINED
    int DOWNLOADING -> DOWNLOADING
    int WAITING -> WAITING
    int SUSPENDED -> SUSPENDED
    int FINISHED -> FINISHED
    int eOLDSMd5Error -> eOLDSMd5Error
    int eOLDSNetError -> eOLDSNetError
    int eOLDSIOError -> eOLDSIOError
    int eOLDSWifiError -> eOLDSWifiError
    int eOLDSMissData -> eOLDSMissData
    int cityID -> cityID
    java.lang.String cityName -> cityName
    int ratio -> ratio
    int status -> status
    com.baidu.mapapi.model.LatLng geoPt -> geoPt
    int size -> size
    int serversize -> serversize
    int level -> level
    boolean update -> update
com.baidu.mapapi.map.offline.MKOfflineMap -> com.baidu.mapapi.map.offline.MKOfflineMap:
    java.lang.String a -> a
    int TYPE_NEW_OFFLINE -> TYPE_NEW_OFFLINE
    int TYPE_DOWNLOAD_UPDATE -> TYPE_DOWNLOAD_UPDATE
    int TYPE_VER_UPDATE -> TYPE_VER_UPDATE
    com.baidu.platform.comapi.map.l b -> b
    com.baidu.mapapi.map.offline.MKOfflineMapListener c -> c
    boolean init(com.baidu.mapapi.map.offline.MKOfflineMapListener) -> init
    boolean start(int) -> start
    boolean pause(int) -> pause
    void destroy() -> destroy
    boolean remove(int) -> remove
    java.util.ArrayList getHotCityList() -> getHotCityList
    java.util.ArrayList getOfflineCityList() -> getOfflineCityList
    java.util.ArrayList searchCity(java.lang.String) -> searchCity
    java.util.ArrayList getAllUpdateInfo() -> getAllUpdateInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdateInfo(int) -> getUpdateInfo
    int importOfflineData() -> importOfflineData
    int importOfflineData(boolean) -> importOfflineData
    java.lang.String a() -> a
    com.baidu.mapapi.map.offline.MKOfflineMapListener a(com.baidu.mapapi.map.offline.MKOfflineMap) -> a
com.baidu.mapapi.map.offline.MKOfflineMapListener -> com.baidu.mapapi.map.offline.MKOfflineMapListener:
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.baidu.mapapi.map.offline.a -> com.baidu.mapapi.map.offline.a:
    com.baidu.mapapi.map.offline.MKOfflineMap a -> a
    void a(int,int) -> a
com.baidu.mapapi.model.LatLng -> com.baidu.mapapi.model.LatLng:
    java.lang.String a -> a
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds -> com.baidu.mapapi.model.LatLngBounds:
    com.baidu.mapapi.model.LatLng northeast -> northeast
    com.baidu.mapapi.model.LatLng southwest -> southwest
    boolean contains(com.baidu.mapapi.model.LatLng) -> contains
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds$Builder -> com.baidu.mapapi.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    boolean e -> e
    com.baidu.mapapi.model.LatLngBounds build() -> build
    com.baidu.mapapi.model.LatLngBounds$Builder include(com.baidu.mapapi.model.LatLng) -> include
com.baidu.mapapi.model.a -> com.baidu.mapapi.model.a:
    android.os.Bundle a -> a
    double[] b -> b
    double[] c -> c
    double[][] d -> d
    double[][] e -> e
    com.baidu.mapapi.model.a$a a(com.baidu.mapapi.model.a$a,double[]) -> a
    com.baidu.mapapi.model.LatLng a(com.baidu.platform.comapi.a.b) -> a
    com.baidu.platform.comapi.a.b a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.platform.comapi.a.d b(com.baidu.mapapi.model.LatLng) -> b
    int a(com.baidu.mapapi.model.LatLng,int) -> a
    com.baidu.mapapi.model.LatLng a(java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(java.lang.String) -> b
    java.util.List c(java.lang.String) -> c
    com.baidu.platform.comapi.a.d a(float,float,java.lang.String) -> a
    java.util.List d(java.lang.String) -> d
com.baidu.mapapi.model.a$a -> com.baidu.mapapi.model.a$a:
    double a -> a
    double b -> b
com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException -> com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException:
com.baidu.mapapi.navi.BaiduMapNavigation -> com.baidu.mapapi.navi.BaiduMapNavigation:
    int a(android.content.Context) -> a
    void openBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.content.Context) -> openBaiduMapNavi
    void openWebBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.content.Context) -> openWebBaiduMapNavi
    java.lang.String a(com.baidu.mapapi.navi.NaviPara) -> a
    void getLatestBaiduMapApp(android.content.Context) -> getLatestBaiduMapApp
    java.lang.String b(android.content.Context) -> b
com.baidu.mapapi.navi.IllegalNaviArgumentException -> com.baidu.mapapi.navi.IllegalNaviArgumentException:
com.baidu.mapapi.navi.NaviPara -> com.baidu.mapapi.navi.NaviPara:
    com.baidu.mapapi.model.LatLng startPoint -> startPoint
    java.lang.String startName -> startName
    com.baidu.mapapi.model.LatLng endPoint -> endPoint
    java.lang.String endName -> endName
com.baidu.mapapi.overlayutil.BusLineOverlay -> com.baidu.mapapi.overlayutil.BusLineOverlay:
    com.baidu.mapapi.search.busline.BusLineResult c -> c
    void setData(com.baidu.mapapi.search.busline.BusLineResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    boolean onBusStationClick(int) -> onBusStationClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.DrivingRouteOvelray -> com.baidu.mapapi.overlayutil.DrivingRouteOvelray:
    com.baidu.mapapi.search.route.DrivingRouteLine c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    void setData(com.baidu.mapapi.search.route.DrivingRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.OverlayManager -> com.baidu.mapapi.overlayutil.OverlayManager:
    com.baidu.mapapi.map.BaiduMap a -> a
    java.util.List c -> c
    java.util.List b -> b
    java.util.List getOverlayOptions() -> getOverlayOptions
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
com.baidu.mapapi.overlayutil.PoiOverlay -> com.baidu.mapapi.overlayutil.PoiOverlay:
    com.baidu.mapapi.search.poi.PoiResult c -> c
    void setData(com.baidu.mapapi.search.poi.PoiResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.search.poi.PoiResult getPoiResult() -> getPoiResult
    boolean onPoiClick(int) -> onPoiClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay -> com.baidu.mapapi.overlayutil.TransitRouteOverlay:
    com.baidu.mapapi.search.route.TransitRouteLine c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep) -> a
    void setData(com.baidu.mapapi.search.route.TransitRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay$1 -> com.baidu.mapapi.overlayutil.TransitRouteOverlay$1:
    int[] a -> a
com.baidu.mapapi.overlayutil.WalkingRouteOverlay -> com.baidu.mapapi.overlayutil.WalkingRouteOverlay:
    com.baidu.mapapi.search.route.WalkingRouteLine c -> c
    void setData(com.baidu.mapapi.search.route.WalkingRouteLine) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.search.a.a -> com.baidu.mapapi.search.a.a:
    java.lang.String a(java.lang.String) -> a
com.baidu.mapapi.search.busline.BusLineResult -> com.baidu.mapapi.search.busline.BusLineResult:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.util.Date d -> d
    java.util.Date e -> e
    java.lang.String f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.lang.String getBusCompany() -> getBusCompany
    java.lang.String getBusLineName() -> getBusLineName
    void a(java.lang.String) -> a
    boolean isMonthTicket() -> isMonthTicket
    void a(boolean) -> a
    java.util.Date getStartTime() -> getStartTime
    void a(java.util.Date) -> a
    java.util.Date getEndTime() -> getEndTime
    void b(java.util.Date) -> b
    java.util.List getStations() -> getStations
    void a(java.util.List) -> a
    java.util.List getSteps() -> getSteps
    void b(java.util.List) -> b
    java.lang.String getUid() -> getUid
    void b(java.lang.String) -> b
com.baidu.mapapi.search.busline.BusLineResult$BusStation -> com.baidu.mapapi.search.busline.BusLineResult$BusStation:
com.baidu.mapapi.search.busline.BusLineResult$BusStep -> com.baidu.mapapi.search.busline.BusLineResult$BusStep:
com.baidu.mapapi.search.busline.BusLineSearch -> com.baidu.mapapi.search.busline.BusLineSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.busline.BusLineSearch newInstance() -> newInstance
    boolean searchBusLine(com.baidu.mapapi.search.busline.BusLineSearchOption) -> searchBusLine
    void setOnGetBusLineSearchResultListener(com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener) -> setOnGetBusLineSearchResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.busline.BusLineSearch) -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b(com.baidu.mapapi.search.busline.BusLineSearch) -> b
com.baidu.mapapi.search.busline.BusLineSearch$1 -> com.baidu.mapapi.search.busline.BusLineSearch$1:
com.baidu.mapapi.search.busline.BusLineSearch$a -> com.baidu.mapapi.search.busline.BusLineSearch$a:
    com.baidu.mapapi.search.busline.BusLineSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.busline.BusLineSearchOption -> com.baidu.mapapi.search.busline.BusLineSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.busline.BusLineSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.busline.BusLineSearchOption uid(java.lang.String) -> uid
com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener -> com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener:
    void onGetBusLineResult(com.baidu.mapapi.search.busline.BusLineResult) -> onGetBusLineResult
com.baidu.mapapi.search.busline.a -> com.baidu.mapapi.search.busline.a:
    com.baidu.mapapi.search.busline.BusLineResult a(java.lang.String) -> a
com.baidu.mapapi.search.core.CityInfo -> com.baidu.mapapi.search.core.CityInfo:
    java.lang.String city -> city
    int num -> num
com.baidu.mapapi.search.core.PoiInfo -> com.baidu.mapapi.search.core.PoiInfo:
    java.lang.String name -> name
    java.lang.String uid -> uid
    java.lang.String address -> address
    java.lang.String city -> city
    java.lang.String phoneNum -> phoneNum
    java.lang.String postCode -> postCode
    com.baidu.mapapi.search.core.PoiInfo$POITYPE type -> type
    com.baidu.mapapi.model.LatLng location -> location
    boolean hasCaterDetails -> hasCaterDetails
    boolean isPano -> isPano
com.baidu.mapapi.search.core.PoiInfo$POITYPE -> com.baidu.mapapi.search.core.PoiInfo$POITYPE:
    com.baidu.mapapi.search.core.PoiInfo$POITYPE POINT -> POINT
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_STATION -> BUS_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_LINE -> BUS_LINE
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_STATION -> SUBWAY_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_LINE -> SUBWAY_LINE
    int a -> a
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] values() -> values
    com.baidu.mapapi.search.core.PoiInfo$POITYPE valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
    com.baidu.mapapi.search.core.PoiInfo$POITYPE fromInt(int) -> fromInt
com.baidu.mapapi.search.core.RouteLine -> com.baidu.mapapi.search.core.RouteLine:
    com.baidu.mapapi.search.core.RouteNode a -> a
    com.baidu.mapapi.search.core.RouteNode b -> b
    java.lang.String c -> c
    java.util.List d -> d
    int e -> e
    int f -> f
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    com.baidu.mapapi.search.core.RouteNode getStarting() -> getStarting
    void setStarting(com.baidu.mapapi.search.core.RouteNode) -> setStarting
    com.baidu.mapapi.search.core.RouteNode getTerminal() -> getTerminal
    void setTerminal(com.baidu.mapapi.search.core.RouteNode) -> setTerminal
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void setSteps(java.util.List) -> setSteps
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.core.RouteNode -> com.baidu.mapapi.search.core.RouteNode:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.core.RouteNode titleAndLocation(java.lang.String,com.baidu.mapapi.model.LatLng) -> titleAndLocation
    com.baidu.mapapi.search.core.RouteNode location(com.baidu.mapapi.model.LatLng) -> location
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void setLocation(com.baidu.mapapi.model.LatLng) -> setLocation
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
com.baidu.mapapi.search.core.RouteStep -> com.baidu.mapapi.search.core.RouteStep:
    int a -> a
    int b -> b
    java.util.List mWayPoints -> mWayPoints
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    java.util.List getWayPoints() -> getWayPoints
    void setWayPoints(java.util.List) -> setWayPoints
com.baidu.mapapi.search.core.SearchResult -> com.baidu.mapapi.search.core.SearchResult:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO error -> error
com.baidu.mapapi.search.core.SearchResult$ERRORNO -> com.baidu.mapapi.search.core.SearchResult$ERRORNO:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NO_ERROR -> NO_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO RESULT_NOT_FOUND -> RESULT_NOT_FOUND
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_KEYWORD -> AMBIGUOUS_KEYWORD
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_ROURE_ADDR -> AMBIGUOUS_ROURE_ADDR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS -> NOT_SUPPORT_BUS
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS_2CITY -> NOT_SUPPORT_BUS_2CITY
    com.baidu.mapapi.search.core.SearchResult$ERRORNO ST_EN_TOO_NEAR -> ST_EN_TOO_NEAR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] values() -> values
    com.baidu.mapapi.search.core.SearchResult$ERRORNO valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.core.TaxiInfo -> com.baidu.mapapi.search.core.TaxiInfo:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    int getPerKMPrice() -> getPerKMPrice
    void setPerKMPrice(int) -> setPerKMPrice
com.baidu.mapapi.search.core.VehicleInfo -> com.baidu.mapapi.search.core.VehicleInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    int getPassStationNum() -> getPassStationNum
    void setPassStationNum(int) -> setPassStationNum
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getZonePrice() -> getZonePrice
    void setZonePrice(int) -> setZonePrice
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
com.baidu.mapapi.search.geocode.GeoCodeOption -> com.baidu.mapapi.search.geocode.GeoCodeOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.GeoCodeOption city(java.lang.String) -> city
    com.baidu.mapapi.search.geocode.GeoCodeOption address(java.lang.String) -> address
com.baidu.mapapi.search.geocode.GeoCodeResult -> com.baidu.mapapi.search.geocode.GeoCodeResult:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
com.baidu.mapapi.search.geocode.GeoCoder -> com.baidu.mapapi.search.geocode.GeoCoder:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.geocode.GeoCoder newInstance() -> newInstance
    boolean geocode(com.baidu.mapapi.search.geocode.GeoCodeOption) -> geocode
    boolean reverseGeoCode(com.baidu.mapapi.search.geocode.ReverseGeoCodeOption) -> reverseGeoCode
    void setOnGetGeoCodeResultListener(com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener) -> setOnGetGeoCodeResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.geocode.GeoCoder) -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b(com.baidu.mapapi.search.geocode.GeoCoder) -> b
    int c(com.baidu.mapapi.search.geocode.GeoCoder) -> c
com.baidu.mapapi.search.geocode.GeoCoder$1 -> com.baidu.mapapi.search.geocode.GeoCoder$1:
com.baidu.mapapi.search.geocode.GeoCoder$a -> com.baidu.mapapi.search.geocode.GeoCoder$a:
    com.baidu.mapapi.search.geocode.GeoCoder a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener -> com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener:
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
com.baidu.mapapi.search.geocode.ReverseGeoCodeOption -> com.baidu.mapapi.search.geocode.ReverseGeoCodeOption:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.search.geocode.ReverseGeoCodeOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.util.List e -> e
    java.lang.String getBusinessCircle() -> getBusinessCircle
    void a(java.lang.String) -> a
    java.lang.String getAddress() -> getAddress
    void b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent getAddressDetail() -> getAddressDetail
    void a(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent) -> a
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.util.List getPoiList() -> getPoiList
    void a(java.util.List) -> a
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent:
    java.lang.String streetNumber -> streetNumber
    java.lang.String street -> street
    java.lang.String district -> district
    java.lang.String city -> city
    java.lang.String province -> province
com.baidu.mapapi.search.geocode.a -> com.baidu.mapapi.search.geocode.a:
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult a(java.lang.String) -> a
    com.baidu.mapapi.search.geocode.GeoCodeResult b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent a(org.json.JSONObject,java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
com.baidu.mapapi.search.poi.ImageUtil -> com.baidu.mapapi.search.poi.ImageUtil:
    android.content.Context a -> a
    java.util.HashMap b -> b
    boolean c -> c
    int d -> d
    boolean e -> e
    byte f -> f
    java.lang.String g -> g
    int h -> h
    void a(android.content.Context) -> a
    void a(int,int,java.lang.String,com.baidu.mapapi.search.poi.ImageUtil$ImageListener) -> a
    java.net.HttpURLConnection a(java.lang.String) -> a
    void a() -> a
    void a(android.net.NetworkInfo,boolean) -> a
com.baidu.mapapi.search.poi.ImageUtil$ImageListener -> com.baidu.mapapi.search.poi.ImageUtil$ImageListener:
    void onOk(int,int,java.lang.String,java.lang.Object) -> onOk
    void onError(int,int,java.lang.String,java.lang.Object) -> onError
com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener -> com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener:
    void onGetPoiResult(com.baidu.mapapi.search.poi.PoiResult) -> onGetPoiResult
    void onGetPoiDetailResult(com.baidu.mapapi.search.poi.PoiDetailResult) -> onGetPoiDetailResult
com.baidu.mapapi.search.poi.PlaceCaterActivity -> com.baidu.mapapi.search.poi.PlaceCaterActivity:
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    android.widget.ImageView c -> c
    boolean d -> d
    android.widget.LinearLayout e -> e
    android.widget.TextView f -> f
    android.widget.TextView g -> g
    android.widget.TextView h -> h
    android.widget.TextView i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    android.widget.TextView l -> l
    android.widget.TextView m -> m
    android.widget.LinearLayout n -> n
    android.util.DisplayMetrics o -> o
    com.baidu.mapapi.search.poi.g p -> p
    java.util.Hashtable q -> q
    android.os.Handler r -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void a(com.baidu.mapapi.search.poi.g) -> a
    void a(float) -> a
    void a(android.util.DisplayMetrics) -> a
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(android.widget.LinearLayout,java.util.List) -> a
    boolean isShow() -> isShow
    void onError(int,int,java.lang.String,java.lang.Object) -> onError
    void onOk(int,int,java.lang.String,java.lang.Object) -> onOk
com.baidu.mapapi.search.poi.PoiBoundSearchOption -> com.baidu.mapapi.search.poi.PoiBoundSearchOption:
    com.baidu.mapapi.model.LatLngBounds a -> a
    java.lang.String b -> b
    float c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.poi.PoiBoundSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiBoundSearchOption bound(com.baidu.mapapi.model.LatLngBounds) -> bound
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiCitySearchOption -> com.baidu.mapapi.search.poi.PoiCitySearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    float c -> c
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiCitySearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.poi.PoiCitySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiDetailResult -> com.baidu.mapapi.search.poi.PoiDetailResult:
com.baidu.mapapi.search.poi.PoiDetailSearchOption -> com.baidu.mapapi.search.poi.PoiDetailSearchOption:
    java.lang.String a -> a
    com.baidu.mapapi.search.poi.PoiDetailSearchOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.poi.PoiNearbySearchOption -> com.baidu.mapapi.search.poi.PoiNearbySearchOption:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiNearbySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiNearbySearchOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.poi.PoiNearbySearchOption radius(int) -> radius
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiResult -> com.baidu.mapapi.search.poi.PoiResult:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.List e -> e
    java.util.List f -> f
    int getCurrentPageNum() -> getCurrentPageNum
    void a(int) -> a
    int getTotalPageNum() -> getTotalPageNum
    void b(int) -> b
    int getCurrentPageCapacity() -> getCurrentPageCapacity
    void c(int) -> c
    int getTotalPoiNum() -> getTotalPoiNum
    void d(int) -> d
    java.util.List getAllPoi() -> getAllPoi
    void a(java.util.List) -> a
    java.util.List getSuggestCityList() -> getSuggestCityList
    void b(java.util.List) -> b
com.baidu.mapapi.search.poi.PoiSearch -> com.baidu.mapapi.search.poi.PoiSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiSearch newInstance() -> newInstance
    void setOnGetPoiSearchResultListener(com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener) -> setOnGetPoiSearchResultListener
    boolean searchInCity(com.baidu.mapapi.search.poi.PoiCitySearchOption) -> searchInCity
    boolean searchNearby(com.baidu.mapapi.search.poi.PoiNearbySearchOption) -> searchNearby
    boolean searchInBound(com.baidu.mapapi.search.poi.PoiBoundSearchOption) -> searchInBound
    boolean searchPoiDetail(com.baidu.mapapi.search.poi.PoiDetailSearchOption) -> searchPoiDetail
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.poi.PoiSearch) -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b(com.baidu.mapapi.search.poi.PoiSearch) -> b
    int c(com.baidu.mapapi.search.poi.PoiSearch) -> c
    int d(com.baidu.mapapi.search.poi.PoiSearch) -> d
com.baidu.mapapi.search.poi.PoiSearch$1 -> com.baidu.mapapi.search.poi.PoiSearch$1:
com.baidu.mapapi.search.poi.PoiSearch$a -> com.baidu.mapapi.search.poi.PoiSearch$a:
    com.baidu.mapapi.search.poi.PoiSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.poi.a -> com.baidu.mapapi.search.poi.a:
    java.lang.String a -> a
    com.baidu.mapapi.search.poi.ImageUtil$ImageListener b -> b
    int c -> c
    int d -> d
    void run() -> run
com.baidu.mapapi.search.poi.b -> com.baidu.mapapi.search.poi.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.mapapi.search.poi.c -> com.baidu.mapapi.search.poi.c:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.search.poi.d -> com.baidu.mapapi.search.poi.d:
    com.baidu.mapapi.search.poi.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.poi.e -> com.baidu.mapapi.search.poi.e:
    com.baidu.mapapi.search.poi.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.poi.f -> com.baidu.mapapi.search.poi.f:
    com.baidu.mapapi.search.poi.PlaceCaterActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.search.poi.g -> com.baidu.mapapi.search.poi.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.util.List o -> o
com.baidu.mapapi.search.poi.h -> com.baidu.mapapi.search.poi.h:
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String,int) -> a
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String) -> a
    boolean a(java.lang.String,com.baidu.mapapi.search.poi.g) -> a
com.baidu.mapapi.search.poi.i -> com.baidu.mapapi.search.poi.i:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap a() -> a
com.baidu.mapapi.search.route.DrivingRouteLine -> com.baidu.mapapi.search.route.DrivingRouteLine:
    boolean a -> a
    java.util.List b -> b
    boolean isSupportTraffic() -> isSupportTraffic
    void a(boolean) -> a
    java.util.List getWayPoints() -> getWayPoints
    void a(java.util.List) -> a
com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep -> com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
    int getNumTurns() -> getNumTurns
    void b(int) -> b
com.baidu.mapapi.search.route.DrivingRoutePlanOption -> com.baidu.mapapi.search.route.DrivingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy c -> c
    java.util.List d -> d
    com.baidu.mapapi.search.route.DrivingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.DrivingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.DrivingRoutePlanOption passBy(java.util.List) -> passBy
    com.baidu.mapapi.search.route.DrivingRoutePlanOption policy(com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy) -> policy
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy -> com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy:
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_AVOID_JAM -> ECAR_AVOID_JAM
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_TIME_FIRST -> ECAR_TIME_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_DIS_FIRST -> ECAR_DIS_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_FEE_FIRST -> ECAR_FEE_FIRST
    int a -> a
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] values() -> values
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.DrivingRouteResult -> com.baidu.mapapi.search.route.DrivingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.OnGetRoutePlanResultListener -> com.baidu.mapapi.search.route.OnGetRoutePlanResultListener:
    void onGetWalkingRouteResult(com.baidu.mapapi.search.route.WalkingRouteResult) -> onGetWalkingRouteResult
    void onGetTransitRouteResult(com.baidu.mapapi.search.route.TransitRouteResult) -> onGetTransitRouteResult
    void onGetDrivingRouteResult(com.baidu.mapapi.search.route.DrivingRouteResult) -> onGetDrivingRouteResult
com.baidu.mapapi.search.route.PlanNode -> com.baidu.mapapi.search.route.PlanNode:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.baidu.mapapi.search.route.PlanNode withLocation(com.baidu.mapapi.model.LatLng) -> withLocation
    com.baidu.mapapi.search.route.PlanNode withCityNameAndPlaceName(java.lang.String,java.lang.String) -> withCityNameAndPlaceName
com.baidu.mapapi.search.route.RoutePlanSearch -> com.baidu.mapapi.search.route.RoutePlanSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.route.RoutePlanSearch newInstance() -> newInstance
    void setOnGetRoutePlanResultListener(com.baidu.mapapi.search.route.OnGetRoutePlanResultListener) -> setOnGetRoutePlanResultListener
    boolean transitSearch(com.baidu.mapapi.search.route.TransitRoutePlanOption) -> transitSearch
    boolean walkingSearch(com.baidu.mapapi.search.route.WalkingRoutePlanOption) -> walkingSearch
    boolean drivingSearch(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> drivingSearch
    java.util.ArrayList a(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> a
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.route.RoutePlanSearch) -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b(com.baidu.mapapi.search.route.RoutePlanSearch) -> b
    int c(com.baidu.mapapi.search.route.RoutePlanSearch) -> c
com.baidu.mapapi.search.route.RoutePlanSearch$1 -> com.baidu.mapapi.search.route.RoutePlanSearch$1:
com.baidu.mapapi.search.route.RoutePlanSearch$a -> com.baidu.mapapi.search.route.RoutePlanSearch$a:
    com.baidu.mapapi.search.route.RoutePlanSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.route.SuggestAddrInfo -> com.baidu.mapapi.search.route.SuggestAddrInfo:
    java.util.List a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List getSuggestStartNode() -> getSuggestStartNode
    void a(java.util.List) -> a
    java.util.List getSuggestEndNode() -> getSuggestEndNode
    void b(java.util.List) -> b
    java.util.List getSuggestWpNode() -> getSuggestWpNode
    void c(java.util.List) -> c
    java.util.List getSuggestStartCity() -> getSuggestStartCity
    void d(java.util.List) -> d
    java.util.List getSuggestEndCity() -> getSuggestEndCity
    void e(java.util.List) -> e
    java.util.List getSuggestWpCity() -> getSuggestWpCity
    void f(java.util.List) -> f
com.baidu.mapapi.search.route.TransitRouteLine -> com.baidu.mapapi.search.route.TransitRouteLine:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxitInfo() -> getTaxitInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep:
    com.baidu.mapapi.search.core.VehicleInfo c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String getInstructions() -> getInstructions
    void a(com.baidu.mapapi.search.core.VehicleInfo) -> a
    void a(java.lang.String) -> a
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType getStepType() -> getStepType
    void a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType) -> a
    void b(java.lang.String) -> b
    java.util.List getWayPoints() -> getWayPoints
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    com.baidu.mapapi.search.core.VehicleInfo getVehicleInfo() -> getVehicleInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType:
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType BUSLINE -> BUSLINE
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType SUBWAY -> SUBWAY
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType WAKLING -> WAKLING
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] $VALUES -> $VALUES
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] values() -> values
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.route.TransitRoutePlanOption -> com.baidu.mapapi.search.route.TransitRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy d -> d
    com.baidu.mapapi.search.route.TransitRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.TransitRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.TransitRoutePlanOption city(java.lang.String) -> city
    com.baidu.mapapi.search.route.TransitRoutePlanOption policy(com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy) -> policy
com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy -> com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy:
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TIME_FIRST -> EBUS_TIME_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TRANSFER_FIRST -> EBUS_TRANSFER_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_WALK_FIRST -> EBUS_WALK_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_NO_SUBWAY -> EBUS_NO_SUBWAY
    int a -> a
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] b -> b
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] values() -> values
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.TransitRouteResult -> com.baidu.mapapi.search.route.TransitRouteResult:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    java.util.List b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.WalkingRouteLine -> com.baidu.mapapi.search.route.WalkingRouteLine:
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep -> com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
com.baidu.mapapi.search.route.WalkingRoutePlanOption -> com.baidu.mapapi.search.route.WalkingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.WalkingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.WalkingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
com.baidu.mapapi.search.route.WalkingRouteResult -> com.baidu.mapapi.search.route.WalkingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    java.util.List getRouteLines() -> getRouteLines
    void a(java.util.List) -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.a -> com.baidu.mapapi.search.route.a:
    com.baidu.mapapi.search.route.TransitRouteResult a(java.lang.String) -> a
    com.baidu.mapapi.search.route.DrivingRouteResult b(java.lang.String) -> b
    com.baidu.mapapi.search.route.WalkingRouteResult c(java.lang.String) -> c
    com.baidu.mapapi.search.core.TaxiInfo d(java.lang.String) -> d
    com.baidu.mapapi.search.core.VehicleInfo e(java.lang.String) -> e
    com.baidu.mapapi.search.core.RouteNode b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
    com.baidu.mapapi.search.route.SuggestAddrInfo f(java.lang.String) -> f
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
    java.util.List a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
com.baidu.mapapi.search.share.LocationShareURLOption -> com.baidu.mapapi.search.share.LocationShareURLOption:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.share.LocationShareURLOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.share.LocationShareURLOption name(java.lang.String) -> name
    com.baidu.mapapi.search.share.LocationShareURLOption snippet(java.lang.String) -> snippet
com.baidu.mapapi.search.share.OnGetShareUrlResultListener -> com.baidu.mapapi.search.share.OnGetShareUrlResultListener:
    void onGetPoiDetailShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetPoiDetailShareUrlResult
    void onGetLocationShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetLocationShareUrlResult
com.baidu.mapapi.search.share.PoiDetailShareURLOption -> com.baidu.mapapi.search.share.PoiDetailShareURLOption:
    java.lang.String a -> a
    com.baidu.mapapi.search.share.PoiDetailShareURLOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.share.ShareUrlResult -> com.baidu.mapapi.search.share.ShareUrlResult:
    java.lang.String a -> a
    int b -> b
    java.lang.String getUrl() -> getUrl
    void a(java.lang.String) -> a
    void a(int) -> a
com.baidu.mapapi.search.share.ShareUrlSearch -> com.baidu.mapapi.search.share.ShareUrlSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.share.ShareUrlSearch newInstance() -> newInstance
    boolean requestPoiDetailShareUrl(com.baidu.mapapi.search.share.PoiDetailShareURLOption) -> requestPoiDetailShareUrl
    boolean requestLocationShareUrl(com.baidu.mapapi.search.share.LocationShareURLOption) -> requestLocationShareUrl
    void setOnGetShareUrlResultListener(com.baidu.mapapi.search.share.OnGetShareUrlResultListener) -> setOnGetShareUrlResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.share.ShareUrlSearch) -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b(com.baidu.mapapi.search.share.ShareUrlSearch) -> b
    int c(com.baidu.mapapi.search.share.ShareUrlSearch) -> c
com.baidu.mapapi.search.share.ShareUrlSearch$1 -> com.baidu.mapapi.search.share.ShareUrlSearch$1:
com.baidu.mapapi.search.share.ShareUrlSearch$a -> com.baidu.mapapi.search.share.ShareUrlSearch$a:
    com.baidu.mapapi.search.share.ShareUrlSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.share.a -> com.baidu.mapapi.search.share.a:
    com.baidu.mapapi.search.share.ShareUrlResult a(java.lang.String) -> a
com.baidu.mapapi.search.sug.OnGetSuggestionResultListener -> com.baidu.mapapi.search.sug.OnGetSuggestionResultListener:
    void onGetSuggestionResult(com.baidu.mapapi.search.sug.SuggestionResult) -> onGetSuggestionResult
com.baidu.mapapi.search.sug.SuggestionResult -> com.baidu.mapapi.search.sug.SuggestionResult:
    java.util.ArrayList a -> a
    java.util.List getAllSuggestions() -> getAllSuggestions
    void a(java.util.ArrayList) -> a
com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo -> com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo:
    java.lang.String key -> key
    java.lang.String city -> city
    java.lang.String district -> district
com.baidu.mapapi.search.sug.SuggestionSearch -> com.baidu.mapapi.search.sug.SuggestionSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.sug.SuggestionSearch newInstance() -> newInstance
    boolean requestSuggestion(com.baidu.mapapi.search.sug.SuggestionSearchOption) -> requestSuggestion
    void setOnGetSuggestionResultListener(com.baidu.mapapi.search.sug.OnGetSuggestionResultListener) -> setOnGetSuggestionResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.sug.SuggestionSearch) -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b(com.baidu.mapapi.search.sug.SuggestionSearch) -> b
com.baidu.mapapi.search.sug.SuggestionSearch$1 -> com.baidu.mapapi.search.sug.SuggestionSearch$1:
com.baidu.mapapi.search.sug.SuggestionSearch$a -> com.baidu.mapapi.search.sug.SuggestionSearch$a:
    com.baidu.mapapi.search.sug.SuggestionSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.sug.SuggestionSearchOption -> com.baidu.mapapi.search.sug.SuggestionSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.search.sug.SuggestionSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.sug.SuggestionSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.sug.SuggestionSearchOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.sug.a -> com.baidu.mapapi.search.sug.a:
    com.baidu.mapapi.search.sug.SuggestionResult a(java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter -> com.baidu.mapapi.utils.CoordinateConverter:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.utils.CoordinateConverter$CoordType b -> b
    com.baidu.mapapi.utils.CoordinateConverter coord(com.baidu.mapapi.model.LatLng) -> coord
    com.baidu.mapapi.utils.CoordinateConverter from(com.baidu.mapapi.utils.CoordinateConverter$CoordType) -> from
    com.baidu.mapapi.model.LatLng convert() -> convert
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.LatLng b(com.baidu.mapapi.model.LatLng) -> b
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng,java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter$1 -> com.baidu.mapapi.utils.CoordinateConverter$1:
    int[] a -> a
com.baidu.mapapi.utils.CoordinateConverter$CoordType -> com.baidu.mapapi.utils.CoordinateConverter$CoordType:
    com.baidu.mapapi.utils.CoordinateConverter$CoordType GPS -> GPS
    com.baidu.mapapi.utils.CoordinateConverter$CoordType COMMON -> COMMON
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] $VALUES -> $VALUES
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] values() -> values
    com.baidu.mapapi.utils.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.utils.DistanceUtil -> com.baidu.mapapi.utils.DistanceUtil:
    double getDistance(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> getDistance
com.baidu.mapapi.utils.PermissionCheck -> com.baidu.mapapi.utils.PermissionCheck:
    java.lang.String a -> a
    android.content.Context b -> b
    java.util.Hashtable c -> c
    com.baidu.lbsapi.auth.e d -> d
    com.baidu.lbsapi.auth.i e -> e
    com.baidu.mapapi.utils.PermissionCheck$c f -> f
    void setPermissionCheckResultListener(com.baidu.mapapi.utils.PermissionCheck$c) -> setPermissionCheckResultListener
    void init(android.content.Context) -> init
    int permissionCheck() -> permissionCheck
    void destory() -> destory
    com.baidu.mapapi.utils.PermissionCheck$c a() -> a
com.baidu.mapapi.utils.PermissionCheck$1 -> com.baidu.mapapi.utils.PermissionCheck$1:
com.baidu.mapapi.utils.PermissionCheck$a -> com.baidu.mapapi.utils.PermissionCheck$a:
    void a(int,java.lang.String) -> a
com.baidu.mapapi.utils.PermissionCheck$b -> com.baidu.mapapi.utils.PermissionCheck$b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.mapapi.utils.PermissionCheck$c -> com.baidu.mapapi.utils.PermissionCheck$c:
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.utils.a -> com.baidu.mapapi.utils.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.mapapi.utils.a$a -> com.baidu.mapapi.utils.a$a:
    java.lang.String a(byte[]) -> a
com.baidu.mapapi.utils.b -> com.baidu.mapapi.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.utils.e g -> g
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
com.baidu.mapapi.utils.c -> com.baidu.mapapi.utils.c:
    com.baidu.mapapi.map.offline.MKOLSearchRecord a(com.baidu.platform.comapi.map.k) -> a
    com.baidu.mapapi.map.offline.MKOLUpdateElement a(com.baidu.platform.comapi.map.n) -> a
com.baidu.mapapi.utils.d -> com.baidu.mapapi.utils.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.utils.e -> com.baidu.mapapi.utils.e:
    com.baidu.mapapi.utils.e a -> a
    boolean b -> b
    boolean c -> c
    java.util.List d -> d
    com.baidu.mapapi.utils.d e -> e
    java.lang.String f -> f
    com.baidu.mapapi.utils.e a() -> a
    void a(android.content.Context) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    com.baidu.mapapi.utils.d b() -> b
    com.baidu.mapapi.utils.d b(android.content.Context) -> b
    boolean a(android.content.Context,com.baidu.mapapi.utils.d) -> a
    boolean a(java.lang.String) -> a
com.baidu.platform.comapi.a -> com.baidu.platform.comapi.a:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
com.baidu.platform.comapi.a.a -> com.baidu.platform.comapi.a.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    com.baidu.platform.comapi.a.d c -> c
    java.util.ArrayList d -> d
com.baidu.platform.comapi.a.b -> com.baidu.platform.comapi.a.b:
    int a -> a
    int b -> b
    int a() -> a
    int b() -> b
    void a(int) -> a
    void b(int) -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.a.c -> com.baidu.platform.comapi.a.c:
    com.baidu.platform.comapi.a.d a -> a
    com.baidu.platform.comapi.a.d b -> b
    void a(com.baidu.platform.comapi.a.d) -> a
    void b(com.baidu.platform.comapi.a.d) -> b
com.baidu.platform.comapi.a.d -> com.baidu.platform.comapi.a.d:
    int a -> a
    int b -> b
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.b.a -> com.baidu.platform.comapi.b.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.platform.comapi.b.b -> com.baidu.platform.comapi.b.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.platform.comapi.b.c -> com.baidu.platform.comapi.b.c:
    java.lang.String a -> a
    com.baidu.platform.comapi.b.b b -> b
    com.baidu.platform.comapi.b.d c -> c
    void a(com.baidu.platform.comapi.b.b) -> a
    void a() -> a
    void a(com.baidu.platform.comapi.b.d) -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.b.d -> com.baidu.platform.comapi.b.d:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.search.a b -> b
    int c -> c
    com.baidu.platform.comapi.b.c d -> d
    android.os.Handler e -> e
    int f -> f
    android.os.Bundle g -> g
    void a(com.baidu.platform.comapi.b.b) -> a
    void a() -> a
    void a(int) -> a
    boolean a(java.lang.String,java.lang.String,int,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String,int,int,int,com.baidu.platform.comapi.a.c,com.baidu.platform.comapi.a.c,java.util.Map) -> a
    boolean a(java.lang.String,int,int,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d,java.util.Map) -> a
    android.os.Bundle a(com.baidu.platform.comapi.b.a) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,com.baidu.platform.comapi.a.c,int,int,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,int,int,java.util.ArrayList,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,int,java.lang.String,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d) -> a
    boolean a(com.baidu.platform.comapi.a.d) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(com.baidu.platform.comapi.a.d,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String b(int) -> b
    android.os.Bundle b() -> b
    int a(com.baidu.platform.comapi.b.d) -> a
    com.baidu.platform.comapi.b.c b(com.baidu.platform.comapi.b.d) -> b
com.baidu.platform.comapi.b.e -> com.baidu.platform.comapi.b.e:
    com.baidu.platform.comapi.b.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.b.f -> com.baidu.platform.comapi.b.f:
    com.baidu.platform.comapi.a.d a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.baidu.platform.comapi.c.a -> com.baidu.platform.comapi.c.a:
    org.json.JSONObject b -> b
    com.baidu.platform.comjni.base.userdatacollect.a c -> c
    com.baidu.platform.comapi.c.a a -> a
    com.baidu.platform.comapi.c.a a() -> a
    boolean e() -> e
    void a(java.lang.String,java.lang.String) -> a
    void b() -> b
    boolean c() -> c
    android.os.Bundle f() -> f
    void a(java.lang.String) -> a
    void d() -> d
com.baidu.platform.comapi.d.a -> com.baidu.platform.comapi.d.a:
    void a(java.lang.String,java.lang.String) -> a
com.baidu.platform.comapi.d.b -> com.baidu.platform.comapi.d.b:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    void a(android.content.Context) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean a(android.net.NetworkInfo) -> a
com.baidu.platform.comapi.d.c -> com.baidu.platform.comapi.d.c:
    java.lang.String G -> G
    com.baidu.platform.comjni.map.commonmemcache.a a -> a
    com.baidu.platform.comjni.base.networkdetect.a b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    android.content.Context C -> C
    int D -> D
    float E -> E
    boolean H -> H
    int I -> I
    int J -> J
    java.lang.String F -> F
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    java.lang.String a(android.content.Context) -> a
    byte[] b(android.content.Context) -> b
    java.lang.String j(android.content.Context) -> j
    java.lang.String a() -> a
    java.lang.String k(android.content.Context) -> k
    void l(android.content.Context) -> l
    void c(android.content.Context) -> c
    void b() -> b
    void d(android.content.Context) -> d
    android.os.Bundle c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a(java.lang.String) -> a
    java.lang.String g() -> g
    void h() -> h
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    int j() -> j
    java.lang.String k() -> k
    int l() -> l
    java.lang.String m() -> m
    int n() -> n
    int o() -> o
    int p() -> p
    java.lang.String q() -> q
    java.lang.String r() -> r
    java.lang.String s() -> s
    java.lang.String t() -> t
    java.lang.String u() -> u
com.baidu.platform.comapi.map.MapRenderer -> com.baidu.platform.comapi.map.MapRenderer:
    java.lang.String d -> d
    int e -> e
    com.baidu.platform.comapi.map.MapRenderer$a f -> f
    java.lang.ref.WeakReference g -> g
    int a -> a
    int b -> b
    int c -> c
    void nativeInit(int) -> nativeInit
    void nativeResize(int,int,int) -> nativeResize
    int nativeRender(int) -> nativeRender
    void a(int) -> a
    boolean a() -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.baidu.platform.comapi.map.MapRenderer$a -> com.baidu.platform.comapi.map.MapRenderer$a:
    void n() -> n
com.baidu.platform.comapi.map.a -> com.baidu.platform.comapi.map.a:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.baidu.platform.comapi.map.b -> com.baidu.platform.comapi.map.b:
com.baidu.platform.comapi.map.c -> com.baidu.platform.comapi.map.c:
com.baidu.platform.comapi.map.d -> com.baidu.platform.comapi.map.d:
    com.baidu.platform.comapi.map.d a -> a
    com.baidu.platform.comapi.map.d b -> b
    com.baidu.platform.comapi.map.d c -> c
    com.baidu.platform.comapi.map.d d -> d
    com.baidu.platform.comapi.map.d e -> e
    com.baidu.platform.comapi.map.d f -> f
    com.baidu.platform.comapi.map.d g -> g
    com.baidu.platform.comapi.map.d h -> h
    com.baidu.platform.comapi.map.d i -> i
    com.baidu.platform.comapi.map.d j -> j
    com.baidu.platform.comapi.map.d[] k -> k
    com.baidu.platform.comapi.map.d[] values() -> values
    com.baidu.platform.comapi.map.d valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.e -> com.baidu.platform.comapi.map.e:
    java.lang.String c -> c
    float a -> a
    float b -> b
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    android.content.Context l -> l
    com.baidu.platform.comapi.map.MapRenderer m -> m
    java.util.List n -> n
    com.baidu.platform.comjni.map.basemap.a o -> o
    int p -> p
    android.os.Handler q -> q
    java.util.List r -> r
    com.baidu.platform.comapi.map.r s -> s
    com.baidu.platform.comapi.map.c t -> t
    com.baidu.platform.comapi.map.h u -> u
    com.baidu.platform.comapi.map.y v -> v
    com.baidu.platform.comapi.map.w w -> w
    boolean x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    com.baidu.platform.comapi.map.e$a C -> C
    android.view.VelocityTracker D -> D
    android.view.GestureDetector E -> E
    long F -> F
    long G -> G
    long H -> H
    long I -> I
    int J -> J
    float K -> K
    float L -> L
    boolean M -> M
    long N -> N
    long O -> O
    boolean P -> P
    boolean Q -> Q
    void o() -> o
    void p() -> p
    void q() -> q
    void a(com.baidu.platform.comapi.map.t) -> a
    void r() -> r
    void s() -> s
    void a() -> a
    void a(com.baidu.platform.comapi.map.a) -> a
    void t() -> t
    boolean b() -> b
    void a(boolean) -> a
    boolean c() -> c
    void b(boolean) -> b
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    void e(boolean) -> e
    boolean f() -> f
    void a(java.lang.String,android.os.Bundle) -> a
    boolean g() -> g
    void f(boolean) -> f
    void g(boolean) -> g
    boolean h() -> h
    void h(boolean) -> h
    boolean i() -> i
    void i(boolean) -> i
    boolean j() -> j
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void k() -> k
    void a(com.baidu.platform.comapi.map.g) -> a
    void a(com.baidu.platform.comapi.map.u) -> a
    void a(com.baidu.platform.comapi.map.u,int) -> a
    com.baidu.platform.comapi.map.u l() -> l
    void a(java.lang.String) -> a
    float a(int,int,int,int) -> a
    float a(int,int,int,int,int,int) -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
    void m() -> m
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    int a(int,int,int) -> a
    void n() -> n
    int a(android.os.Bundle,int,int) -> a
    boolean a(int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean a(android.view.MotionEvent) -> a
    void b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    boolean d(android.view.MotionEvent) -> d
    void u() -> u
    boolean b(int,int) -> b
    void v() -> v
    void w() -> w
    void x() -> x
    void y() -> y
    com.baidu.platform.comjni.map.basemap.a a(com.baidu.platform.comapi.map.e) -> a
    int b(com.baidu.platform.comapi.map.e) -> b
    java.util.List c(com.baidu.platform.comapi.map.e) -> c
    int d(com.baidu.platform.comapi.map.e) -> d
    int e(com.baidu.platform.comapi.map.e) -> e
    void f(com.baidu.platform.comapi.map.e) -> f
    void g(com.baidu.platform.comapi.map.e) -> g
    boolean h(com.baidu.platform.comapi.map.e) -> h
    boolean a(com.baidu.platform.comapi.map.e,boolean) -> a
    boolean i(com.baidu.platform.comapi.map.e) -> i
    boolean j(com.baidu.platform.comapi.map.e) -> j
com.baidu.platform.comapi.map.e$a -> com.baidu.platform.comapi.map.e$a:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    float g -> g
    double h -> h
com.baidu.platform.comapi.map.f -> com.baidu.platform.comapi.map.f:
    com.baidu.platform.comapi.map.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.g -> com.baidu.platform.comapi.map.g:
    void a() -> a
    void a(com.baidu.platform.comapi.map.u) -> a
    void b(com.baidu.platform.comapi.map.u) -> b
    void c(com.baidu.platform.comapi.map.u) -> c
    void a(com.baidu.platform.comapi.a.b) -> a
    void a(java.lang.String) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
com.baidu.platform.comapi.map.h -> com.baidu.platform.comapi.map.h:
com.baidu.platform.comapi.map.i -> com.baidu.platform.comapi.map.i:
com.baidu.platform.comapi.map.j -> com.baidu.platform.comapi.map.j:
com.baidu.platform.comapi.map.k -> com.baidu.platform.comapi.map.k:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
com.baidu.platform.comapi.map.l -> com.baidu.platform.comapi.map.l:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.basemap.a b -> b
    com.baidu.platform.comapi.map.l c -> c
    com.baidu.platform.comapi.map.q d -> d
    android.os.Handler e -> e
    com.baidu.platform.comapi.map.l a() -> a
    void g() -> g
    void h() -> h
    void b() -> b
    void a(com.baidu.platform.comapi.map.p) -> a
    void b(com.baidu.platform.comapi.map.p) -> b
    boolean a(int) -> a
    boolean b(int) -> b
    boolean c(int) -> c
    boolean d(int) -> d
    boolean e(int) -> e
    boolean a(boolean) -> a
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList a(java.lang.String) -> a
    com.baidu.platform.comapi.map.o f(int) -> f
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.map.l f() -> f
    com.baidu.platform.comapi.map.q a(com.baidu.platform.comapi.map.l) -> a
com.baidu.platform.comapi.map.m -> com.baidu.platform.comapi.map.m:
    com.baidu.platform.comapi.map.l a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.n -> com.baidu.platform.comapi.map.n:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.platform.comapi.a.d g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    int l -> l
com.baidu.platform.comapi.map.o -> com.baidu.platform.comapi.map.o:
    com.baidu.platform.comapi.map.n a -> a
    void a(com.baidu.platform.comapi.map.n) -> a
    com.baidu.platform.comapi.map.n a() -> a
com.baidu.platform.comapi.map.p -> com.baidu.platform.comapi.map.p:
    void a(int,int) -> a
com.baidu.platform.comapi.map.q -> com.baidu.platform.comapi.map.q:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.p b -> b
    void a(com.baidu.platform.comapi.map.p) -> a
    void b(com.baidu.platform.comapi.map.p) -> b
    void a(android.os.Message) -> a
com.baidu.platform.comapi.map.r -> com.baidu.platform.comapi.map.r:
com.baidu.platform.comapi.map.s -> com.baidu.platform.comapi.map.s:
    com.baidu.platform.comapi.map.s a -> a
    com.baidu.platform.comapi.map.s b -> b
    com.baidu.platform.comapi.map.s c -> c
    int d -> d
    com.baidu.platform.comapi.map.s[] e -> e
    com.baidu.platform.comapi.map.s[] values() -> values
    com.baidu.platform.comapi.map.s valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.t -> com.baidu.platform.comapi.map.t:
    com.baidu.platform.comapi.map.u a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.platform.comapi.map.t a(com.baidu.platform.comapi.map.u) -> a
    com.baidu.platform.comapi.map.t a(boolean) -> a
    com.baidu.platform.comapi.map.t a(int) -> a
    com.baidu.platform.comapi.map.t b(boolean) -> b
    com.baidu.platform.comapi.map.t c(boolean) -> c
    com.baidu.platform.comapi.map.t d(boolean) -> d
    com.baidu.platform.comapi.map.t e(boolean) -> e
com.baidu.platform.comapi.map.u -> com.baidu.platform.comapi.map.u:
    float a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    long h -> h
    long i -> i
    com.baidu.platform.comapi.map.u$b j -> j
    com.baidu.platform.comapi.map.u$a k -> k
    boolean l -> l
    double m -> m
    int n -> n
    java.lang.String o -> o
    float p -> p
    boolean q -> q
    int r -> r
    void a(android.os.Bundle) -> a
    android.os.Bundle a(com.baidu.platform.comapi.map.e) -> a
com.baidu.platform.comapi.map.u$a -> com.baidu.platform.comapi.map.u$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.platform.comapi.a.d e -> e
    com.baidu.platform.comapi.a.d f -> f
    com.baidu.platform.comapi.a.d g -> g
    com.baidu.platform.comapi.a.d h -> h
    com.baidu.platform.comapi.map.u i -> i
com.baidu.platform.comapi.map.u$b -> com.baidu.platform.comapi.map.u$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.u e -> e
com.baidu.platform.comapi.map.v -> com.baidu.platform.comapi.map.v:
com.baidu.platform.comapi.map.w -> com.baidu.platform.comapi.map.w:
    com.baidu.platform.comjni.map.basemap.a a -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
com.baidu.platform.comapi.map.x -> com.baidu.platform.comapi.map.x:
    java.lang.String h -> h
    android.os.Bundle e -> e
    java.lang.String f -> f
    int g -> g
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    android.os.Bundle b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comapi.map.y -> com.baidu.platform.comapi.map.y:
com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect -> com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect:
    int Create() -> Create
com.baidu.platform.comjni.base.networkdetect.a -> com.baidu.platform.comjni.base.networkdetect.a:
    int a -> a
    com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect b -> b
    int a() -> a
com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect -> com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect:
    int Create() -> Create
    int Release(int) -> Release
    boolean CreateUDC(int,java.lang.String,android.os.Bundle) -> CreateUDC
    void AppendRecord(int,java.lang.String,java.lang.String) -> AppendRecord
    void Save(int) -> Save
com.baidu.platform.comjni.base.userdatacollect.a -> com.baidu.platform.comjni.base.userdatacollect.a:
    int a -> a
    com.baidu.platform.comjni.base.userdatacollect.JNIUserdataCollect b -> b
    int a() -> a
    int b() -> b
    boolean a(java.lang.String,android.os.Bundle) -> a
    void a(java.lang.String,java.lang.String) -> a
    void c() -> c
com.baidu.platform.comjni.engine.AppEngine -> com.baidu.platform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int,int) -> despatchMessage
    void InitClass() -> InitClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.JNIEngine -> com.baidu.platform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.a -> com.baidu.platform.comjni.engine.a:
    java.lang.String a -> a
    android.util.SparseArray b -> b
    void a(int,android.os.Handler) -> a
    void b(int,android.os.Handler) -> b
    void a(int,int,int,int) -> a
    void a() -> a
com.baidu.platform.comjni.map.basemap.BaseMapCallback -> com.baidu.platform.comjni.map.basemap.BaseMapCallback:
    android.util.SparseArray a -> a
    void addLayerDataInterface(int,com.baidu.platform.comjni.map.basemap.b) -> addLayerDataInterface
    void removeLayerDataInterface(int) -> removeLayerDataInterface
    int ReqLayerData(android.os.Bundle,int,int) -> ReqLayerData
com.baidu.platform.comjni.map.basemap.JNIBaseMap -> com.baidu.platform.comjni.map.basemap.JNIBaseMap:
    int a -> a
    int Create() -> Create
    int SetCallback(int,com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int Release(int) -> Release
    boolean Init(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void OnPause(int) -> OnPause
    void OnResume(int) -> OnResume
    void ResetImageRes(int) -> ResetImageRes
    void SetMapStatus(int,android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(int,int) -> SetMapControlMode
    android.os.Bundle GetMapStatus(int) -> GetMapStatus
    float GetZoomToBound(int,android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(int,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(int,boolean) -> ShowTrafficMap
    void ShowLayers(int,int,boolean) -> ShowLayers
    int AddLayer(int,int,int,java.lang.String) -> AddLayer
    void ClearLayer(int,int) -> ClearLayer
    java.lang.String GetNearlyObjID(int,int,int,int,int) -> GetNearlyObjID
    java.lang.String ScrPtToGeoPoint(int,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(int,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(int,java.lang.String) -> SaveScreenToLocal
    boolean OnRecordAdd(int,int) -> OnRecordAdd
    boolean OnRecordStart(int,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(int,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordRemove(int,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(int) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(int,int) -> OnRecordGetAt
    boolean OnRecordImport(int,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(int) -> OnHotcityGet
    java.lang.String OnSchcityGet(int,java.lang.String) -> OnSchcityGet
    void addOneOverlayItem(int,android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(int,android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(int,android.os.Bundle) -> removeOneOverlayItem
    void PostStatInfo(int) -> PostStatInfo
    int MapProc(int,int,int,int) -> MapProc
    int CreateDuplicate(int) -> CreateDuplicate
    int[] GetScreenBuf(int,int[]) -> GetScreenBuf
    void enableDrawHouseHeight(int,boolean) -> enableDrawHouseHeight
    boolean isDrawHouseHeightEnable(int) -> isDrawHouseHeightEnable
com.baidu.platform.comjni.map.basemap.a -> com.baidu.platform.comjni.map.basemap.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.basemap.JNIBaseMap c -> c
    java.util.List d -> d
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Bundle) -> a
    int a(int) -> a
    android.os.Bundle g() -> g
    float b(android.os.Bundle) -> b
    void a(boolean) -> a
    void b(boolean) -> b
    void a(int,boolean) -> a
    int a(int,int,java.lang.String) -> a
    void b(int) -> b
    java.lang.String a(int,int,int,int) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    void a(java.lang.String) -> a
    boolean c(int) -> c
    boolean a(int,boolean,int) -> a
    boolean b(int,boolean,int) -> b
    boolean b(int,boolean) -> b
    java.lang.String h() -> h
    java.lang.String d(int) -> d
    boolean c(boolean) -> c
    java.lang.String i() -> i
    java.lang.String b(java.lang.String) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void e(android.os.Bundle) -> e
    void j() -> j
    int b(int,int,int,int) -> b
    int[] a(int[]) -> a
    void d(boolean) -> d
    boolean k() -> k
com.baidu.platform.comjni.map.basemap.b -> com.baidu.platform.comjni.map.basemap.b:
    int a(android.os.Bundle,int,int) -> a
    boolean a(int) -> a
com.baidu.platform.comjni.map.cloud.JniCloud -> com.baidu.platform.comjni.map.cloud.JniCloud:
    int create() -> create
    int release(int) -> release
    java.lang.String getSearchResult(int,int) -> getSearchResult
    void cloudSearch(int,android.os.Bundle) -> cloudSearch
    void cloudDetailSearch(int,android.os.Bundle) -> cloudDetailSearch
com.baidu.platform.comjni.map.cloud.a -> com.baidu.platform.comjni.map.cloud.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.cloud.JniCloud c -> c
    int a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache:
    int Create() -> Create
    int Release(int) -> Release
    void Init(int,android.os.Bundle) -> Init
com.baidu.platform.comjni.map.commonmemcache.a -> com.baidu.platform.comjni.map.commonmemcache.a:
    int a -> a
    com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache b -> b
    int a() -> a
    int b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comjni.map.search.JNISearch -> com.baidu.platform.comjni.map.search.JNISearch:
    int Create() -> Create
    int Release(int) -> Release
    java.lang.String GetSearchResult(int,int) -> GetSearchResult
    boolean ForceSearchByCityName(int,android.os.Bundle) -> ForceSearchByCityName
    boolean AreaSearch(int,android.os.Bundle) -> AreaSearch
    boolean RoutePlanByBus(int,android.os.Bundle) -> RoutePlanByBus
    boolean RoutePlanByCar(int,android.os.Bundle) -> RoutePlanByCar
    boolean RoutePlanByFoot(int,android.os.Bundle) -> RoutePlanByFoot
    boolean POIDetailSearchPlace(int,java.lang.String) -> POIDetailSearchPlace
    boolean BusLineDetailSearch(int,java.lang.String,java.lang.String) -> BusLineDetailSearch
    boolean SuggestionSearch(int,android.os.Bundle) -> SuggestionSearch
    boolean ReverseGeocodeSearch(int,int,int) -> ReverseGeocodeSearch
    boolean geocode(int,java.lang.String,java.lang.String) -> geocode
    boolean PoiRGCShareUrlSearch(int,int,int,java.lang.String,java.lang.String) -> PoiRGCShareUrlSearch
    boolean PoiDetailShareUrlSearch(int,java.lang.String) -> PoiDetailShareUrlSearch
    boolean MapBoundSearch(int,android.os.Bundle) -> MapBoundSearch
com.baidu.platform.comjni.map.search.a -> com.baidu.platform.comjni.map.search.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.search.JNISearch c -> c
    int a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    boolean a(android.os.Bundle) -> a
    boolean b(android.os.Bundle) -> b
    boolean c(android.os.Bundle) -> c
    boolean d(android.os.Bundle) -> d
    boolean e(android.os.Bundle) -> e
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean f(android.os.Bundle) -> f
    boolean a(int,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(int,int,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean g(android.os.Bundle) -> g
com.baidu.platform.comjni.tools.BundleKeySet -> com.baidu.platform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.platform.comjni.tools.JNITools -> com.baidu.platform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
    boolean CoordinateEncryptEx(float,float,java.lang.String,java.lang.Object) -> CoordinateEncryptEx
com.baidu.platform.comjni.tools.ParcelItem -> com.baidu.platform.comjni.tools.ParcelItem:
    android.os.Bundle b -> b
    android.os.Parcelable$Creator a -> a
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.platform.comjni.tools.a -> com.baidu.platform.comjni.tools.a:
    com.baidu.platform.comapi.a.a a(java.lang.String) -> a
    double a(com.baidu.platform.comapi.a.d,com.baidu.platform.comapi.a.d) -> a
com.baidu.platform.comjni.tools.b -> com.baidu.platform.comjni.tools.b:
    com.baidu.platform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.platform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.vi.VDeviceAPI -> com.baidu.vi.VDeviceAPI:
    android.os.PowerManager$WakeLock a -> a
    android.content.BroadcastReceiver b -> b
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.vi.c getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.vi.VMsg -> com.baidu.vi.VMsg:
    java.lang.String a -> a
    android.os.Handler b -> b
    android.os.HandlerThread c -> c
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int,int) -> postMessage
    void OnUserCommand1(int,int,int,int) -> OnUserCommand1
    void a(int,int,int,int) -> a
com.baidu.vi.VMsg$a -> com.baidu.vi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.a -> com.baidu.vi.a:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.vi.b -> com.baidu.vi.b:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.vi.c -> com.baidu.vi.c:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.vi.c$1 -> com.baidu.vi.c$1:
    int[] a -> a
com.google.inject.AbstractModule -> com.google.inject.AbstractModule:
    com.google.inject.Binder binder -> binder
    void configure(com.google.inject.Binder) -> configure
    void configure() -> configure
    com.google.inject.Binder binder() -> binder
    void bindScope(java.lang.Class,com.google.inject.Scope) -> bindScope
    com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class) -> bind
    com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant() -> bindConstant
    void install(com.google.inject.Module) -> install
    void addError(java.lang.String,java.lang.Object[]) -> addError
    void addError(java.lang.Throwable) -> addError
    void addError(com.google.inject.spi.Message) -> addError
    void requestInjection(java.lang.Object) -> requestInjection
    void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
    void requireBinding(com.google.inject.Key) -> requireBinding
    void requireBinding(java.lang.Class) -> requireBinding
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToTypes
    com.google.inject.Stage currentStage() -> currentStage
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener) -> bindListener
com.google.inject.Binder -> com.google.inject.Binder:
    void bindScope(java.lang.Class,com.google.inject.Scope) -> bindScope
    com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class) -> bind
    com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant() -> bindConstant
    void requestInjection(com.google.inject.TypeLiteral,java.lang.Object) -> requestInjection
    void requestInjection(java.lang.Object) -> requestInjection
    void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
    void install(com.google.inject.Module) -> install
    com.google.inject.Stage currentStage() -> currentStage
    void addError(java.lang.String,java.lang.Object[]) -> addError
    void addError(java.lang.Throwable) -> addError
    void addError(com.google.inject.spi.Message) -> addError
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToTypes
    void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener) -> bindListener
    com.google.inject.Binder withSource(java.lang.Object) -> withSource
    com.google.inject.Binder skipSources(java.lang.Class[]) -> skipSources
    com.google.inject.PrivateBinder newPrivateBinder() -> newPrivateBinder
    void requireExplicitBindings() -> requireExplicitBindings
    void disableCircularProxies() -> disableCircularProxies
com.google.inject.Binding -> com.google.inject.Binding:
    com.google.inject.Key getKey() -> getKey
    com.google.inject.Provider getProvider() -> getProvider
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    java.lang.Object acceptScopingVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptScopingVisitor
com.google.inject.BindingAnnotation -> com.google.inject.BindingAnnotation:
com.google.inject.ConfigurationException -> com.google.inject.ConfigurationException:
    com.google.inject.internal.util.$ImmutableSet messages -> messages
    java.lang.Object partialValue -> partialValue
    long serialVersionUID -> serialVersionUID
    com.google.inject.ConfigurationException withPartialValue(java.lang.Object) -> withPartialValue
    java.util.Collection getErrorMessages() -> getErrorMessages
    java.lang.Object getPartialValue() -> getPartialValue
    java.lang.String getMessage() -> getMessage
com.google.inject.CreationException -> com.google.inject.CreationException:
    com.google.inject.internal.util.$ImmutableSet messages -> messages
    long serialVersionUID -> serialVersionUID
    java.util.Collection getErrorMessages() -> getErrorMessages
    java.lang.String getMessage() -> getMessage
com.google.inject.Exposed -> com.google.inject.Exposed:
com.google.inject.Guice -> com.google.inject.Guice:
    com.google.inject.Injector createInjector(com.google.inject.Module[]) -> createInjector
    com.google.inject.Injector createInjector(java.lang.Iterable) -> createInjector
    com.google.inject.Injector createInjector(com.google.inject.Stage,com.google.inject.Module[]) -> createInjector
    com.google.inject.Injector createInjector(com.google.inject.Stage,java.lang.Iterable) -> createInjector
com.google.inject.ImplementedBy -> com.google.inject.ImplementedBy:
    java.lang.Class value() -> value
com.google.inject.Inject -> com.google.inject.Inject:
    boolean optional() -> optional
com.google.inject.Injector -> com.google.inject.Injector:
    void injectMembers(java.lang.Object) -> injectMembers
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    java.util.Map getBindings() -> getBindings
    java.util.Map getAllBindings() -> getAllBindings
    com.google.inject.Binding getBinding(com.google.inject.Key) -> getBinding
    com.google.inject.Binding getBinding(java.lang.Class) -> getBinding
    com.google.inject.Binding getExistingBinding(com.google.inject.Key) -> getExistingBinding
    java.util.List findBindingsByType(com.google.inject.TypeLiteral) -> findBindingsByType
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    java.lang.Object getInstance(com.google.inject.Key) -> getInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    com.google.inject.Injector getParent() -> getParent
    com.google.inject.Injector createChildInjector(java.lang.Iterable) -> createChildInjector
    com.google.inject.Injector createChildInjector(com.google.inject.Module[]) -> createChildInjector
    java.util.Map getScopeBindings() -> getScopeBindings
    java.util.Set getTypeConverterBindings() -> getTypeConverterBindings
com.google.inject.Key -> com.google.inject.Key:
    com.google.inject.Key$AnnotationStrategy annotationStrategy -> annotationStrategy
    com.google.inject.TypeLiteral typeLiteral -> typeLiteral
    int hashCode -> hashCode
    int computeHashCode() -> computeHashCode
    com.google.inject.TypeLiteral getTypeLiteral() -> getTypeLiteral
    java.lang.Class getAnnotationType() -> getAnnotationType
    java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    boolean hasAnnotationType() -> hasAnnotationType
    java.lang.String getAnnotationName() -> getAnnotationName
    java.lang.Class getRawType() -> getRawType
    com.google.inject.Key providerKey() -> providerKey
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.inject.Key get(java.lang.Class,com.google.inject.Key$AnnotationStrategy) -> get
    com.google.inject.Key get(java.lang.Class) -> get
    com.google.inject.Key get(java.lang.Class,java.lang.Class) -> get
    com.google.inject.Key get(java.lang.Class,java.lang.annotation.Annotation) -> get
    com.google.inject.Key get(java.lang.reflect.Type) -> get
    com.google.inject.Key get(java.lang.reflect.Type,java.lang.Class) -> get
    com.google.inject.Key get(java.lang.reflect.Type,java.lang.annotation.Annotation) -> get
    com.google.inject.Key get(com.google.inject.TypeLiteral) -> get
    com.google.inject.Key get(com.google.inject.TypeLiteral,java.lang.Class) -> get
    com.google.inject.Key get(com.google.inject.TypeLiteral,java.lang.annotation.Annotation) -> get
    com.google.inject.Key ofType(java.lang.Class) -> ofType
    com.google.inject.Key ofType(java.lang.reflect.Type) -> ofType
    com.google.inject.Key ofType(com.google.inject.TypeLiteral) -> ofType
    boolean hasAttributes() -> hasAttributes
    com.google.inject.Key withoutAttributes() -> withoutAttributes
    com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.annotation.Annotation) -> strategyFor
    com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.Class) -> strategyFor
    void ensureRetainedAtRuntime(java.lang.Class) -> ensureRetainedAtRuntime
    void ensureIsBindingAnnotation(java.lang.Class) -> ensureIsBindingAnnotation
com.google.inject.Key$AnnotationInstanceStrategy -> com.google.inject.Key$AnnotationInstanceStrategy:
    java.lang.annotation.Annotation annotation -> annotation
    boolean hasAttributes() -> hasAttributes
    com.google.inject.Key$AnnotationStrategy withoutAttributes() -> withoutAttributes
    java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    java.lang.Class getAnnotationType() -> getAnnotationType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.Key$AnnotationStrategy -> com.google.inject.Key$AnnotationStrategy:
    java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    java.lang.Class getAnnotationType() -> getAnnotationType
    boolean hasAttributes() -> hasAttributes
    com.google.inject.Key$AnnotationStrategy withoutAttributes() -> withoutAttributes
com.google.inject.Key$AnnotationTypeStrategy -> com.google.inject.Key$AnnotationTypeStrategy:
    java.lang.Class annotationType -> annotationType
    java.lang.annotation.Annotation annotation -> annotation
    boolean hasAttributes() -> hasAttributes
    com.google.inject.Key$AnnotationStrategy withoutAttributes() -> withoutAttributes
    java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    java.lang.Class getAnnotationType() -> getAnnotationType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.Key$NullAnnotationStrategy -> com.google.inject.Key$NullAnnotationStrategy:
    com.google.inject.Key$NullAnnotationStrategy INSTANCE -> INSTANCE
    com.google.inject.Key$NullAnnotationStrategy[] $VALUES -> $VALUES
    com.google.inject.Key$NullAnnotationStrategy[] values() -> values
    com.google.inject.Key$NullAnnotationStrategy valueOf(java.lang.String) -> valueOf
    boolean hasAttributes() -> hasAttributes
    com.google.inject.Key$AnnotationStrategy withoutAttributes() -> withoutAttributes
    java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    java.lang.Class getAnnotationType() -> getAnnotationType
    java.lang.String toString() -> toString
com.google.inject.MembersInjector -> com.google.inject.MembersInjector:
    void injectMembers(java.lang.Object) -> injectMembers
com.google.inject.Module -> com.google.inject.Module:
    void configure(com.google.inject.Binder) -> configure
com.google.inject.OutOfScopeException -> com.google.inject.OutOfScopeException:
com.google.inject.PrivateBinder -> com.google.inject.PrivateBinder:
    void expose(com.google.inject.Key) -> expose
    com.google.inject.binder.AnnotatedElementBuilder expose(java.lang.Class) -> expose
    com.google.inject.binder.AnnotatedElementBuilder expose(com.google.inject.TypeLiteral) -> expose
    com.google.inject.PrivateBinder withSource(java.lang.Object) -> withSource
    com.google.inject.PrivateBinder skipSources(java.lang.Class[]) -> skipSources
com.google.inject.PrivateModule -> com.google.inject.PrivateModule:
    com.google.inject.PrivateBinder binder -> binder
    void configure(com.google.inject.Binder) -> configure
    void configure() -> configure
    void expose(com.google.inject.Key) -> expose
    com.google.inject.binder.AnnotatedElementBuilder expose(java.lang.Class) -> expose
    com.google.inject.binder.AnnotatedElementBuilder expose(com.google.inject.TypeLiteral) -> expose
    com.google.inject.PrivateBinder binder() -> binder
    void bindScope(java.lang.Class,com.google.inject.Scope) -> bindScope
    com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class) -> bind
    com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant() -> bindConstant
    void install(com.google.inject.Module) -> install
    void addError(java.lang.String,java.lang.Object[]) -> addError
    void addError(java.lang.Throwable) -> addError
    void addError(com.google.inject.spi.Message) -> addError
    void requestInjection(java.lang.Object) -> requestInjection
    void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
    void requireBinding(com.google.inject.Key) -> requireBinding
    void requireBinding(java.lang.Class) -> requireBinding
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToTypes
    com.google.inject.Stage currentStage() -> currentStage
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener) -> bindListener
com.google.inject.ProvidedBy -> com.google.inject.ProvidedBy:
    java.lang.Class value() -> value
com.google.inject.Provider -> com.google.inject.Provider:
    java.lang.Object get() -> get
com.google.inject.Provides -> com.google.inject.Provides:
com.google.inject.ProvisionException -> com.google.inject.ProvisionException:
    com.google.inject.internal.util.$ImmutableSet messages -> messages
    long serialVersionUID -> serialVersionUID
    java.util.Collection getErrorMessages() -> getErrorMessages
    java.lang.String getMessage() -> getMessage
com.google.inject.Scope -> com.google.inject.Scope:
    com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider) -> scope
    java.lang.String toString() -> toString
com.google.inject.ScopeAnnotation -> com.google.inject.ScopeAnnotation:
com.google.inject.Scopes -> com.google.inject.Scopes:
    java.lang.Object NULL -> NULL
    com.google.inject.Scope SINGLETON -> SINGLETON
    com.google.inject.Scope NO_SCOPE -> NO_SCOPE
    boolean isSingleton(com.google.inject.Binding) -> isSingleton
    java.lang.Object access$000() -> access$000
com.google.inject.Scopes$1 -> com.google.inject.Scopes$1:
    com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider) -> scope
    java.lang.String toString() -> toString
com.google.inject.Scopes$1$1 -> com.google.inject.Scopes$1$1:
    java.lang.Object instance -> instance
    com.google.inject.Provider val$creator -> val$creator
    com.google.inject.Scopes$1 this$0 -> this$0
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.inject.Scopes$2 -> com.google.inject.Scopes$2:
    com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider) -> scope
    java.lang.String toString() -> toString
com.google.inject.Scopes$3 -> com.google.inject.Scopes$3:
    java.lang.Boolean visitNoScoping() -> visitNoScoping
    java.lang.Boolean visitScopeAnnotation(java.lang.Class) -> visitScopeAnnotation
    java.lang.Boolean visitScope(com.google.inject.Scope) -> visitScope
    java.lang.Boolean visitEagerSingleton() -> visitEagerSingleton
    java.lang.Object visitNoScoping() -> visitNoScoping
    java.lang.Object visitScopeAnnotation(java.lang.Class) -> visitScopeAnnotation
    java.lang.Object visitScope(com.google.inject.Scope) -> visitScope
    java.lang.Object visitEagerSingleton() -> visitEagerSingleton
com.google.inject.Singleton -> com.google.inject.Singleton:
com.google.inject.Stage -> com.google.inject.Stage:
    com.google.inject.Stage TOOL -> TOOL
    com.google.inject.Stage DEVELOPMENT -> DEVELOPMENT
    com.google.inject.Stage PRODUCTION -> PRODUCTION
    com.google.inject.Stage[] $VALUES -> $VALUES
    com.google.inject.Stage[] values() -> values
    com.google.inject.Stage valueOf(java.lang.String) -> valueOf
com.google.inject.TypeLiteral -> com.google.inject.TypeLiteral:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    com.google.inject.TypeLiteral fromSuperclassTypeParameter(java.lang.Class) -> fromSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    com.google.inject.TypeLiteral providerType() -> providerType
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.inject.TypeLiteral get(java.lang.reflect.Type) -> get
    com.google.inject.TypeLiteral get(java.lang.Class) -> get
    java.util.List resolveAll(java.lang.reflect.Type[]) -> resolveAll
    com.google.inject.TypeLiteral resolve(java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveType(java.lang.reflect.Type) -> resolveType
    com.google.inject.TypeLiteral getSupertype(java.lang.Class) -> getSupertype
    com.google.inject.TypeLiteral getFieldType(java.lang.reflect.Field) -> getFieldType
    java.util.List getParameterTypes(java.lang.reflect.Member) -> getParameterTypes
    java.util.List getExceptionTypes(java.lang.reflect.Member) -> getExceptionTypes
    com.google.inject.TypeLiteral getReturnType(java.lang.reflect.Method) -> getReturnType
com.google.inject.binder.AnnotatedBindingBuilder -> com.google.inject.binder.AnnotatedBindingBuilder:
    com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
com.google.inject.binder.AnnotatedConstantBindingBuilder -> com.google.inject.binder.AnnotatedConstantBindingBuilder:
    com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
com.google.inject.binder.AnnotatedElementBuilder -> com.google.inject.binder.AnnotatedElementBuilder:
    void annotatedWith(java.lang.Class) -> annotatedWith
    void annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
com.google.inject.binder.ConstantBindingBuilder -> com.google.inject.binder.ConstantBindingBuilder:
    void to(java.lang.String) -> to
    void to(int) -> to
    void to(long) -> to
    void to(boolean) -> to
    void to(double) -> to
    void to(float) -> to
    void to(short) -> to
    void to(char) -> to
    void to(byte) -> to
    void to(java.lang.Class) -> to
    void to(java.lang.Enum) -> to
com.google.inject.binder.LinkedBindingBuilder -> com.google.inject.binder.LinkedBindingBuilder:
    com.google.inject.binder.ScopedBindingBuilder to(java.lang.Class) -> to
    com.google.inject.binder.ScopedBindingBuilder to(com.google.inject.TypeLiteral) -> to
    com.google.inject.binder.ScopedBindingBuilder to(com.google.inject.Key) -> to
    void toInstance(java.lang.Object) -> toInstance
    com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.TypeLiteral) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Key) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor) -> toConstructor
    com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor,com.google.inject.TypeLiteral) -> toConstructor
com.google.inject.binder.ScopedBindingBuilder -> com.google.inject.binder.ScopedBindingBuilder:
    void in(java.lang.Class) -> in
    void in(com.google.inject.Scope) -> in
    void asEagerSingleton() -> asEagerSingleton
com.google.inject.internal.AbstractBindingBuilder -> com.google.inject.internal.AbstractBindingBuilder:
    java.lang.String IMPLEMENTATION_ALREADY_SET -> IMPLEMENTATION_ALREADY_SET
    java.lang.String SINGLE_INSTANCE_AND_SCOPE -> SINGLE_INSTANCE_AND_SCOPE
    java.lang.String SCOPE_ALREADY_SET -> SCOPE_ALREADY_SET
    java.lang.String BINDING_TO_NULL -> BINDING_TO_NULL
    java.lang.String CONSTANT_VALUE_ALREADY_SET -> CONSTANT_VALUE_ALREADY_SET
    java.lang.String ANNOTATION_ALREADY_SPECIFIED -> ANNOTATION_ALREADY_SPECIFIED
    com.google.inject.Key NULL_KEY -> NULL_KEY
    java.util.List elements -> elements
    int position -> position
    com.google.inject.Binder binder -> binder
    com.google.inject.internal.BindingImpl binding -> binding
    com.google.inject.internal.BindingImpl getBinding() -> getBinding
    com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl) -> setBinding
    com.google.inject.internal.BindingImpl annotatedWithInternal(java.lang.Class) -> annotatedWithInternal
    com.google.inject.internal.BindingImpl annotatedWithInternal(java.lang.annotation.Annotation) -> annotatedWithInternal
    void in(java.lang.Class) -> in
    void in(com.google.inject.Scope) -> in
    void asEagerSingleton() -> asEagerSingleton
    boolean keyTypeIsSet() -> keyTypeIsSet
    void checkNotTargetted() -> checkNotTargetted
    void checkNotAnnotated() -> checkNotAnnotated
    void checkNotScoped() -> checkNotScoped
com.google.inject.internal.AbstractBindingProcessor -> com.google.inject.internal.AbstractBindingProcessor:
    java.util.Set FORBIDDEN_TYPES -> FORBIDDEN_TYPES
    com.google.inject.internal.ProcessedBindingData bindingData -> bindingData
    com.google.inject.internal.UntargettedBindingImpl invalidBinding(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object) -> invalidBinding
    void putBinding(com.google.inject.internal.BindingImpl) -> putBinding
    boolean isOkayDuplicate(com.google.inject.internal.BindingImpl,com.google.inject.internal.BindingImpl,com.google.inject.internal.State) -> isOkayDuplicate
    void validateKey(java.lang.Object,com.google.inject.Key) -> validateKey
    void access$000(com.google.inject.internal.AbstractBindingProcessor,java.lang.Object,com.google.inject.Key) -> access$000
com.google.inject.internal.AbstractBindingProcessor$Processor -> com.google.inject.internal.AbstractBindingProcessor$Processor:
    java.lang.Object source -> source
    com.google.inject.Key key -> key
    java.lang.Class rawType -> rawType
    com.google.inject.internal.Scoping scoping -> scoping
    com.google.inject.internal.AbstractBindingProcessor this$0 -> this$0
    void prepareBinding() -> prepareBinding
    void scheduleInitialization(com.google.inject.internal.BindingImpl) -> scheduleInitialization
com.google.inject.internal.AbstractBindingProcessor$Processor$1 -> com.google.inject.internal.AbstractBindingProcessor$Processor$1:
    com.google.inject.internal.BindingImpl val$binding -> val$binding
    com.google.inject.internal.AbstractBindingProcessor$Processor this$1 -> this$1
    void run() -> run
com.google.inject.internal.AbstractProcessor -> com.google.inject.internal.AbstractProcessor:
    com.google.inject.internal.Errors errors -> errors
    com.google.inject.internal.InjectorImpl injector -> injector
    void process(java.lang.Iterable) -> process
    void process(com.google.inject.internal.InjectorImpl,java.util.List) -> process
    java.lang.Boolean visitOther(com.google.inject.spi.Element) -> visitOther
    java.lang.Object visitOther(com.google.inject.spi.Element) -> visitOther
com.google.inject.internal.Annotations -> com.google.inject.internal.Annotations:
    com.google.inject.internal.Annotations$AnnotationChecker scopeChecker -> scopeChecker
    com.google.inject.internal.Annotations$AnnotationChecker bindingAnnotationChecker -> bindingAnnotationChecker
    boolean isMarker(java.lang.Class) -> isMarker
    boolean isRetainedAtRuntime(java.lang.Class) -> isRetainedAtRuntime
    java.lang.Class findScopeAnnotation(com.google.inject.internal.Errors,java.lang.Class) -> findScopeAnnotation
    java.lang.Class findScopeAnnotation(com.google.inject.internal.Errors,java.lang.annotation.Annotation[]) -> findScopeAnnotation
    boolean isScopeAnnotation(java.lang.Class) -> isScopeAnnotation
    void checkForMisplacedScopeAnnotations(java.lang.Class,java.lang.Object,com.google.inject.internal.Errors) -> checkForMisplacedScopeAnnotations
    com.google.inject.Key getKey(com.google.inject.TypeLiteral,java.lang.reflect.Member,java.lang.annotation.Annotation[],com.google.inject.internal.Errors) -> getKey
    java.lang.annotation.Annotation findBindingAnnotation(com.google.inject.internal.Errors,java.lang.reflect.Member,java.lang.annotation.Annotation[]) -> findBindingAnnotation
    boolean isBindingAnnotation(java.lang.Class) -> isBindingAnnotation
    java.lang.annotation.Annotation canonicalizeIfNamed(java.lang.annotation.Annotation) -> canonicalizeIfNamed
    java.lang.Class canonicalizeIfNamed(java.lang.Class) -> canonicalizeIfNamed
com.google.inject.internal.Annotations$AnnotationChecker -> com.google.inject.internal.Annotations$AnnotationChecker:
    java.util.Collection annotationTypes -> annotationTypes
    com.google.inject.internal.util.$Function hasAnnotations -> hasAnnotations
    java.util.Map cache -> cache
    boolean hasAnnotations(java.lang.Class) -> hasAnnotations
    java.util.Collection access$000(com.google.inject.internal.Annotations$AnnotationChecker) -> access$000
com.google.inject.internal.Annotations$AnnotationChecker$1 -> com.google.inject.internal.Annotations$AnnotationChecker$1:
    com.google.inject.internal.Annotations$AnnotationChecker this$0 -> this$0
    java.lang.Boolean apply(java.lang.Class) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.inject.internal.BindingBuilder -> com.google.inject.internal.BindingBuilder:
    com.google.inject.internal.BindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    com.google.inject.internal.BindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    com.google.inject.internal.BindingBuilder to(java.lang.Class) -> to
    com.google.inject.internal.BindingBuilder to(com.google.inject.TypeLiteral) -> to
    com.google.inject.internal.BindingBuilder to(com.google.inject.Key) -> to
    void toInstance(java.lang.Object) -> toInstance
    com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Provider) -> toProvider
    com.google.inject.internal.BindingBuilder toProvider(java.lang.Class) -> toProvider
    com.google.inject.internal.BindingBuilder toProvider(com.google.inject.TypeLiteral) -> toProvider
    com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Key) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor) -> toConstructor
    com.google.inject.binder.ScopedBindingBuilder toConstructor(java.lang.reflect.Constructor,com.google.inject.TypeLiteral) -> toConstructor
    java.lang.String toString() -> toString
    void copyErrorsToBinder(com.google.inject.ConfigurationException) -> copyErrorsToBinder
    com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Key) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.TypeLiteral) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder to(com.google.inject.Key) -> to
    com.google.inject.binder.ScopedBindingBuilder to(com.google.inject.TypeLiteral) -> to
    com.google.inject.binder.ScopedBindingBuilder to(java.lang.Class) -> to
com.google.inject.internal.BindingImpl -> com.google.inject.internal.BindingImpl:
    com.google.inject.internal.InjectorImpl injector -> injector
    com.google.inject.Key key -> key
    java.lang.Object source -> source
    com.google.inject.internal.Scoping scoping -> scoping
    com.google.inject.internal.InternalFactory internalFactory -> internalFactory
    com.google.inject.Provider provider -> provider
    com.google.inject.Key getKey() -> getKey
    java.lang.Object getSource() -> getSource
    com.google.inject.Provider getProvider() -> getProvider
    com.google.inject.internal.InternalFactory getInternalFactory() -> getInternalFactory
    com.google.inject.internal.Scoping getScoping() -> getScoping
    boolean isConstant() -> isConstant
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    java.lang.Object acceptScopingVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptScopingVisitor
    com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    java.lang.String toString() -> toString
    com.google.inject.internal.InjectorImpl getInjector() -> getInjector
com.google.inject.internal.BindingProcessor -> com.google.inject.internal.BindingProcessor:
    com.google.inject.internal.Initializer initializer -> initializer
    java.lang.Boolean visit(com.google.inject.Binding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.PrivateElements) -> visit
    void bindExposed(com.google.inject.spi.PrivateElements,com.google.inject.Key) -> bindExposed
    java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    java.lang.Object visit(com.google.inject.Binding) -> visit
    com.google.inject.internal.Initializer access$000(com.google.inject.internal.BindingProcessor) -> access$000
com.google.inject.internal.BindingProcessor$1 -> com.google.inject.internal.BindingProcessor$1:
    com.google.inject.internal.BindingProcessor this$0 -> this$0
    java.lang.Boolean visit(com.google.inject.spi.ConstructorBinding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.InstanceBinding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.ProviderInstanceBinding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.ProviderKeyBinding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.LinkedKeyBinding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.UntargettedBinding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.ExposedBinding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.ConvertedConstantBinding) -> visit
    java.lang.Boolean visit(com.google.inject.spi.ProviderBinding) -> visit
    java.lang.Boolean visitOther(com.google.inject.Binding) -> visitOther
    java.lang.Object visit(com.google.inject.spi.ProviderBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ConvertedConstantBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ConstructorBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.UntargettedBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ExposedBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.LinkedKeyBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderKeyBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderInstanceBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.InstanceBinding) -> visit
    java.lang.Object visitOther(com.google.inject.Binding) -> visitOther
com.google.inject.internal.BoundProviderFactory -> com.google.inject.internal.BoundProviderFactory:
    com.google.inject.internal.InjectorImpl injector -> injector
    com.google.inject.Key providerKey -> providerKey
    java.lang.Object source -> source
    com.google.inject.internal.InternalFactory providerFactory -> providerFactory
    void notify(com.google.inject.internal.Errors) -> notify
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    java.lang.String toString() -> toString
com.google.inject.internal.BytecodeGen -> com.google.inject.internal.BytecodeGen:
    java.util.logging.Logger logger -> logger
    java.lang.ClassLoader GUICE_CLASS_LOADER -> GUICE_CLASS_LOADER
    java.lang.String GUICE_INTERNAL_PACKAGE -> GUICE_INTERNAL_PACKAGE
    java.lang.String CGLIB_PACKAGE -> CGLIB_PACKAGE
    boolean CUSTOM_LOADER_ENABLED -> CUSTOM_LOADER_ENABLED
    java.util.Map CLASS_LOADER_CACHE -> CLASS_LOADER_CACHE
    java.lang.ClassLoader canonicalize(java.lang.ClassLoader) -> canonicalize
    java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    java.lang.ClassLoader getClassLoader(java.lang.Class,java.lang.ClassLoader) -> getClassLoader
com.google.inject.internal.BytecodeGen$1 -> com.google.inject.internal.BytecodeGen$1:
    java.lang.ClassLoader apply(java.lang.ClassLoader) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.inject.internal.BytecodeGen$1$1 -> com.google.inject.internal.BytecodeGen$1$1:
    java.lang.ClassLoader val$typeClassLoader -> val$typeClassLoader
    com.google.inject.internal.BytecodeGen$1 this$0 -> this$0
    java.lang.ClassLoader run() -> run
    java.lang.Object run() -> run
com.google.inject.internal.BytecodeGen$BridgeClassLoader -> com.google.inject.internal.BytecodeGen$BridgeClassLoader:
    java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
    java.lang.Class classicLoadClass(java.lang.String,boolean) -> classicLoadClass
com.google.inject.internal.BytecodeGen$SystemBridgeHolder -> com.google.inject.internal.BytecodeGen$SystemBridgeHolder:
    com.google.inject.internal.BytecodeGen$BridgeClassLoader SYSTEM_BRIDGE -> SYSTEM_BRIDGE
com.google.inject.internal.BytecodeGen$Visibility -> com.google.inject.internal.BytecodeGen$Visibility:
    com.google.inject.internal.BytecodeGen$Visibility PUBLIC -> PUBLIC
    com.google.inject.internal.BytecodeGen$Visibility SAME_PACKAGE -> SAME_PACKAGE
    com.google.inject.internal.BytecodeGen$Visibility[] $VALUES -> $VALUES
    com.google.inject.internal.BytecodeGen$Visibility[] values() -> values
    com.google.inject.internal.BytecodeGen$Visibility valueOf(java.lang.String) -> valueOf
    com.google.inject.internal.BytecodeGen$Visibility forMember(java.lang.reflect.Member) -> forMember
    com.google.inject.internal.BytecodeGen$Visibility forType(java.lang.Class) -> forType
    com.google.inject.internal.BytecodeGen$Visibility and(com.google.inject.internal.BytecodeGen$Visibility) -> and
com.google.inject.internal.BytecodeGen$Visibility$1 -> com.google.inject.internal.BytecodeGen$Visibility$1:
    com.google.inject.internal.BytecodeGen$Visibility and(com.google.inject.internal.BytecodeGen$Visibility) -> and
com.google.inject.internal.BytecodeGen$Visibility$2 -> com.google.inject.internal.BytecodeGen$Visibility$2:
    com.google.inject.internal.BytecodeGen$Visibility and(com.google.inject.internal.BytecodeGen$Visibility) -> and
com.google.inject.internal.CircularDependencyProxy -> com.google.inject.internal.CircularDependencyProxy:
com.google.inject.internal.ConstantBindingBuilderImpl -> com.google.inject.internal.ConstantBindingBuilderImpl:
    com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    void to(java.lang.String) -> to
    void to(int) -> to
    void to(long) -> to
    void to(boolean) -> to
    void to(double) -> to
    void to(float) -> to
    void to(short) -> to
    void to(char) -> to
    void to(byte) -> to
    void to(java.lang.Class) -> to
    void to(java.lang.Enum) -> to
    void toConstant(java.lang.Class,java.lang.Object) -> toConstant
    java.lang.String toString() -> toString
com.google.inject.internal.ConstantFactory -> com.google.inject.internal.ConstantFactory:
    com.google.inject.internal.Initializable initializable -> initializable
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    java.lang.String toString() -> toString
com.google.inject.internal.ConstructionContext -> com.google.inject.internal.ConstructionContext:
    java.lang.Object currentReference -> currentReference
    boolean constructing -> constructing
    java.util.List invocationHandlers -> invocationHandlers
    java.lang.Object getCurrentReference() -> getCurrentReference
    void removeCurrentReference() -> removeCurrentReference
    void setCurrentReference(java.lang.Object) -> setCurrentReference
    boolean isConstructing() -> isConstructing
    void startConstruction() -> startConstruction
    void finishConstruction() -> finishConstruction
    java.lang.Object createProxy(com.google.inject.internal.Errors,java.lang.Class) -> createProxy
    void setProxyDelegates(java.lang.Object) -> setProxyDelegates
com.google.inject.internal.ConstructionProxy -> com.google.inject.internal.ConstructionProxy:
    java.lang.Object newInstance(java.lang.Object[]) -> newInstance
    com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    java.lang.reflect.Constructor getConstructor() -> getConstructor
com.google.inject.internal.ConstructionProxyFactory -> com.google.inject.internal.ConstructionProxyFactory:
    com.google.inject.internal.ConstructionProxy create() -> create
com.google.inject.internal.ConstructorBindingImpl -> com.google.inject.internal.ConstructorBindingImpl:
    com.google.inject.internal.ConstructorBindingImpl$Factory factory -> factory
    com.google.inject.spi.InjectionPoint constructorInjectionPoint -> constructorInjectionPoint
    com.google.inject.internal.ConstructorBindingImpl create(com.google.inject.internal.InjectorImpl,com.google.inject.Key,com.google.inject.spi.InjectionPoint,java.lang.Object,com.google.inject.internal.Scoping,com.google.inject.internal.Errors,boolean) -> create
    void initialize(com.google.inject.internal.InjectorImpl,com.google.inject.internal.Errors) -> initialize
    boolean isInitialized() -> isInitialized
    com.google.inject.spi.InjectionPoint getInternalConstructor() -> getInternalConstructor
    java.util.Set getInternalDependencies() -> getInternalDependencies
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    com.google.inject.spi.InjectionPoint getConstructor() -> getConstructor
    java.util.Set getInjectableMembers() -> getInjectableMembers
    java.util.Set getDependencies() -> getDependencies
    com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.ConstructorBindingImpl$Factory -> com.google.inject.internal.ConstructorBindingImpl$Factory:
    boolean failIfNotLinked -> failIfNotLinked
    com.google.inject.Key key -> key
    boolean allowCircularProxy -> allowCircularProxy
    com.google.inject.internal.ConstructorInjector constructorInjector -> constructorInjector
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    com.google.inject.internal.ConstructorInjector access$002(com.google.inject.internal.ConstructorBindingImpl$Factory,com.google.inject.internal.ConstructorInjector) -> access$002
    boolean access$102(com.google.inject.internal.ConstructorBindingImpl$Factory,boolean) -> access$102
    com.google.inject.internal.ConstructorInjector access$000(com.google.inject.internal.ConstructorBindingImpl$Factory) -> access$000
com.google.inject.internal.ConstructorInjector -> com.google.inject.internal.ConstructorInjector:
    com.google.inject.internal.util.$ImmutableSet injectableMembers -> injectableMembers
    com.google.inject.internal.SingleParameterInjector[] parameterInjectors -> parameterInjectors
    com.google.inject.internal.ConstructionProxy constructionProxy -> constructionProxy
    com.google.inject.internal.MembersInjectorImpl membersInjector -> membersInjector
    com.google.inject.internal.util.$ImmutableSet getInjectableMembers() -> getInjectableMembers
    com.google.inject.internal.ConstructionProxy getConstructionProxy() -> getConstructionProxy
    java.lang.Object construct(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Class,boolean) -> construct
com.google.inject.internal.ConstructorInjectorStore -> com.google.inject.internal.ConstructorInjectorStore:
    com.google.inject.internal.InjectorImpl injector -> injector
    com.google.inject.internal.FailableCache cache -> cache
    com.google.inject.internal.ConstructorInjector get(com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors) -> get
    boolean remove(com.google.inject.spi.InjectionPoint) -> remove
    com.google.inject.internal.ConstructorInjector createConstructor(com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors) -> createConstructor
    com.google.inject.internal.ConstructorInjector access$000(com.google.inject.internal.ConstructorInjectorStore,com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors) -> access$000
com.google.inject.internal.ConstructorInjectorStore$1 -> com.google.inject.internal.ConstructorInjectorStore$1:
    com.google.inject.internal.ConstructorInjectorStore this$0 -> this$0
    com.google.inject.internal.ConstructorInjector create(com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors) -> create
    java.lang.Object create(java.lang.Object,com.google.inject.internal.Errors) -> create
com.google.inject.internal.ContextualCallable -> com.google.inject.internal.ContextualCallable:
    java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.internal.CreationListener -> com.google.inject.internal.CreationListener:
    void notify(com.google.inject.internal.Errors) -> notify
com.google.inject.internal.DefaultConstructionProxyFactory -> com.google.inject.internal.DefaultConstructionProxyFactory:
    com.google.inject.spi.InjectionPoint injectionPoint -> injectionPoint
    com.google.inject.internal.ConstructionProxy create() -> create
    com.google.inject.spi.InjectionPoint access$000(com.google.inject.internal.DefaultConstructionProxyFactory) -> access$000
com.google.inject.internal.DefaultConstructionProxyFactory$1 -> com.google.inject.internal.DefaultConstructionProxyFactory$1:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.inject.internal.DefaultConstructionProxyFactory this$0 -> this$0
    java.lang.Object newInstance(java.lang.Object[]) -> newInstance
    com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    java.lang.reflect.Constructor getConstructor() -> getConstructor
com.google.inject.internal.DeferredLookups -> com.google.inject.internal.DeferredLookups:
    com.google.inject.internal.InjectorImpl injector -> injector
    java.util.List lookups -> lookups
    void initialize(com.google.inject.internal.Errors) -> initialize
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
com.google.inject.internal.DelegatingInvocationHandler -> com.google.inject.internal.DelegatingInvocationHandler:
    java.lang.Object delegate -> delegate
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object getDelegate() -> getDelegate
    void setDelegate(java.lang.Object) -> setDelegate
com.google.inject.internal.EncounterImpl -> com.google.inject.internal.EncounterImpl:
    com.google.inject.internal.Errors errors -> errors
    com.google.inject.internal.Lookups lookups -> lookups
    java.util.List membersInjectors -> membersInjectors
    java.util.List injectionListeners -> injectionListeners
    boolean valid -> valid
    void invalidate() -> invalidate
    com.google.inject.internal.util.$ImmutableList getMembersInjectors() -> getMembersInjectors
    com.google.inject.internal.util.$ImmutableList getInjectionListeners() -> getInjectionListeners
    void register(com.google.inject.MembersInjector) -> register
    void register(com.google.inject.spi.InjectionListener) -> register
    void addError(java.lang.String,java.lang.Object[]) -> addError
    void addError(java.lang.Throwable) -> addError
    void addError(com.google.inject.spi.Message) -> addError
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
com.google.inject.internal.ErrorHandler -> com.google.inject.internal.ErrorHandler:
    void handle(java.lang.Object,com.google.inject.internal.Errors) -> handle
    void handle(com.google.inject.spi.Message) -> handle
com.google.inject.internal.Errors -> com.google.inject.internal.Errors:
    com.google.inject.internal.Errors root -> root
    com.google.inject.internal.Errors parent -> parent
    java.lang.Object source -> source
    java.util.List errors -> errors
    java.lang.String CONSTRUCTOR_RULES -> CONSTRUCTOR_RULES
    java.util.Collection converters -> converters
    com.google.inject.internal.Errors withSource(java.lang.Object) -> withSource
    com.google.inject.internal.Errors missingImplementation(com.google.inject.Key) -> missingImplementation
    com.google.inject.internal.Errors jitDisabled(com.google.inject.Key) -> jitDisabled
    com.google.inject.internal.Errors converterReturnedNull(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding) -> converterReturnedNull
    com.google.inject.internal.Errors conversionTypeError(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding,java.lang.Object) -> conversionTypeError
    com.google.inject.internal.Errors conversionError(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding,java.lang.RuntimeException) -> conversionError
    com.google.inject.internal.Errors ambiguousTypeConversion(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding,com.google.inject.spi.TypeConverterBinding) -> ambiguousTypeConversion
    com.google.inject.internal.Errors bindingToProvider() -> bindingToProvider
    com.google.inject.internal.Errors subtypeNotProvided(java.lang.Class,java.lang.Class) -> subtypeNotProvided
    com.google.inject.internal.Errors notASubtype(java.lang.Class,java.lang.Class) -> notASubtype
    com.google.inject.internal.Errors recursiveImplementationType() -> recursiveImplementationType
    com.google.inject.internal.Errors recursiveProviderType() -> recursiveProviderType
    com.google.inject.internal.Errors missingRuntimeRetention(java.lang.Object) -> missingRuntimeRetention
    com.google.inject.internal.Errors missingScopeAnnotation() -> missingScopeAnnotation
    com.google.inject.internal.Errors optionalConstructor(java.lang.reflect.Constructor) -> optionalConstructor
    com.google.inject.internal.Errors cannotBindToGuiceType(java.lang.String) -> cannotBindToGuiceType
    com.google.inject.internal.Errors scopeNotFound(java.lang.Class) -> scopeNotFound
    com.google.inject.internal.Errors scopeAnnotationOnAbstractType(java.lang.Class,java.lang.Class,java.lang.Object) -> scopeAnnotationOnAbstractType
    com.google.inject.internal.Errors misplacedBindingAnnotation(java.lang.reflect.Member,java.lang.annotation.Annotation) -> misplacedBindingAnnotation
    com.google.inject.internal.Errors missingConstructor(java.lang.Class) -> missingConstructor
    com.google.inject.internal.Errors tooManyConstructors(java.lang.Class) -> tooManyConstructors
    com.google.inject.internal.Errors constructorNotDefinedByType(java.lang.reflect.Constructor,com.google.inject.TypeLiteral) -> constructorNotDefinedByType
    com.google.inject.internal.Errors duplicateScopes(com.google.inject.Scope,java.lang.Class,com.google.inject.Scope) -> duplicateScopes
    com.google.inject.internal.Errors voidProviderMethod() -> voidProviderMethod
    com.google.inject.internal.Errors missingConstantValues() -> missingConstantValues
    com.google.inject.internal.Errors cannotInjectInnerClass(java.lang.Class) -> cannotInjectInnerClass
    com.google.inject.internal.Errors duplicateBindingAnnotations(java.lang.reflect.Member,java.lang.Class,java.lang.Class) -> duplicateBindingAnnotations
    com.google.inject.internal.Errors cannotInjectFinalField(java.lang.reflect.Field) -> cannotInjectFinalField
    com.google.inject.internal.Errors cannotInjectAbstractMethod(java.lang.reflect.Method) -> cannotInjectAbstractMethod
    com.google.inject.internal.Errors cannotInjectNonVoidMethod(java.lang.reflect.Method) -> cannotInjectNonVoidMethod
    com.google.inject.internal.Errors cannotInjectMethodWithTypeParameters(java.lang.reflect.Method) -> cannotInjectMethodWithTypeParameters
    com.google.inject.internal.Errors duplicateScopeAnnotations(java.lang.Class,java.lang.Class) -> duplicateScopeAnnotations
    com.google.inject.internal.Errors recursiveBinding() -> recursiveBinding
    com.google.inject.internal.Errors bindingAlreadySet(com.google.inject.Key,java.lang.Object) -> bindingAlreadySet
    com.google.inject.internal.Errors jitBindingAlreadySet(com.google.inject.Key) -> jitBindingAlreadySet
    com.google.inject.internal.Errors childBindingAlreadySet(com.google.inject.Key,java.util.Set) -> childBindingAlreadySet
    com.google.inject.internal.Errors errorCheckingDuplicateBinding(com.google.inject.Key,java.lang.Object,java.lang.Throwable) -> errorCheckingDuplicateBinding
    com.google.inject.internal.Errors errorInjectingMethod(java.lang.Throwable) -> errorInjectingMethod
    com.google.inject.internal.Errors errorNotifyingTypeListener(com.google.inject.spi.TypeListenerBinding,com.google.inject.TypeLiteral,java.lang.Throwable) -> errorNotifyingTypeListener
    com.google.inject.internal.Errors errorInjectingConstructor(java.lang.Throwable) -> errorInjectingConstructor
    com.google.inject.internal.Errors errorInProvider(java.lang.RuntimeException) -> errorInProvider
    com.google.inject.internal.Errors errorInUserInjector(com.google.inject.MembersInjector,com.google.inject.TypeLiteral,java.lang.RuntimeException) -> errorInUserInjector
    com.google.inject.internal.Errors errorNotifyingInjectionListener(com.google.inject.spi.InjectionListener,com.google.inject.TypeLiteral,java.lang.RuntimeException) -> errorNotifyingInjectionListener
    com.google.inject.internal.Errors exposedButNotBound(com.google.inject.Key) -> exposedButNotBound
    com.google.inject.internal.Errors keyNotFullySpecified(com.google.inject.TypeLiteral) -> keyNotFullySpecified
    com.google.inject.internal.Errors errorEnhancingClass(java.lang.Class,java.lang.Throwable) -> errorEnhancingClass
    java.util.Collection getMessagesFromThrowable(java.lang.Throwable) -> getMessagesFromThrowable
    com.google.inject.internal.Errors errorInUserCode(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> errorInUserCode
    java.lang.Throwable unwrap(java.lang.RuntimeException) -> unwrap
    com.google.inject.internal.Errors cannotInjectRawProvider() -> cannotInjectRawProvider
    com.google.inject.internal.Errors cannotInjectRawMembersInjector() -> cannotInjectRawMembersInjector
    com.google.inject.internal.Errors cannotInjectTypeLiteralOf(java.lang.reflect.Type) -> cannotInjectTypeLiteralOf
    com.google.inject.internal.Errors cannotInjectRawTypeLiteral() -> cannotInjectRawTypeLiteral
    com.google.inject.internal.Errors cannotSatisfyCircularDependency(java.lang.Class) -> cannotSatisfyCircularDependency
    com.google.inject.internal.Errors circularProxiesDisabled(java.lang.Class) -> circularProxiesDisabled
    void throwCreationExceptionIfErrorsExist() -> throwCreationExceptionIfErrorsExist
    void throwConfigurationExceptionIfErrorsExist() -> throwConfigurationExceptionIfErrorsExist
    void throwProvisionExceptionIfErrorsExist() -> throwProvisionExceptionIfErrorsExist
    com.google.inject.spi.Message merge(com.google.inject.spi.Message) -> merge
    com.google.inject.internal.Errors merge(java.util.Collection) -> merge
    com.google.inject.internal.Errors merge(com.google.inject.internal.Errors) -> merge
    java.util.List getSources() -> getSources
    void throwIfNewErrors(int) -> throwIfNewErrors
    com.google.inject.internal.ErrorsException toException() -> toException
    boolean hasErrors() -> hasErrors
    com.google.inject.internal.Errors addMessage(java.lang.String,java.lang.Object[]) -> addMessage
    com.google.inject.internal.Errors addMessage(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> addMessage
    com.google.inject.internal.Errors addMessage(com.google.inject.spi.Message) -> addMessage
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    java.util.List getMessages() -> getMessages
    java.lang.String format(java.lang.String,java.util.Collection) -> format
    java.lang.Object checkForNull(java.lang.Object,java.lang.Object,com.google.inject.spi.Dependency) -> checkForNull
    java.lang.Throwable getOnlyCause(java.util.Collection) -> getOnlyCause
    int size() -> size
    java.lang.Object convert(java.lang.Object) -> convert
    void formatSource(java.util.Formatter,java.lang.Object) -> formatSource
    void formatInjectionPoint(java.util.Formatter,com.google.inject.spi.Dependency,com.google.inject.spi.InjectionPoint) -> formatInjectionPoint
com.google.inject.internal.Errors$1 -> com.google.inject.internal.Errors$1:
    com.google.inject.internal.Errors this$0 -> this$0
    int compare(com.google.inject.spi.Message,com.google.inject.spi.Message) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.inject.internal.Errors$2 -> com.google.inject.internal.Errors$2:
    java.lang.String toString(java.lang.Class) -> toString
    java.lang.String toString(java.lang.Object) -> toString
com.google.inject.internal.Errors$3 -> com.google.inject.internal.Errors$3:
    java.lang.String toString(java.lang.reflect.Member) -> toString
    java.lang.String toString(java.lang.Object) -> toString
com.google.inject.internal.Errors$4 -> com.google.inject.internal.Errors$4:
    java.lang.String toString(com.google.inject.Key) -> toString
    java.lang.String toString(java.lang.Object) -> toString
com.google.inject.internal.Errors$Converter -> com.google.inject.internal.Errors$Converter:
    java.lang.Class type -> type
    boolean appliesTo(java.lang.Object) -> appliesTo
    java.lang.String convert(java.lang.Object) -> convert
    java.lang.String toString(java.lang.Object) -> toString
com.google.inject.internal.ErrorsException -> com.google.inject.internal.ErrorsException:
    com.google.inject.internal.Errors errors -> errors
    com.google.inject.internal.Errors getErrors() -> getErrors
com.google.inject.internal.Exceptions -> com.google.inject.internal.Exceptions:
    java.lang.RuntimeException throwCleanly(java.lang.reflect.InvocationTargetException) -> throwCleanly
com.google.inject.internal.Exceptions$UnhandledCheckedUserException -> com.google.inject.internal.Exceptions$UnhandledCheckedUserException:
com.google.inject.internal.ExposedBindingImpl -> com.google.inject.internal.ExposedBindingImpl:
    com.google.inject.spi.PrivateElements privateElements -> privateElements
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    java.util.Set getDependencies() -> getDependencies
    com.google.inject.spi.PrivateElements getPrivateElements() -> getPrivateElements
    java.lang.String toString() -> toString
    void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.internal.ExposedKeyFactory -> com.google.inject.internal.ExposedKeyFactory:
    com.google.inject.Key key -> key
    com.google.inject.spi.PrivateElements privateElements -> privateElements
    com.google.inject.internal.BindingImpl delegate -> delegate
    void notify(com.google.inject.internal.Errors) -> notify
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
com.google.inject.internal.ExposureBuilder -> com.google.inject.internal.ExposureBuilder:
    com.google.inject.Binder binder -> binder
    java.lang.Object source -> source
    com.google.inject.Key key -> key
    void checkNotAnnotated() -> checkNotAnnotated
    void annotatedWith(java.lang.Class) -> annotatedWith
    void annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    com.google.inject.Key getKey() -> getKey
    java.lang.Object getSource() -> getSource
    java.lang.String toString() -> toString
com.google.inject.internal.FactoryProxy -> com.google.inject.internal.FactoryProxy:
    com.google.inject.internal.InjectorImpl injector -> injector
    com.google.inject.Key key -> key
    com.google.inject.Key targetKey -> targetKey
    java.lang.Object source -> source
    com.google.inject.internal.InternalFactory targetFactory -> targetFactory
    void notify(com.google.inject.internal.Errors) -> notify
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    java.lang.String toString() -> toString
com.google.inject.internal.FailableCache -> com.google.inject.internal.FailableCache:
    java.util.Map delegate -> delegate
    java.lang.Object create(java.lang.Object,com.google.inject.internal.Errors) -> create
    java.lang.Object get(java.lang.Object,com.google.inject.internal.Errors) -> get
    boolean remove(java.lang.Object) -> remove
com.google.inject.internal.FailableCache$1 -> com.google.inject.internal.FailableCache$1:
    com.google.inject.internal.FailableCache this$0 -> this$0
    java.lang.Object apply(java.lang.Object) -> apply
com.google.inject.internal.InheritingState -> com.google.inject.internal.InheritingState:
    com.google.inject.internal.State parent -> parent
    java.util.Map explicitBindingsMutable -> explicitBindingsMutable
    java.util.Map explicitBindings -> explicitBindings
    java.util.Map scopes -> scopes
    java.util.List converters -> converters
    java.util.List listenerBindings -> listenerBindings
    com.google.inject.internal.WeakKeySet blacklistedKeys -> blacklistedKeys
    java.lang.Object lock -> lock
    com.google.inject.internal.State parent() -> parent
    com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key) -> getExplicitBinding
    java.util.Map getExplicitBindingsThisLevel() -> getExplicitBindingsThisLevel
    void putBinding(com.google.inject.Key,com.google.inject.internal.BindingImpl) -> putBinding
    com.google.inject.Scope getScope(java.lang.Class) -> getScope
    void putAnnotation(java.lang.Class,com.google.inject.Scope) -> putAnnotation
    java.lang.Iterable getConvertersThisLevel() -> getConvertersThisLevel
    void addConverter(com.google.inject.spi.TypeConverterBinding) -> addConverter
    com.google.inject.spi.TypeConverterBinding getConverter(java.lang.String,com.google.inject.TypeLiteral,com.google.inject.internal.Errors,java.lang.Object) -> getConverter
    void addTypeListener(com.google.inject.spi.TypeListenerBinding) -> addTypeListener
    java.util.List getTypeListenerBindings() -> getTypeListenerBindings
    void blacklist(com.google.inject.Key,java.lang.Object) -> blacklist
    boolean isBlacklisted(com.google.inject.Key) -> isBlacklisted
    java.util.Set getSourcesForBlacklistedKey(com.google.inject.Key) -> getSourcesForBlacklistedKey
    java.lang.Object lock() -> lock
    java.util.Map getScopes() -> getScopes
com.google.inject.internal.Initializable -> com.google.inject.internal.Initializable:
    java.lang.Object get(com.google.inject.internal.Errors) -> get
com.google.inject.internal.Initializables -> com.google.inject.internal.Initializables:
    com.google.inject.internal.Initializable of(java.lang.Object) -> of
com.google.inject.internal.Initializables$1 -> com.google.inject.internal.Initializables$1:
    java.lang.Object val$instance -> val$instance
    java.lang.Object get(com.google.inject.internal.Errors) -> get
    java.lang.String toString() -> toString
com.google.inject.internal.Initializer -> com.google.inject.internal.Initializer:
    java.lang.Thread creatingThread -> creatingThread
    java.util.concurrent.CountDownLatch ready -> ready
    java.util.Map pendingInjection -> pendingInjection
    com.google.inject.internal.Initializable requestInjection(com.google.inject.internal.InjectorImpl,java.lang.Object,java.lang.Object,java.util.Set) -> requestInjection
    void validateOustandingInjections(com.google.inject.internal.Errors) -> validateOustandingInjections
    void injectAll(com.google.inject.internal.Errors) -> injectAll
    java.util.concurrent.CountDownLatch access$000(com.google.inject.internal.Initializer) -> access$000
    java.lang.Thread access$100(com.google.inject.internal.Initializer) -> access$100
    java.util.Map access$200(com.google.inject.internal.Initializer) -> access$200
com.google.inject.internal.Initializer$InjectableReference -> com.google.inject.internal.Initializer$InjectableReference:
    com.google.inject.internal.InjectorImpl injector -> injector
    java.lang.Object instance -> instance
    java.lang.Object source -> source
    com.google.inject.internal.MembersInjectorImpl membersInjector -> membersInjector
    com.google.inject.internal.Initializer this$0 -> this$0
    void validate(com.google.inject.internal.Errors) -> validate
    java.lang.Object get(com.google.inject.internal.Errors) -> get
    java.lang.String toString() -> toString
com.google.inject.internal.InjectionRequestProcessor -> com.google.inject.internal.InjectionRequestProcessor:
    java.util.List staticInjections -> staticInjections
    com.google.inject.internal.Initializer initializer -> initializer
    java.lang.Boolean visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    java.lang.Boolean visit(com.google.inject.spi.InjectionRequest) -> visit
    void validate() -> validate
    void injectMembers() -> injectMembers
    java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    java.lang.Object visit(com.google.inject.spi.InjectionRequest) -> visit
com.google.inject.internal.InjectionRequestProcessor$StaticInjection -> com.google.inject.internal.InjectionRequestProcessor$StaticInjection:
    com.google.inject.internal.InjectorImpl injector -> injector
    java.lang.Object source -> source
    com.google.inject.spi.StaticInjectionRequest request -> request
    com.google.inject.internal.util.$ImmutableList memberInjectors -> memberInjectors
    com.google.inject.internal.InjectionRequestProcessor this$0 -> this$0
    void validate() -> validate
    void injectMembers() -> injectMembers
com.google.inject.internal.InjectionRequestProcessor$StaticInjection$1 -> com.google.inject.internal.InjectionRequestProcessor$StaticInjection$1:
    com.google.inject.internal.InjectionRequestProcessor$StaticInjection this$1 -> this$1
    java.lang.Void call(com.google.inject.internal.InternalContext) -> call
    java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.internal.InjectorImpl -> com.google.inject.internal.InjectorImpl:
    com.google.inject.TypeLiteral STRING_TYPE -> STRING_TYPE
    com.google.inject.internal.State state -> state
    com.google.inject.internal.InjectorImpl parent -> parent
    com.google.inject.internal.InjectorImpl$BindingsMultimap bindingsMultimap -> bindingsMultimap
    com.google.inject.internal.InjectorImpl$InjectorOptions options -> options
    java.util.Map jitBindings -> jitBindings
    com.google.inject.internal.Lookups lookups -> lookups
    com.google.inject.internal.ConstructorInjectorStore constructors -> constructors
    com.google.inject.internal.MembersInjectorStore membersInjectorStore -> membersInjectorStore
    java.lang.ThreadLocal localContext -> localContext
    void index() -> index
    void index(com.google.inject.Binding) -> index
    java.util.List findBindingsByType(com.google.inject.TypeLiteral) -> findBindingsByType
    com.google.inject.internal.BindingImpl getBinding(com.google.inject.Key) -> getBinding
    com.google.inject.internal.BindingImpl getExistingBinding(com.google.inject.Key) -> getExistingBinding
    com.google.inject.internal.BindingImpl getBindingOrThrow(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation) -> getBindingOrThrow
    com.google.inject.Binding getBinding(java.lang.Class) -> getBinding
    com.google.inject.Injector getParent() -> getParent
    com.google.inject.Injector createChildInjector(java.lang.Iterable) -> createChildInjector
    com.google.inject.Injector createChildInjector(com.google.inject.Module[]) -> createChildInjector
    com.google.inject.internal.BindingImpl getJustInTimeBinding(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation) -> getJustInTimeBinding
    boolean isProvider(com.google.inject.Key) -> isProvider
    boolean isTypeLiteral(com.google.inject.Key) -> isTypeLiteral
    com.google.inject.Key getProvidedKey(com.google.inject.Key,com.google.inject.internal.Errors) -> getProvidedKey
    boolean isMembersInjector(com.google.inject.Key) -> isMembersInjector
    com.google.inject.internal.BindingImpl createMembersInjectorBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> createMembersInjectorBinding
    com.google.inject.internal.BindingImpl createProviderBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> createProviderBinding
    com.google.inject.internal.BindingImpl convertConstantStringBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> convertConstantStringBinding
    void initializeBinding(com.google.inject.internal.BindingImpl,com.google.inject.internal.Errors) -> initializeBinding
    void initializeJitBinding(com.google.inject.internal.BindingImpl,com.google.inject.internal.Errors) -> initializeJitBinding
    boolean cleanup(com.google.inject.internal.BindingImpl,java.util.Set) -> cleanup
    void removeFailedJitBinding(com.google.inject.Key,com.google.inject.spi.InjectionPoint) -> removeFailedJitBinding
    java.util.Set getInternalDependencies(com.google.inject.internal.BindingImpl) -> getInternalDependencies
    com.google.inject.internal.BindingImpl createUninitializedBinding(com.google.inject.Key,com.google.inject.internal.Scoping,java.lang.Object,com.google.inject.internal.Errors,boolean) -> createUninitializedBinding
    com.google.inject.internal.BindingImpl createTypeLiteralBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> createTypeLiteralBinding
    com.google.inject.internal.BindingImpl createProvidedByBinding(com.google.inject.Key,com.google.inject.internal.Scoping,com.google.inject.ProvidedBy,com.google.inject.internal.Errors) -> createProvidedByBinding
    com.google.inject.internal.BindingImpl createImplementedByBinding(com.google.inject.Key,com.google.inject.internal.Scoping,com.google.inject.ImplementedBy,com.google.inject.internal.Errors) -> createImplementedByBinding
    com.google.inject.internal.BindingImpl createJustInTimeBindingRecursive(com.google.inject.Key,com.google.inject.internal.Errors,boolean,com.google.inject.internal.InjectorImpl$JitLimitation) -> createJustInTimeBindingRecursive
    com.google.inject.internal.BindingImpl createJustInTimeBinding(com.google.inject.Key,com.google.inject.internal.Errors,boolean,com.google.inject.internal.InjectorImpl$JitLimitation) -> createJustInTimeBinding
    com.google.inject.internal.InternalFactory getInternalFactory(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation) -> getInternalFactory
    java.util.Map getBindings() -> getBindings
    java.util.Map getAllBindings() -> getAllBindings
    java.util.Map getScopeBindings() -> getScopeBindings
    java.util.Set getTypeConverterBindings() -> getTypeConverterBindings
    com.google.inject.internal.SingleParameterInjector[] getParametersInjectors(java.util.List,com.google.inject.internal.Errors) -> getParametersInjectors
    com.google.inject.internal.SingleParameterInjector createParameterInjector(com.google.inject.spi.Dependency,com.google.inject.internal.Errors) -> createParameterInjector
    void injectMembers(java.lang.Object) -> injectMembers
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    com.google.inject.Provider getProviderOrThrow(com.google.inject.Key,com.google.inject.internal.Errors) -> getProviderOrThrow
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    java.lang.Object getInstance(com.google.inject.Key) -> getInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object callInContext(com.google.inject.internal.ContextualCallable) -> callInContext
    java.lang.String toString() -> toString
    com.google.inject.Binding getExistingBinding(com.google.inject.Key) -> getExistingBinding
    com.google.inject.Binding getBinding(com.google.inject.Key) -> getBinding
com.google.inject.internal.InjectorImpl$1 -> com.google.inject.internal.InjectorImpl$1:
    com.google.inject.internal.InjectorImpl this$0 -> this$0
    java.lang.Object[] initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.google.inject.internal.InjectorImpl$2 -> com.google.inject.internal.InjectorImpl$2:
    com.google.inject.Key val$providerKey -> val$providerKey
    com.google.inject.internal.BindingImpl val$providerBinding -> val$providerBinding
    java.lang.Class val$rawType -> val$rawType
    java.lang.Class val$providerType -> val$providerType
    com.google.inject.internal.InjectorImpl this$0 -> this$0
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
com.google.inject.internal.InjectorImpl$3 -> com.google.inject.internal.InjectorImpl$3:
    com.google.inject.internal.BindingImpl val$targetBinding -> val$targetBinding
    com.google.inject.Key val$targetKey -> val$targetKey
    com.google.inject.internal.InjectorImpl this$0 -> this$0
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
com.google.inject.internal.InjectorImpl$4 -> com.google.inject.internal.InjectorImpl$4:
    com.google.inject.spi.Dependency val$dependency -> val$dependency
    com.google.inject.internal.InternalFactory val$factory -> val$factory
    com.google.inject.internal.InjectorImpl this$0 -> this$0
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.inject.internal.InjectorImpl$4$1 -> com.google.inject.internal.InjectorImpl$4$1:
    com.google.inject.internal.Errors val$errors -> val$errors
    com.google.inject.internal.InjectorImpl$4 this$1 -> this$1
    java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.internal.InjectorImpl$BindingsMultimap -> com.google.inject.internal.InjectorImpl$BindingsMultimap:
    java.util.Map multimap -> multimap
    void put(com.google.inject.TypeLiteral,com.google.inject.Binding) -> put
    java.util.List getAll(com.google.inject.TypeLiteral) -> getAll
com.google.inject.internal.InjectorImpl$ConvertedConstantBindingImpl -> com.google.inject.internal.InjectorImpl$ConvertedConstantBindingImpl:
    java.lang.Object value -> value
    com.google.inject.Provider provider -> provider
    com.google.inject.Binding originalBinding -> originalBinding
    com.google.inject.spi.TypeConverterBinding typeConverterBinding -> typeConverterBinding
    com.google.inject.Provider getProvider() -> getProvider
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    java.lang.Object getValue() -> getValue
    com.google.inject.spi.TypeConverterBinding getTypeConverterBinding() -> getTypeConverterBinding
    com.google.inject.Key getSourceKey() -> getSourceKey
    java.util.Set getDependencies() -> getDependencies
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.InjectorImpl$InjectorOptions -> com.google.inject.internal.InjectorImpl$InjectorOptions:
    com.google.inject.Stage stage -> stage
    boolean jitDisabled -> jitDisabled
    boolean disableCircularProxies -> disableCircularProxies
    java.lang.String toString() -> toString
com.google.inject.internal.InjectorImpl$JitLimitation -> com.google.inject.internal.InjectorImpl$JitLimitation:
    com.google.inject.internal.InjectorImpl$JitLimitation NO_JIT -> NO_JIT
    com.google.inject.internal.InjectorImpl$JitLimitation EXISTING_JIT -> EXISTING_JIT
    com.google.inject.internal.InjectorImpl$JitLimitation NEW_OR_EXISTING_JIT -> NEW_OR_EXISTING_JIT
    com.google.inject.internal.InjectorImpl$JitLimitation[] $VALUES -> $VALUES
    com.google.inject.internal.InjectorImpl$JitLimitation[] values() -> values
    com.google.inject.internal.InjectorImpl$JitLimitation valueOf(java.lang.String) -> valueOf
com.google.inject.internal.InjectorImpl$MethodInvoker -> com.google.inject.internal.InjectorImpl$MethodInvoker:
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.google.inject.internal.InjectorImpl$ProviderBindingImpl -> com.google.inject.internal.InjectorImpl$ProviderBindingImpl:
    com.google.inject.internal.BindingImpl providedBinding -> providedBinding
    com.google.inject.internal.InternalFactory createInternalFactory(com.google.inject.Binding) -> createInternalFactory
    com.google.inject.Key getProvidedKey() -> getProvidedKey
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
    java.util.Set getDependencies() -> getDependencies
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.InjectorImpl$ProviderBindingImpl$1 -> com.google.inject.internal.InjectorImpl$ProviderBindingImpl$1:
    com.google.inject.Provider val$provider -> val$provider
    com.google.inject.Provider get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
com.google.inject.internal.InjectorOptionsProcessor -> com.google.inject.internal.InjectorOptionsProcessor:
    boolean disableCircularProxies -> disableCircularProxies
    boolean jitDisabled -> jitDisabled
    java.lang.Boolean visit(com.google.inject.spi.DisableCircularProxiesOption) -> visit
    java.lang.Boolean visit(com.google.inject.spi.RequireExplicitBindingsOption) -> visit
    com.google.inject.internal.InjectorImpl$InjectorOptions getOptions(com.google.inject.Stage,com.google.inject.internal.InjectorImpl$InjectorOptions) -> getOptions
    java.lang.Object visit(com.google.inject.spi.RequireExplicitBindingsOption) -> visit
    java.lang.Object visit(com.google.inject.spi.DisableCircularProxiesOption) -> visit
com.google.inject.internal.InjectorShell -> com.google.inject.internal.InjectorShell:
    java.util.List elements -> elements
    com.google.inject.internal.InjectorImpl injector -> injector
    com.google.inject.internal.InjectorImpl getInjector() -> getInjector
    java.util.List getElements() -> getElements
    void bindInjector(com.google.inject.internal.InjectorImpl) -> bindInjector
    void bindLogger(com.google.inject.internal.InjectorImpl) -> bindLogger
    void access$100(com.google.inject.internal.InjectorImpl) -> access$100
    void access$200(com.google.inject.internal.InjectorImpl) -> access$200
com.google.inject.internal.InjectorShell$1 -> com.google.inject.internal.InjectorShell$1:
com.google.inject.internal.InjectorShell$Builder -> com.google.inject.internal.InjectorShell$Builder:
    java.util.List elements -> elements
    java.util.List modules -> modules
    com.google.inject.internal.State state -> state
    com.google.inject.internal.InjectorImpl parent -> parent
    com.google.inject.internal.InjectorImpl$InjectorOptions options -> options
    com.google.inject.Stage stage -> stage
    com.google.inject.internal.PrivateElementsImpl privateElements -> privateElements
    com.google.inject.internal.InjectorShell$Builder stage(com.google.inject.Stage) -> stage
    com.google.inject.internal.InjectorShell$Builder parent(com.google.inject.internal.InjectorImpl) -> parent
    com.google.inject.internal.InjectorShell$Builder privateElements(com.google.inject.spi.PrivateElements) -> privateElements
    void addModules(java.lang.Iterable) -> addModules
    com.google.inject.Stage getStage() -> getStage
    java.lang.Object lock() -> lock
    java.util.List build(com.google.inject.internal.Initializer,com.google.inject.internal.ProcessedBindingData,com.google.inject.internal.util.$Stopwatch,com.google.inject.internal.Errors) -> build
    com.google.inject.internal.State getState() -> getState
com.google.inject.internal.InjectorShell$InjectorFactory -> com.google.inject.internal.InjectorShell$InjectorFactory:
    com.google.inject.Injector injector -> injector
    com.google.inject.Injector get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    com.google.inject.Injector get() -> get
    java.lang.String toString() -> toString
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    java.lang.Object get() -> get
com.google.inject.internal.InjectorShell$LoggerFactory -> com.google.inject.internal.InjectorShell$LoggerFactory:
    java.util.logging.Logger get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    java.util.logging.Logger get() -> get
    java.lang.String toString() -> toString
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    java.lang.Object get() -> get
com.google.inject.internal.InjectorShell$RootModule -> com.google.inject.internal.InjectorShell$RootModule:
    com.google.inject.Stage stage -> stage
    void configure(com.google.inject.Binder) -> configure
com.google.inject.internal.InstanceBindingImpl -> com.google.inject.internal.InstanceBindingImpl:
    java.lang.Object instance -> instance
    com.google.inject.Provider provider -> provider
    com.google.inject.internal.util.$ImmutableSet injectionPoints -> injectionPoints
    com.google.inject.Provider getProvider() -> getProvider
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    java.lang.Object getInstance() -> getInstance
    java.util.Set getInjectionPoints() -> getInjectionPoints
    java.util.Set getDependencies() -> getDependencies
    com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.InternalContext -> com.google.inject.internal.InternalContext:
    java.util.Map constructionContexts -> constructionContexts
    com.google.inject.spi.Dependency dependency -> dependency
    com.google.inject.internal.ConstructionContext getConstructionContext(java.lang.Object) -> getConstructionContext
    com.google.inject.spi.Dependency getDependency() -> getDependency
    com.google.inject.spi.Dependency setDependency(com.google.inject.spi.Dependency) -> setDependency
com.google.inject.internal.InternalFactory -> com.google.inject.internal.InternalFactory:
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
com.google.inject.internal.InternalFactoryToProviderAdapter -> com.google.inject.internal.InternalFactoryToProviderAdapter:
    com.google.inject.internal.Initializable initializable -> initializable
    java.lang.Object source -> source
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
    java.lang.String toString() -> toString
com.google.inject.internal.InternalInjectorCreator -> com.google.inject.internal.InternalInjectorCreator:
    com.google.inject.internal.util.$Stopwatch stopwatch -> stopwatch
    com.google.inject.internal.Errors errors -> errors
    com.google.inject.internal.Initializer initializer -> initializer
    com.google.inject.internal.ProcessedBindingData bindingData -> bindingData
    com.google.inject.internal.InjectionRequestProcessor injectionRequestProcessor -> injectionRequestProcessor
    com.google.inject.internal.InjectorShell$Builder shellBuilder -> shellBuilder
    java.util.List shells -> shells
    com.google.inject.internal.InternalInjectorCreator stage(com.google.inject.Stage) -> stage
    com.google.inject.internal.InternalInjectorCreator parentInjector(com.google.inject.internal.InjectorImpl) -> parentInjector
    com.google.inject.internal.InternalInjectorCreator addModules(java.lang.Iterable) -> addModules
    com.google.inject.Injector build() -> build
    void initializeStatically() -> initializeStatically
    com.google.inject.Injector primaryInjector() -> primaryInjector
    void injectDynamically() -> injectDynamically
    void loadEagerSingletons(com.google.inject.internal.InjectorImpl,com.google.inject.Stage,com.google.inject.internal.Errors) -> loadEagerSingletons
    boolean isEagerSingleton(com.google.inject.internal.InjectorImpl,com.google.inject.internal.BindingImpl,com.google.inject.Stage) -> isEagerSingleton
com.google.inject.internal.InternalInjectorCreator$1 -> com.google.inject.internal.InternalInjectorCreator$1:
    com.google.inject.spi.Dependency dependency -> dependency
    com.google.inject.internal.BindingImpl val$binding -> val$binding
    com.google.inject.internal.Errors val$errors -> val$errors
    com.google.inject.internal.InternalInjectorCreator this$0 -> this$0
    java.lang.Void call(com.google.inject.internal.InternalContext) -> call
    java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.internal.InternalInjectorCreator$ToolStageInjector -> com.google.inject.internal.InternalInjectorCreator$ToolStageInjector:
    com.google.inject.Injector delegateInjector -> delegateInjector
    void injectMembers(java.lang.Object) -> injectMembers
    java.util.Map getBindings() -> getBindings
    java.util.Map getAllBindings() -> getAllBindings
    com.google.inject.Binding getBinding(com.google.inject.Key) -> getBinding
    com.google.inject.Binding getBinding(java.lang.Class) -> getBinding
    com.google.inject.Binding getExistingBinding(com.google.inject.Key) -> getExistingBinding
    java.util.List findBindingsByType(com.google.inject.TypeLiteral) -> findBindingsByType
    com.google.inject.Injector getParent() -> getParent
    com.google.inject.Injector createChildInjector(java.lang.Iterable) -> createChildInjector
    com.google.inject.Injector createChildInjector(com.google.inject.Module[]) -> createChildInjector
    java.util.Map getScopeBindings() -> getScopeBindings
    java.util.Set getTypeConverterBindings() -> getTypeConverterBindings
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    java.lang.Object getInstance(com.google.inject.Key) -> getInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
com.google.inject.internal.LinkedBindingImpl -> com.google.inject.internal.LinkedBindingImpl:
    com.google.inject.Key targetKey -> targetKey
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    com.google.inject.Key getLinkedKey() -> getLinkedKey
    java.util.Set getDependencies() -> getDependencies
    com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.LinkedProviderBindingImpl -> com.google.inject.internal.LinkedProviderBindingImpl:
    com.google.inject.Key providerKey -> providerKey
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    com.google.inject.Key getProviderKey() -> getProviderKey
    java.util.Set getDependencies() -> getDependencies
    com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.LookupProcessor -> com.google.inject.internal.LookupProcessor:
    java.lang.Boolean visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    java.lang.Boolean visit(com.google.inject.spi.ProviderLookup) -> visit
    java.lang.Object visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderLookup) -> visit
com.google.inject.internal.Lookups -> com.google.inject.internal.Lookups:
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
com.google.inject.internal.MembersInjectorImpl -> com.google.inject.internal.MembersInjectorImpl:
    com.google.inject.TypeLiteral typeLiteral -> typeLiteral
    com.google.inject.internal.InjectorImpl injector -> injector
    com.google.inject.internal.util.$ImmutableList memberInjectors -> memberInjectors
    com.google.inject.internal.util.$ImmutableList userMembersInjectors -> userMembersInjectors
    com.google.inject.internal.util.$ImmutableList injectionListeners -> injectionListeners
    com.google.inject.internal.util.$ImmutableList getMemberInjectors() -> getMemberInjectors
    void injectMembers(java.lang.Object) -> injectMembers
    void injectAndNotify(java.lang.Object,com.google.inject.internal.Errors,boolean) -> injectAndNotify
    void notifyListeners(java.lang.Object,com.google.inject.internal.Errors) -> notifyListeners
    void injectMembers(java.lang.Object,com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,boolean) -> injectMembers
    java.lang.String toString() -> toString
    com.google.inject.internal.util.$ImmutableSet getInjectionPoints() -> getInjectionPoints
com.google.inject.internal.MembersInjectorImpl$1 -> com.google.inject.internal.MembersInjectorImpl$1:
    java.lang.Object val$instance -> val$instance
    com.google.inject.internal.Errors val$errors -> val$errors
    boolean val$toolableOnly -> val$toolableOnly
    com.google.inject.internal.MembersInjectorImpl this$0 -> this$0
    java.lang.Void call(com.google.inject.internal.InternalContext) -> call
    java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.internal.MembersInjectorStore -> com.google.inject.internal.MembersInjectorStore:
    com.google.inject.internal.InjectorImpl injector -> injector
    com.google.inject.internal.util.$ImmutableList typeListenerBindings -> typeListenerBindings
    com.google.inject.internal.FailableCache cache -> cache
    boolean hasTypeListeners() -> hasTypeListeners
    com.google.inject.internal.MembersInjectorImpl get(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> get
    boolean remove(com.google.inject.TypeLiteral) -> remove
    com.google.inject.internal.MembersInjectorImpl createWithListeners(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> createWithListeners
    com.google.inject.internal.util.$ImmutableList getInjectors(java.util.Set,com.google.inject.internal.Errors) -> getInjectors
    com.google.inject.internal.MembersInjectorImpl access$000(com.google.inject.internal.MembersInjectorStore,com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> access$000
com.google.inject.internal.MembersInjectorStore$1 -> com.google.inject.internal.MembersInjectorStore$1:
    com.google.inject.internal.MembersInjectorStore this$0 -> this$0
    com.google.inject.internal.MembersInjectorImpl create(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> create
    java.lang.Object create(java.lang.Object,com.google.inject.internal.Errors) -> create
com.google.inject.internal.MessageProcessor -> com.google.inject.internal.MessageProcessor:
    java.util.logging.Logger logger -> logger
    java.lang.Boolean visit(com.google.inject.spi.Message) -> visit
    java.lang.String getRootMessage(java.lang.Throwable) -> getRootMessage
    java.lang.Object visit(com.google.inject.spi.Message) -> visit
com.google.inject.internal.MoreTypes -> com.google.inject.internal.MoreTypes:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.util.Map PRIMITIVE_TO_WRAPPER -> PRIMITIVE_TO_WRAPPER
    com.google.inject.TypeLiteral canonicalizeForKey(com.google.inject.TypeLiteral) -> canonicalizeForKey
    boolean isFullySpecified(java.lang.reflect.Type) -> isFullySpecified
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type,java.lang.String) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type,java.lang.String) -> access$000
    boolean access$100(java.lang.reflect.Type) -> access$100
    int access$200(java.lang.Object) -> access$200
com.google.inject.internal.MoreTypes$CompositeType -> com.google.inject.internal.MoreTypes$CompositeType:
    boolean isFullySpecified() -> isFullySpecified
com.google.inject.internal.MoreTypes$GenericArrayTypeImpl -> com.google.inject.internal.MoreTypes$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean isFullySpecified() -> isFullySpecified
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.internal.MoreTypes$ParameterizedTypeImpl -> com.google.inject.internal.MoreTypes$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean isFullySpecified() -> isFullySpecified
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.internal.MoreTypes$WildcardTypeImpl -> com.google.inject.internal.MoreTypes$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean isFullySpecified() -> isFullySpecified
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.internal.Nullability -> com.google.inject.internal.Nullability:
    boolean allowsNull(java.lang.annotation.Annotation[]) -> allowsNull
com.google.inject.internal.PrivateElementProcessor -> com.google.inject.internal.PrivateElementProcessor:
    java.util.List injectorShellBuilders -> injectorShellBuilders
    java.lang.Boolean visit(com.google.inject.spi.PrivateElements) -> visit
    java.util.List getInjectorShellBuilders() -> getInjectorShellBuilders
    java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
com.google.inject.internal.PrivateElementsImpl -> com.google.inject.internal.PrivateElementsImpl:
    java.lang.Object source -> source
    java.util.List elementsMutable -> elementsMutable
    java.util.List exposureBuilders -> exposureBuilders
    com.google.inject.internal.util.$ImmutableList elements -> elements
    com.google.inject.internal.util.$ImmutableMap exposedKeysToSources -> exposedKeysToSources
    com.google.inject.Injector injector -> injector
    java.lang.Object getSource() -> getSource
    java.util.List getElements() -> getElements
    com.google.inject.Injector getInjector() -> getInjector
    void initInjector(com.google.inject.Injector) -> initInjector
    java.util.Set getExposedKeys() -> getExposedKeys
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    java.util.List getElementsMutable() -> getElementsMutable
    void addExposureBuilder(com.google.inject.internal.ExposureBuilder) -> addExposureBuilder
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.Object getExposedSource(com.google.inject.Key) -> getExposedSource
    java.lang.String toString() -> toString
com.google.inject.internal.ProcessedBindingData -> com.google.inject.internal.ProcessedBindingData:
    java.util.List creationListeners -> creationListeners
    java.util.List uninitializedBindings -> uninitializedBindings
    void addCreationListener(com.google.inject.internal.CreationListener) -> addCreationListener
    void addUninitializedBinding(java.lang.Runnable) -> addUninitializedBinding
    void initializeBindings() -> initializeBindings
    void runCreationListeners(com.google.inject.internal.Errors) -> runCreationListeners
com.google.inject.internal.ProviderInstanceBindingImpl -> com.google.inject.internal.ProviderInstanceBindingImpl:
    com.google.inject.Provider providerInstance -> providerInstance
    com.google.inject.internal.util.$ImmutableSet injectionPoints -> injectionPoints
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    com.google.inject.Provider getProviderInstance() -> getProviderInstance
    java.util.Set getInjectionPoints() -> getInjectionPoints
    java.util.Set getDependencies() -> getDependencies
    com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.ProviderMethod -> com.google.inject.internal.ProviderMethod:
    com.google.inject.Key key -> key
    java.lang.Class scopeAnnotation -> scopeAnnotation
    java.lang.Object instance -> instance
    java.lang.reflect.Method method -> method
    com.google.inject.internal.util.$ImmutableSet dependencies -> dependencies
    java.util.List parameterProviders -> parameterProviders
    boolean exposed -> exposed
    com.google.inject.Key getKey() -> getKey
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.Object getInstance() -> getInstance
    void configure(com.google.inject.Binder) -> configure
    java.lang.Object get() -> get
    java.util.Set getDependencies() -> getDependencies
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.ProviderMethodsModule -> com.google.inject.internal.ProviderMethodsModule:
    java.lang.Object delegate -> delegate
    com.google.inject.TypeLiteral typeLiteral -> typeLiteral
    com.google.inject.Module forModule(com.google.inject.Module) -> forModule
    com.google.inject.Module forObject(java.lang.Object) -> forObject
    void configure(com.google.inject.Binder) -> configure
    java.util.List getProviderMethods(com.google.inject.Binder) -> getProviderMethods
    com.google.inject.internal.ProviderMethod createProviderMethod(com.google.inject.Binder,java.lang.reflect.Method) -> createProviderMethod
    com.google.inject.Key getKey(com.google.inject.internal.Errors,com.google.inject.TypeLiteral,java.lang.reflect.Member,java.lang.annotation.Annotation[]) -> getKey
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.ProviderMethodsModule$LogProvider -> com.google.inject.internal.ProviderMethodsModule$LogProvider:
    java.lang.String name -> name
    java.util.logging.Logger get() -> get
    java.lang.Object get() -> get
com.google.inject.internal.ProviderToInternalFactoryAdapter -> com.google.inject.internal.ProviderToInternalFactoryAdapter:
    com.google.inject.internal.InjectorImpl injector -> injector
    com.google.inject.internal.InternalFactory internalFactory -> internalFactory
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
    com.google.inject.internal.InternalFactory access$000(com.google.inject.internal.ProviderToInternalFactoryAdapter) -> access$000
com.google.inject.internal.ProviderToInternalFactoryAdapter$1 -> com.google.inject.internal.ProviderToInternalFactoryAdapter$1:
    com.google.inject.internal.Errors val$errors -> val$errors
    com.google.inject.internal.ProviderToInternalFactoryAdapter this$0 -> this$0
    java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.internal.ScopeBindingProcessor -> com.google.inject.internal.ScopeBindingProcessor:
    java.lang.Boolean visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
com.google.inject.internal.Scoping -> com.google.inject.internal.Scoping:
    com.google.inject.internal.Scoping UNSCOPED -> UNSCOPED
    com.google.inject.internal.Scoping SINGLETON_ANNOTATION -> SINGLETON_ANNOTATION
    com.google.inject.internal.Scoping SINGLETON_INSTANCE -> SINGLETON_INSTANCE
    com.google.inject.internal.Scoping EAGER_SINGLETON -> EAGER_SINGLETON
    com.google.inject.internal.Scoping forAnnotation(java.lang.Class) -> forAnnotation
    com.google.inject.internal.Scoping forInstance(com.google.inject.Scope) -> forInstance
    boolean isExplicitlyScoped() -> isExplicitlyScoped
    boolean isNoScope() -> isNoScope
    boolean isEagerSingleton(com.google.inject.Stage) -> isEagerSingleton
    com.google.inject.Scope getScopeInstance() -> getScopeInstance
    java.lang.Class getScopeAnnotation() -> getScopeAnnotation
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
    com.google.inject.internal.InternalFactory scope(com.google.inject.Key,com.google.inject.internal.InjectorImpl,com.google.inject.internal.InternalFactory,java.lang.Object,com.google.inject.internal.Scoping) -> scope
    com.google.inject.internal.Scoping makeInjectable(com.google.inject.internal.Scoping,com.google.inject.internal.InjectorImpl,com.google.inject.internal.Errors) -> makeInjectable
com.google.inject.internal.Scoping$1 -> com.google.inject.internal.Scoping$1:
    java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    com.google.inject.Scope getScopeInstance() -> getScopeInstance
    java.lang.String toString() -> toString
    void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$2 -> com.google.inject.internal.Scoping$2:
    java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    java.lang.Class getScopeAnnotation() -> getScopeAnnotation
    java.lang.String toString() -> toString
    void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$3 -> com.google.inject.internal.Scoping$3:
    java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    com.google.inject.Scope getScopeInstance() -> getScopeInstance
    java.lang.String toString() -> toString
    void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$4 -> com.google.inject.internal.Scoping$4:
    java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    com.google.inject.Scope getScopeInstance() -> getScopeInstance
    java.lang.String toString() -> toString
    void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$5 -> com.google.inject.internal.Scoping$5:
    java.lang.Class val$scopingAnnotation -> val$scopingAnnotation
    java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    java.lang.Class getScopeAnnotation() -> getScopeAnnotation
    java.lang.String toString() -> toString
    void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$6 -> com.google.inject.internal.Scoping$6:
    com.google.inject.Scope val$scope -> val$scope
    java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    com.google.inject.Scope getScopeInstance() -> getScopeInstance
    java.lang.String toString() -> toString
    void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.SingleFieldInjector -> com.google.inject.internal.SingleFieldInjector:
    java.lang.reflect.Field field -> field
    com.google.inject.spi.InjectionPoint injectionPoint -> injectionPoint
    com.google.inject.spi.Dependency dependency -> dependency
    com.google.inject.internal.InternalFactory factory -> factory
    com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    void inject(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Object) -> inject
com.google.inject.internal.SingleMemberInjector -> com.google.inject.internal.SingleMemberInjector:
    void inject(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Object) -> inject
    com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
com.google.inject.internal.SingleMethodInjector -> com.google.inject.internal.SingleMethodInjector:
    com.google.inject.internal.InjectorImpl$MethodInvoker methodInvoker -> methodInvoker
    com.google.inject.internal.SingleParameterInjector[] parameterInjectors -> parameterInjectors
    com.google.inject.spi.InjectionPoint injectionPoint -> injectionPoint
    com.google.inject.internal.InjectorImpl$MethodInvoker createMethodInvoker(java.lang.reflect.Method) -> createMethodInvoker
    com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    void inject(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Object) -> inject
com.google.inject.internal.SingleMethodInjector$1 -> com.google.inject.internal.SingleMethodInjector$1:
    java.lang.reflect.Method val$method -> val$method
    com.google.inject.internal.SingleMethodInjector this$0 -> this$0
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.google.inject.internal.SingleParameterInjector -> com.google.inject.internal.SingleParameterInjector:
    java.lang.Object[] NO_ARGUMENTS -> NO_ARGUMENTS
    com.google.inject.spi.Dependency dependency -> dependency
    com.google.inject.internal.InternalFactory factory -> factory
    java.lang.Object inject(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext) -> inject
    java.lang.Object[] getAll(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.internal.SingleParameterInjector[]) -> getAll
com.google.inject.internal.State -> com.google.inject.internal.State:
    com.google.inject.internal.State NONE -> NONE
    com.google.inject.internal.State parent() -> parent
    com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key) -> getExplicitBinding
    java.util.Map getExplicitBindingsThisLevel() -> getExplicitBindingsThisLevel
    void putBinding(com.google.inject.Key,com.google.inject.internal.BindingImpl) -> putBinding
    com.google.inject.Scope getScope(java.lang.Class) -> getScope
    void putAnnotation(java.lang.Class,com.google.inject.Scope) -> putAnnotation
    void addConverter(com.google.inject.spi.TypeConverterBinding) -> addConverter
    com.google.inject.spi.TypeConverterBinding getConverter(java.lang.String,com.google.inject.TypeLiteral,com.google.inject.internal.Errors,java.lang.Object) -> getConverter
    java.lang.Iterable getConvertersThisLevel() -> getConvertersThisLevel
    void addTypeListener(com.google.inject.spi.TypeListenerBinding) -> addTypeListener
    java.util.List getTypeListenerBindings() -> getTypeListenerBindings
    void blacklist(com.google.inject.Key,java.lang.Object) -> blacklist
    boolean isBlacklisted(com.google.inject.Key) -> isBlacklisted
    java.util.Set getSourcesForBlacklistedKey(com.google.inject.Key) -> getSourcesForBlacklistedKey
    java.lang.Object lock() -> lock
    java.util.Map getScopes() -> getScopes
com.google.inject.internal.State$1 -> com.google.inject.internal.State$1:
    com.google.inject.internal.State parent() -> parent
    com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key) -> getExplicitBinding
    java.util.Map getExplicitBindingsThisLevel() -> getExplicitBindingsThisLevel
    void putBinding(com.google.inject.Key,com.google.inject.internal.BindingImpl) -> putBinding
    com.google.inject.Scope getScope(java.lang.Class) -> getScope
    void putAnnotation(java.lang.Class,com.google.inject.Scope) -> putAnnotation
    void addConverter(com.google.inject.spi.TypeConverterBinding) -> addConverter
    com.google.inject.spi.TypeConverterBinding getConverter(java.lang.String,com.google.inject.TypeLiteral,com.google.inject.internal.Errors,java.lang.Object) -> getConverter
    java.lang.Iterable getConvertersThisLevel() -> getConvertersThisLevel
    void addTypeListener(com.google.inject.spi.TypeListenerBinding) -> addTypeListener
    java.util.List getTypeListenerBindings() -> getTypeListenerBindings
    void blacklist(com.google.inject.Key,java.lang.Object) -> blacklist
    boolean isBlacklisted(com.google.inject.Key) -> isBlacklisted
    java.util.Set getSourcesForBlacklistedKey(com.google.inject.Key) -> getSourcesForBlacklistedKey
    java.lang.Object lock() -> lock
    java.util.Map getScopes() -> getScopes
com.google.inject.internal.TypeConverterBindingProcessor -> com.google.inject.internal.TypeConverterBindingProcessor:
    void prepareBuiltInConverters(com.google.inject.internal.InjectorImpl) -> prepareBuiltInConverters
    void convertToPrimitiveType(java.lang.Class,java.lang.Class) -> convertToPrimitiveType
    void convertToClass(java.lang.Class,com.google.inject.spi.TypeConverter) -> convertToClass
    void convertToClasses(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToClasses
    void internalConvertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> internalConvertToTypes
    java.lang.Boolean visit(com.google.inject.spi.TypeConverterBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.TypeConverterBinding) -> visit
com.google.inject.internal.TypeConverterBindingProcessor$1 -> com.google.inject.internal.TypeConverterBindingProcessor$1:
    com.google.inject.internal.TypeConverterBindingProcessor this$0 -> this$0
    java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
    java.lang.String toString() -> toString
com.google.inject.internal.TypeConverterBindingProcessor$2 -> com.google.inject.internal.TypeConverterBindingProcessor$2:
    com.google.inject.internal.TypeConverterBindingProcessor this$0 -> this$0
    java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
    java.lang.String toString() -> toString
com.google.inject.internal.TypeConverterBindingProcessor$3 -> com.google.inject.internal.TypeConverterBindingProcessor$3:
    com.google.inject.internal.TypeConverterBindingProcessor this$0 -> this$0
    boolean matches(com.google.inject.TypeLiteral) -> matches
    java.lang.String toString() -> toString
    boolean matches(java.lang.Object) -> matches
com.google.inject.internal.TypeConverterBindingProcessor$4 -> com.google.inject.internal.TypeConverterBindingProcessor$4:
    com.google.inject.internal.TypeConverterBindingProcessor this$0 -> this$0
    java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
    java.lang.String toString() -> toString
com.google.inject.internal.TypeConverterBindingProcessor$5 -> com.google.inject.internal.TypeConverterBindingProcessor$5:
    java.lang.reflect.Method val$parser -> val$parser
    java.lang.Class val$wrapperType -> val$wrapperType
    com.google.inject.internal.TypeConverterBindingProcessor this$0 -> this$0
    java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
    java.lang.String toString() -> toString
com.google.inject.internal.TypeConverterBindingProcessor$6 -> com.google.inject.internal.TypeConverterBindingProcessor$6:
    com.google.inject.matcher.Matcher val$typeMatcher -> val$typeMatcher
    com.google.inject.internal.TypeConverterBindingProcessor this$0 -> this$0
    boolean matches(com.google.inject.TypeLiteral) -> matches
    java.lang.String toString() -> toString
    boolean matches(java.lang.Object) -> matches
com.google.inject.internal.TypeListenerBindingProcessor -> com.google.inject.internal.TypeListenerBindingProcessor:
    java.lang.Boolean visit(com.google.inject.spi.TypeListenerBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.TypeListenerBinding) -> visit
com.google.inject.internal.UniqueAnnotations -> com.google.inject.internal.UniqueAnnotations:
    java.util.concurrent.atomic.AtomicInteger nextUniqueValue -> nextUniqueValue
    java.lang.annotation.Annotation create() -> create
    java.lang.annotation.Annotation create(int) -> create
com.google.inject.internal.UniqueAnnotations$1 -> com.google.inject.internal.UniqueAnnotations$1:
    int val$value -> val$value
    int value() -> value
    java.lang.Class annotationType() -> annotationType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.UniqueAnnotations$Internal -> com.google.inject.internal.UniqueAnnotations$Internal:
    int value() -> value
com.google.inject.internal.UntargettedBindingImpl -> com.google.inject.internal.UntargettedBindingImpl:
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.inject.internal.UntargettedBindingImpl$1 -> com.google.inject.internal.UntargettedBindingImpl$1:
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean) -> get
com.google.inject.internal.UntargettedBindingProcessor -> com.google.inject.internal.UntargettedBindingProcessor:
    java.lang.Boolean visit(com.google.inject.Binding) -> visit
    java.lang.Object visit(com.google.inject.Binding) -> visit
com.google.inject.internal.UntargettedBindingProcessor$1 -> com.google.inject.internal.UntargettedBindingProcessor$1:
    com.google.inject.internal.UntargettedBindingProcessor this$0 -> this$0
    java.lang.Boolean visit(com.google.inject.spi.UntargettedBinding) -> visit
    java.lang.Boolean visitOther(com.google.inject.Binding) -> visitOther
    java.lang.Object visit(com.google.inject.spi.UntargettedBinding) -> visit
    java.lang.Object visitOther(com.google.inject.Binding) -> visitOther
com.google.inject.internal.WeakKeySet -> com.google.inject.internal.WeakKeySet:
    java.util.Map backingSet -> backingSet
    void add(com.google.inject.Key,java.lang.Object) -> add
    boolean contains(com.google.inject.Key) -> contains
    java.util.Set getSources(com.google.inject.Key) -> getSources
com.google.inject.internal.util.$AbstractIterator -> com.google.inject.internal.util.$AbstractIterator:
    com.google.inject.internal.util.$AbstractIterator$State state -> state
    java.lang.Object next -> next
    java.lang.Object computeNext() -> computeNext
    java.lang.Object endOfData() -> endOfData
    boolean hasNext() -> hasNext
    boolean tryToComputeNext() -> tryToComputeNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.inject.internal.util.$AbstractIterator$1 -> com.google.inject.internal.util.$AbstractIterator$1:
    int[] $SwitchMap$com$google$inject$internal$util$AbstractIterator$State -> $SwitchMap$com$google$inject$internal$util$AbstractIterator$State
com.google.inject.internal.util.$AbstractIterator$State -> com.google.inject.internal.util.$AbstractIterator$State:
    com.google.inject.internal.util.$AbstractIterator$State READY -> READY
    com.google.inject.internal.util.$AbstractIterator$State NOT_READY -> NOT_READY
    com.google.inject.internal.util.$AbstractIterator$State DONE -> DONE
    com.google.inject.internal.util.$AbstractIterator$State FAILED -> FAILED
    com.google.inject.internal.util.$AbstractIterator$State[] $VALUES -> $VALUES
    com.google.inject.internal.util.$AbstractIterator$State[] values() -> values
    com.google.inject.internal.util.$AbstractIterator$State valueOf(java.lang.String) -> valueOf
com.google.inject.internal.util.$AbstractMapEntry -> com.google.inject.internal.util.$AbstractMapEntry:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.internal.util.$AsynchronousComputationException -> com.google.inject.internal.util.$AsynchronousComputationException:
com.google.inject.internal.util.$Classes -> com.google.inject.internal.util.$Classes:
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isConcrete(java.lang.Class) -> isConcrete
    java.lang.String toString(java.lang.reflect.Member) -> toString
    java.lang.Class memberType(java.lang.reflect.Member) -> memberType
com.google.inject.internal.util.$Collections2 -> com.google.inject.internal.util.$Collections2:
    java.util.Collection toCollection(java.lang.Iterable) -> toCollection
    boolean setEquals(java.util.Set,java.lang.Object) -> setEquals
com.google.inject.internal.util.$ComputationException -> com.google.inject.internal.util.$ComputationException:
com.google.inject.internal.util.$CustomConcurrentHashMap -> com.google.inject.internal.util.$CustomConcurrentHashMap:
    int rehash(int) -> rehash
    int access$000(int) -> access$000
com.google.inject.internal.util.$CustomConcurrentHashMap$Builder -> com.google.inject.internal.util.$CustomConcurrentHashMap$Builder:
    float loadFactor -> loadFactor
    int initialCapacity -> initialCapacity
    int concurrencyLevel -> concurrencyLevel
    com.google.inject.internal.util.$CustomConcurrentHashMap$Builder loadFactor(float) -> loadFactor
    com.google.inject.internal.util.$CustomConcurrentHashMap$Builder initialCapacity(int) -> initialCapacity
    com.google.inject.internal.util.$CustomConcurrentHashMap$Builder concurrencyLevel(int) -> concurrencyLevel
    java.util.concurrent.ConcurrentMap buildMap(com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy) -> buildMap
    java.util.concurrent.ConcurrentMap buildComputingMap(com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy,com.google.inject.internal.util.$Function) -> buildComputingMap
com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl -> com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl:
    long serialVersionUID -> serialVersionUID
    com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy computingStrategy -> computingStrategy
    com.google.inject.internal.util.$Function computer -> computer
    java.lang.Object get(java.lang.Object) -> get
com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy -> com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy:
    java.lang.Object compute(java.lang.Object,java.lang.Object,com.google.inject.internal.util.$Function) -> compute
    java.lang.Object waitForValue(java.lang.Object) -> waitForValue
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl:
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    int MAX_SEGMENTS -> MAX_SEGMENTS
    int RETRIES_BEFORE_LOCK -> RETRIES_BEFORE_LOCK
    com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy strategy -> strategy
    int segmentMask -> segmentMask
    int segmentShift -> segmentShift
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment[] segments -> segments
    float loadFactor -> loadFactor
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    int hash(java.lang.Object) -> hash
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment[] newSegmentArray(int) -> newSegmentArray
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment segmentFor(int) -> segmentFor
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$EntryIterator -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$EntryIterator:
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$EntrySet -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$EntrySet:
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Fields -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Fields:
    java.lang.reflect.Field loadFactor -> loadFactor
    java.lang.reflect.Field segmentShift -> segmentShift
    java.lang.reflect.Field segmentMask -> segmentMask
    java.lang.reflect.Field segments -> segments
    java.lang.reflect.Field strategy -> strategy
    java.lang.reflect.Field findField(java.lang.String) -> findField
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$HashIterator -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$HashIterator:
    int nextSegmentIndex -> nextSegmentIndex
    int nextTableIndex -> nextTableIndex
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> currentTable
    java.lang.Object nextEntry -> nextEntry
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry nextExternal -> nextExternal
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry lastReturned -> lastReturned
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    boolean hasMoreElements() -> hasMoreElements
    void advance() -> advance
    boolean nextInChain() -> nextInChain
    boolean nextInTable() -> nextInTable
    boolean advanceTo(java.lang.Object) -> advanceTo
    boolean hasNext() -> hasNext
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry nextEntry() -> nextEntry
    void remove() -> remove
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl:
    long serialVersionUID -> serialVersionUID
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.lang.Object getEntry(java.lang.Object) -> getEntry
    boolean removeEntry(java.lang.Object,java.lang.Object) -> removeEntry
    boolean removeEntry(java.lang.Object) -> removeEntry
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$KeyIterator -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$KeyIterator:
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.lang.Object next() -> next
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$KeySet -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$KeySet:
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment:
    int count -> count
    int modCount -> modCount
    int threshold -> threshold
    java.util.concurrent.atomic.AtomicReferenceArray table -> table
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    void setTable(java.util.concurrent.atomic.AtomicReferenceArray) -> setTable
    java.lang.Object getFirst(int) -> getFirst
    java.lang.Object getEntry(java.lang.Object,int) -> getEntry
    java.lang.Object get(java.lang.Object,int) -> get
    boolean containsKey(java.lang.Object,int) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    void expand() -> expand
    java.lang.Object remove(java.lang.Object,int) -> remove
    boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    boolean removeEntry(java.lang.Object,int,java.lang.Object) -> removeEntry
    boolean removeEntry(java.lang.Object,int) -> removeEntry
    void clear() -> clear
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$ValueIterator -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$ValueIterator:
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.lang.Object next() -> next
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Values -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Values:
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry -> com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$WriteThroughEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.google.inject.internal.util.$CustomConcurrentHashMap$Impl this$0 -> this$0
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.inject.internal.util.$CustomConcurrentHashMap$Internals -> com.google.inject.internal.util.$CustomConcurrentHashMap$Internals:
    java.lang.Object getEntry(java.lang.Object) -> getEntry
    boolean removeEntry(java.lang.Object,java.lang.Object) -> removeEntry
    boolean removeEntry(java.lang.Object) -> removeEntry
com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry -> com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry:
    java.lang.Object key -> key
    int hash -> hash
    com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry next -> next
    java.lang.Object value -> value
com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy -> com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleStrategy:
    com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry newEntry(java.lang.Object,int,com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) -> newEntry
    com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry copyEntry(java.lang.Object,com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry,com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) -> copyEntry
    void setValue(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry,java.lang.Object) -> setValue
    java.lang.Object getValue(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) -> getValue
    boolean equalKeys(java.lang.Object,java.lang.Object) -> equalKeys
    boolean equalValues(java.lang.Object,java.lang.Object) -> equalValues
    int hashKey(java.lang.Object) -> hashKey
    java.lang.Object getKey(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) -> getKey
    com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry getNext(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) -> getNext
    int getHash(com.google.inject.internal.util.$CustomConcurrentHashMap$SimpleInternalEntry) -> getHash
    void setInternals(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals) -> setInternals
    int getHash(java.lang.Object) -> getHash
    java.lang.Object getNext(java.lang.Object) -> getNext
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object getValue(java.lang.Object) -> getValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object copyEntry(java.lang.Object,java.lang.Object,java.lang.Object) -> copyEntry
    java.lang.Object newEntry(java.lang.Object,int,java.lang.Object) -> newEntry
com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy -> com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy:
    java.lang.Object newEntry(java.lang.Object,int,java.lang.Object) -> newEntry
    java.lang.Object copyEntry(java.lang.Object,java.lang.Object,java.lang.Object) -> copyEntry
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    boolean equalKeys(java.lang.Object,java.lang.Object) -> equalKeys
    boolean equalValues(java.lang.Object,java.lang.Object) -> equalValues
    int hashKey(java.lang.Object) -> hashKey
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object getNext(java.lang.Object) -> getNext
    int getHash(java.lang.Object) -> getHash
    void setInternals(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals) -> setInternals
com.google.inject.internal.util.$ExpirationTimer -> com.google.inject.internal.util.$ExpirationTimer:
    java.util.Timer instance -> instance
com.google.inject.internal.util.$FinalizablePhantomReference -> com.google.inject.internal.util.$FinalizablePhantomReference:
com.google.inject.internal.util.$FinalizableReference -> com.google.inject.internal.util.$FinalizableReference:
    void finalizeReferent() -> finalizeReferent
com.google.inject.internal.util.$FinalizableReferenceQueue -> com.google.inject.internal.util.$FinalizableReferenceQueue:
    java.util.logging.Logger logger -> logger
    java.lang.String FINALIZER_CLASS_NAME -> FINALIZER_CLASS_NAME
    java.lang.reflect.Method startFinalizer -> startFinalizer
    java.lang.ref.ReferenceQueue queue -> queue
    boolean threadStarted -> threadStarted
    void cleanUp() -> cleanUp
    java.lang.Class loadFinalizer(com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader[]) -> loadFinalizer
    java.lang.reflect.Method getStartFinalizer(java.lang.Class) -> getStartFinalizer
    java.util.logging.Logger access$000() -> access$000
com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader -> com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader:
    java.lang.String LOADING_ERROR -> LOADING_ERROR
    java.lang.Class loadFinalizer() -> loadFinalizer
    java.net.URL getBaseUrl() -> getBaseUrl
    java.net.URLClassLoader newLoader(java.net.URL) -> newLoader
com.google.inject.internal.util.$FinalizableReferenceQueue$DirectLoader -> com.google.inject.internal.util.$FinalizableReferenceQueue$DirectLoader:
    java.lang.Class loadFinalizer() -> loadFinalizer
com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader -> com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader:
    java.lang.Class loadFinalizer() -> loadFinalizer
com.google.inject.internal.util.$FinalizableReferenceQueue$SystemLoader -> com.google.inject.internal.util.$FinalizableReferenceQueue$SystemLoader:
    java.lang.Class loadFinalizer() -> loadFinalizer
com.google.inject.internal.util.$FinalizableSoftReference -> com.google.inject.internal.util.$FinalizableSoftReference:
com.google.inject.internal.util.$FinalizableWeakReference -> com.google.inject.internal.util.$FinalizableWeakReference:
com.google.inject.internal.util.$Finalizer -> com.google.inject.internal.util.$Finalizer:
    java.util.logging.Logger logger -> logger
    java.lang.String FINALIZABLE_REFERENCE -> FINALIZABLE_REFERENCE
    java.lang.ref.WeakReference finalizableReferenceClassReference -> finalizableReferenceClassReference
    java.lang.ref.PhantomReference frqReference -> frqReference
    java.lang.ref.ReferenceQueue queue -> queue
    java.lang.ref.ReferenceQueue startFinalizer(java.lang.Class,java.lang.Object) -> startFinalizer
    void run() -> run
    void cleanUp(java.lang.ref.Reference) -> cleanUp
    java.lang.reflect.Method getFinalizeReferentMethod() -> getFinalizeReferentMethod
com.google.inject.internal.util.$Finalizer$1 -> com.google.inject.internal.util.$Finalizer$1:
com.google.inject.internal.util.$Finalizer$ShutDown -> com.google.inject.internal.util.$Finalizer$ShutDown:
com.google.inject.internal.util.$Function -> com.google.inject.internal.util.$Function:
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.inject.internal.util.$Hashing -> com.google.inject.internal.util.$Hashing:
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int CUTOFF -> CUTOFF
    int smear(int) -> smear
    int chooseTableSize(int) -> chooseTableSize
com.google.inject.internal.util.$ImmutableCollection -> com.google.inject.internal.util.$ImmutableCollection:
    com.google.inject.internal.util.$ImmutableCollection EMPTY_IMMUTABLE_COLLECTION -> EMPTY_IMMUTABLE_COLLECTION
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    com.google.inject.internal.util.$UnmodifiableIterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.lang.String toString() -> toString
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
    com.google.inject.internal.util.$UnmodifiableIterator access$100() -> access$100
    java.lang.Object[] access$200() -> access$200
com.google.inject.internal.util.$ImmutableCollection$1 -> com.google.inject.internal.util.$ImmutableCollection$1:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.inject.internal.util.$ImmutableCollection$ArrayImmutableCollection -> com.google.inject.internal.util.$ImmutableCollection$ArrayImmutableCollection:
    java.lang.Object[] elements -> elements
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] access$300(com.google.inject.internal.util.$ImmutableCollection$ArrayImmutableCollection) -> access$300
com.google.inject.internal.util.$ImmutableCollection$ArrayImmutableCollection$1 -> com.google.inject.internal.util.$ImmutableCollection$ArrayImmutableCollection$1:
    int i -> i
    com.google.inject.internal.util.$ImmutableCollection$ArrayImmutableCollection this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.inject.internal.util.$ImmutableCollection$EmptyImmutableCollection -> com.google.inject.internal.util.$ImmutableCollection$EmptyImmutableCollection:
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableCollection$SerializedForm -> com.google.inject.internal.util.$ImmutableCollection$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.inject.internal.util.$ImmutableEntry -> com.google.inject.internal.util.$ImmutableEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.inject.internal.util.$ImmutableList -> com.google.inject.internal.util.$ImmutableList:
    com.google.inject.internal.util.$ImmutableList EMPTY_IMMUTABLE_LIST -> EMPTY_IMMUTABLE_LIST
    com.google.inject.internal.util.$ImmutableList of() -> of
    com.google.inject.internal.util.$ImmutableList of(java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableList of(java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableList of(java.lang.Object[]) -> of
    com.google.inject.internal.util.$ImmutableList copyOf(java.lang.Iterable) -> copyOf
    com.google.inject.internal.util.$ImmutableList copyOf(java.util.Iterator) -> copyOf
    com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.ArrayList) -> copyOfInternal
    java.lang.Object[] nullChecked(java.lang.Object[]) -> nullChecked
    com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.Collection) -> copyOfInternal
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.inject.internal.util.$ImmutableList subList(int,int) -> subList
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    java.lang.Object[] copyIntoArray(java.lang.Object[]) -> copyIntoArray
    com.google.inject.internal.util.$ImmutableList createFromIterable(java.lang.Iterable,int) -> createFromIterable
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    com.google.inject.internal.util.$ImmutableList$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    java.util.List subList(int,int) -> subList
com.google.inject.internal.util.$ImmutableList$1 -> com.google.inject.internal.util.$ImmutableList$1:
com.google.inject.internal.util.$ImmutableList$Builder -> com.google.inject.internal.util.$ImmutableList$Builder:
    java.util.ArrayList contents -> contents
    com.google.inject.internal.util.$ImmutableList$Builder add(java.lang.Object) -> add
    com.google.inject.internal.util.$ImmutableList$Builder addAll(java.lang.Iterable) -> addAll
    com.google.inject.internal.util.$ImmutableList build() -> build
com.google.inject.internal.util.$ImmutableList$EmptyImmutableList -> com.google.inject.internal.util.$ImmutableList$EmptyImmutableList:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.inject.internal.util.$ImmutableList subList(int,int) -> subList
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.List subList(int,int) -> subList
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableList$RegularImmutableList -> com.google.inject.internal.util.$ImmutableList$RegularImmutableList:
    int offset -> offset
    int size -> size
    java.lang.Object[] array -> array
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.inject.internal.util.$ImmutableList subList(int,int) -> subList
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.List subList(int,int) -> subList
    java.util.Iterator iterator() -> iterator
    int access$300(com.google.inject.internal.util.$ImmutableList$RegularImmutableList) -> access$300
com.google.inject.internal.util.$ImmutableList$RegularImmutableList$1 -> com.google.inject.internal.util.$ImmutableList$RegularImmutableList$1:
    int index -> index
    int val$start -> val$start
    com.google.inject.internal.util.$ImmutableList$RegularImmutableList this$0 -> this$0
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    java.lang.Object next() -> next
    java.lang.Object previous() -> previous
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
    void remove() -> remove
com.google.inject.internal.util.$ImmutableList$SerializedForm -> com.google.inject.internal.util.$ImmutableList$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.inject.internal.util.$ImmutableMap -> com.google.inject.internal.util.$ImmutableMap:
    com.google.inject.internal.util.$ImmutableMap EMPTY_IMMUTABLE_MAP -> EMPTY_IMMUTABLE_MAP
    com.google.inject.internal.util.$ImmutableMap of() -> of
    com.google.inject.internal.util.$ImmutableMap of(java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableMap$Builder builder() -> builder
    java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object) -> entryOf
    com.google.inject.internal.util.$ImmutableMap copyOf(java.util.Map) -> copyOf
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.google.inject.internal.util.$ImmutableSet entrySet() -> entrySet
    com.google.inject.internal.util.$ImmutableSet keySet() -> keySet
    com.google.inject.internal.util.$ImmutableCollection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.Map$Entry access$300(java.lang.Object,java.lang.Object) -> access$300
com.google.inject.internal.util.$ImmutableMap$1 -> com.google.inject.internal.util.$ImmutableMap$1:
com.google.inject.internal.util.$ImmutableMap$Builder -> com.google.inject.internal.util.$ImmutableMap$Builder:
    java.util.List entries -> entries
    com.google.inject.internal.util.$ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.inject.internal.util.$ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.inject.internal.util.$ImmutableMap build() -> build
    com.google.inject.internal.util.$ImmutableMap fromEntryList(java.util.List) -> fromEntryList
com.google.inject.internal.util.$ImmutableMap$EmptyImmutableMap -> com.google.inject.internal.util.$ImmutableMap$EmptyImmutableMap:
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    com.google.inject.internal.util.$ImmutableSet entrySet() -> entrySet
    com.google.inject.internal.util.$ImmutableSet keySet() -> keySet
    com.google.inject.internal.util.$ImmutableCollection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap -> com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap:
    java.util.Map$Entry[] entries -> entries
    java.lang.Object[] table -> table
    int mask -> mask
    int keySetHashCode -> keySetHashCode
    com.google.inject.internal.util.$ImmutableSet entrySet -> entrySet
    com.google.inject.internal.util.$ImmutableSet keySet -> keySet
    com.google.inject.internal.util.$ImmutableCollection values -> values
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    com.google.inject.internal.util.$ImmutableSet entrySet() -> entrySet
    com.google.inject.internal.util.$ImmutableSet keySet() -> keySet
    com.google.inject.internal.util.$ImmutableCollection values() -> values
    java.lang.String toString() -> toString
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.Map$Entry[] access$500(com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap) -> access$500
    int access$600(com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap) -> access$600
com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$EntrySet -> com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$EntrySet:
    com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap map -> map
    boolean contains(java.lang.Object) -> contains
com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet -> com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$KeySet:
    com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap map -> map
    java.lang.Object transform(java.util.Map$Entry) -> transform
    boolean contains(java.lang.Object) -> contains
    java.lang.Object transform(java.lang.Object) -> transform
com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$Values -> com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$Values:
    com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap map -> map
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$Values$1 -> com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$Values$1:
    int index -> index
    com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap$Values this$0 -> this$0
    java.lang.Object computeNext() -> computeNext
com.google.inject.internal.util.$ImmutableMap$SerializedForm -> com.google.inject.internal.util.$ImmutableMap$SerializedForm:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap -> com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap:
    java.lang.Object singleKey -> singleKey
    java.lang.Object singleValue -> singleValue
    java.util.Map$Entry entry -> entry
    com.google.inject.internal.util.$ImmutableSet entrySet -> entrySet
    com.google.inject.internal.util.$ImmutableSet keySet -> keySet
    com.google.inject.internal.util.$ImmutableCollection values -> values
    java.util.Map$Entry entry() -> entry
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    com.google.inject.internal.util.$ImmutableSet entrySet() -> entrySet
    com.google.inject.internal.util.$ImmutableSet keySet() -> keySet
    com.google.inject.internal.util.$ImmutableCollection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap$Values -> com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap$Values:
    java.lang.Object singleValue -> singleValue
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableSet -> com.google.inject.internal.util.$ImmutableSet:
    com.google.inject.internal.util.$ImmutableSet EMPTY_IMMUTABLE_SET -> EMPTY_IMMUTABLE_SET
    com.google.inject.internal.util.$ImmutableSet of() -> of
    com.google.inject.internal.util.$ImmutableSet of(java.lang.Object) -> of
    com.google.inject.internal.util.$ImmutableSet of(java.lang.Object[]) -> of
    com.google.inject.internal.util.$ImmutableSet copyOf(java.lang.Iterable) -> copyOf
    com.google.inject.internal.util.$ImmutableSet copyOf(java.util.Iterator) -> copyOf
    com.google.inject.internal.util.$ImmutableSet copyOfInternal(java.util.Collection) -> copyOfInternal
    boolean isHashCodeFast() -> isHashCodeFast
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.String toString() -> toString
    com.google.inject.internal.util.$ImmutableSet create(java.lang.Iterable,int) -> create
    java.lang.Object writeReplace() -> writeReplace
    com.google.inject.internal.util.$ImmutableSet$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableSet$1 -> com.google.inject.internal.util.$ImmutableSet$1:
com.google.inject.internal.util.$ImmutableSet$ArrayImmutableSet -> com.google.inject.internal.util.$ImmutableSet$ArrayImmutableSet:
    java.lang.Object[] elements -> elements
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableSet$Builder -> com.google.inject.internal.util.$ImmutableSet$Builder:
    java.util.ArrayList contents -> contents
    com.google.inject.internal.util.$ImmutableSet$Builder add(java.lang.Object) -> add
    com.google.inject.internal.util.$ImmutableSet$Builder add(java.lang.Object[]) -> add
    com.google.inject.internal.util.$ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.inject.internal.util.$ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.inject.internal.util.$ImmutableSet build() -> build
com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet -> com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> isHashCodeFast
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableSet$RegularImmutableSet -> com.google.inject.internal.util.$ImmutableSet$RegularImmutableSet:
    java.lang.Object[] table -> table
    int mask -> mask
    int hashCode -> hashCode
    boolean contains(java.lang.Object) -> contains
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> isHashCodeFast
com.google.inject.internal.util.$ImmutableSet$SerializedForm -> com.google.inject.internal.util.$ImmutableSet$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet -> com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet:
    java.lang.Object element -> element
    int hashCode -> hashCode
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> isHashCodeFast
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableSet$TransformedImmutableSet -> com.google.inject.internal.util.$ImmutableSet$TransformedImmutableSet:
    java.lang.Object[] source -> source
    int hashCode -> hashCode
    java.lang.Object transform(java.lang.Object) -> transform
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.inject.internal.util.$UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> isHashCodeFast
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$ImmutableSet$TransformedImmutableSet$1 -> com.google.inject.internal.util.$ImmutableSet$TransformedImmutableSet$1:
    int index -> index
    com.google.inject.internal.util.$ImmutableSet$TransformedImmutableSet this$0 -> this$0
    java.lang.Object computeNext() -> computeNext
com.google.inject.internal.util.$Iterables -> com.google.inject.internal.util.$Iterables:
    java.lang.String toString(java.lang.Iterable) -> toString
    java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable) -> concat
    java.lang.Iterable transform(java.lang.Iterable,com.google.inject.internal.util.$Function) -> transform
com.google.inject.internal.util.$Iterables$1 -> com.google.inject.internal.util.$Iterables$1:
    java.util.Iterator apply(java.lang.Iterable) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.inject.internal.util.$Iterables$2 -> com.google.inject.internal.util.$Iterables$2:
    java.lang.Iterable val$iterators -> val$iterators
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$Iterables$3 -> com.google.inject.internal.util.$Iterables$3:
    java.lang.Iterable val$fromIterable -> val$fromIterable
    com.google.inject.internal.util.$Function val$function -> val$function
    java.util.Iterator iterator() -> iterator
com.google.inject.internal.util.$Iterables$IterableWithToString -> com.google.inject.internal.util.$Iterables$IterableWithToString:
    java.lang.String toString() -> toString
com.google.inject.internal.util.$Iterators -> com.google.inject.internal.util.$Iterators:
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    java.util.ListIterator EMPTY_LIST_ITERATOR -> EMPTY_LIST_ITERATOR
    com.google.inject.internal.util.$UnmodifiableIterator emptyIterator() -> emptyIterator
    java.util.ListIterator emptyListIterator() -> emptyListIterator
    com.google.inject.internal.util.$UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
    java.lang.String toString(java.util.Iterator) -> toString
    java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    java.util.Iterator concat(java.util.Iterator) -> concat
    java.util.Iterator transform(java.util.Iterator,com.google.inject.internal.util.$Function) -> transform
    com.google.inject.internal.util.$UnmodifiableIterator forArray(java.lang.Object[]) -> forArray
    com.google.inject.internal.util.$UnmodifiableIterator forArray(java.lang.Object[],int,int) -> forArray
    com.google.inject.internal.util.$UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    java.util.Enumeration asEnumeration(java.util.Iterator) -> asEnumeration
com.google.inject.internal.util.$Iterators$1 -> com.google.inject.internal.util.$Iterators$1:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.inject.internal.util.$Iterators$2 -> com.google.inject.internal.util.$Iterators$2:
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    java.lang.Object next() -> next
    java.lang.Object previous() -> previous
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
    void remove() -> remove
com.google.inject.internal.util.$Iterators$3 -> com.google.inject.internal.util.$Iterators$3:
    java.util.Iterator val$iterator -> val$iterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.inject.internal.util.$Iterators$4 -> com.google.inject.internal.util.$Iterators$4:
    java.util.Iterator current -> current
    java.util.Iterator removeFrom -> removeFrom
    java.util.Iterator val$inputs -> val$inputs
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.inject.internal.util.$Iterators$5 -> com.google.inject.internal.util.$Iterators$5:
    java.util.Iterator val$fromIterator -> val$fromIterator
    com.google.inject.internal.util.$Function val$function -> val$function
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.inject.internal.util.$Iterators$6 -> com.google.inject.internal.util.$Iterators$6:
    int length -> length
    int i -> i
    java.lang.Object[] val$array -> val$array
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.inject.internal.util.$Iterators$7 -> com.google.inject.internal.util.$Iterators$7:
    int i -> i
    int val$offset -> val$offset
    int val$end -> val$end
    java.lang.Object[] val$array -> val$array
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.inject.internal.util.$Iterators$8 -> com.google.inject.internal.util.$Iterators$8:
    boolean done -> done
    java.lang.Object val$value -> val$value
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.inject.internal.util.$Iterators$9 -> com.google.inject.internal.util.$Iterators$9:
    java.util.Iterator val$iterator -> val$iterator
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
com.google.inject.internal.util.$Join -> com.google.inject.internal.util.$Join:
    java.lang.String join(java.lang.String,java.lang.Iterable) -> join
    java.lang.String join(java.lang.String,java.lang.Object[]) -> join
    java.lang.String join(java.lang.String,java.lang.Object,java.lang.Object[]) -> join
    java.lang.String join(java.lang.String,java.util.Iterator) -> join
    java.lang.String join(java.lang.String,java.lang.String,java.util.Map) -> join
    java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.Iterable) -> join
    java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.Object[]) -> join
    java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.Object,java.lang.Object[]) -> join
    java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.util.Iterator) -> join
    java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.String,java.util.Map) -> join
    void appendOneEntry(java.lang.Appendable,java.lang.String,java.util.Map$Entry) -> appendOneEntry
    void appendOneToken(java.lang.Appendable,java.lang.Object) -> appendOneToken
    java.lang.CharSequence toCharSequence(java.lang.Object) -> toCharSequence
com.google.inject.internal.util.$Join$1 -> com.google.inject.internal.util.$Join$1:
com.google.inject.internal.util.$Join$JoinException -> com.google.inject.internal.util.$Join$JoinException:
    long serialVersionUID -> serialVersionUID
com.google.inject.internal.util.$Lists -> com.google.inject.internal.util.$Lists:
    java.util.ArrayList newArrayList() -> newArrayList
    java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    int computeArrayListCapacity(int) -> computeArrayListCapacity
    java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    java.util.ArrayList newArrayList(java.lang.Object,java.lang.Object[]) -> newArrayList
com.google.inject.internal.util.$MapMaker -> com.google.inject.internal.util.$MapMaker:
    com.google.inject.internal.util.$MapMaker$Strength keyStrength -> keyStrength
    com.google.inject.internal.util.$MapMaker$Strength valueStrength -> valueStrength
    long expirationNanos -> expirationNanos
    boolean useCustomMap -> useCustomMap
    com.google.inject.internal.util.$CustomConcurrentHashMap$Builder builder -> builder
    com.google.inject.internal.util.$MapMaker$ValueReference COMPUTING -> COMPUTING
    com.google.inject.internal.util.$MapMaker initialCapacity(int) -> initialCapacity
    com.google.inject.internal.util.$MapMaker loadFactor(float) -> loadFactor
    com.google.inject.internal.util.$MapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.inject.internal.util.$MapMaker weakKeys() -> weakKeys
    com.google.inject.internal.util.$MapMaker softKeys() -> softKeys
    com.google.inject.internal.util.$MapMaker setKeyStrength(com.google.inject.internal.util.$MapMaker$Strength) -> setKeyStrength
    com.google.inject.internal.util.$MapMaker weakValues() -> weakValues
    com.google.inject.internal.util.$MapMaker softValues() -> softValues
    com.google.inject.internal.util.$MapMaker setValueStrength(com.google.inject.internal.util.$MapMaker$Strength) -> setValueStrength
    com.google.inject.internal.util.$MapMaker expiration(long,java.util.concurrent.TimeUnit) -> expiration
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    java.util.concurrent.ConcurrentMap makeComputingMap(com.google.inject.internal.util.$Function) -> makeComputingMap
    com.google.inject.internal.util.$MapMaker$ValueReference computing() -> computing
    com.google.inject.internal.util.$MapMaker$Strength access$100(com.google.inject.internal.util.$MapMaker) -> access$100
    com.google.inject.internal.util.$MapMaker$Strength access$200(com.google.inject.internal.util.$MapMaker) -> access$200
    long access$300(com.google.inject.internal.util.$MapMaker) -> access$300
    com.google.inject.internal.util.$CustomConcurrentHashMap$Builder access$400(com.google.inject.internal.util.$MapMaker) -> access$400
    com.google.inject.internal.util.$MapMaker$ValueReference access$500() -> access$500
    com.google.inject.internal.util.$MapMaker$ValueReference access$600() -> access$600
com.google.inject.internal.util.$MapMaker$1 -> com.google.inject.internal.util.$MapMaker$1:
    java.lang.Object get() -> get
    com.google.inject.internal.util.$MapMaker$ValueReference copyFor(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.util.$MapMaker$ComputationExceptionReference -> com.google.inject.internal.util.$MapMaker$ComputationExceptionReference:
    java.lang.Throwable t -> t
    java.lang.Object get() -> get
    com.google.inject.internal.util.$MapMaker$ValueReference copyFor(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.util.$MapMaker$LinkedSoftEntry -> com.google.inject.internal.util.$MapMaker$LinkedSoftEntry:
    com.google.inject.internal.util.$MapMaker$ReferenceEntry next -> next
    com.google.inject.internal.util.$MapMaker$ReferenceEntry getNext() -> getNext
com.google.inject.internal.util.$MapMaker$LinkedStrongEntry -> com.google.inject.internal.util.$MapMaker$LinkedStrongEntry:
    com.google.inject.internal.util.$MapMaker$ReferenceEntry next -> next
    com.google.inject.internal.util.$MapMaker$ReferenceEntry getNext() -> getNext
com.google.inject.internal.util.$MapMaker$LinkedWeakEntry -> com.google.inject.internal.util.$MapMaker$LinkedWeakEntry:
    com.google.inject.internal.util.$MapMaker$ReferenceEntry next -> next
    com.google.inject.internal.util.$MapMaker$ReferenceEntry getNext() -> getNext
com.google.inject.internal.util.$MapMaker$NullOutputExceptionReference -> com.google.inject.internal.util.$MapMaker$NullOutputExceptionReference:
    java.lang.String message -> message
    java.lang.Object get() -> get
    com.google.inject.internal.util.$MapMaker$ValueReference copyFor(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.util.$MapMaker$QueueHolder -> com.google.inject.internal.util.$MapMaker$QueueHolder:
    com.google.inject.internal.util.$FinalizableReferenceQueue queue -> queue
com.google.inject.internal.util.$MapMaker$ReferenceEntry -> com.google.inject.internal.util.$MapMaker$ReferenceEntry:
    com.google.inject.internal.util.$MapMaker$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.inject.internal.util.$MapMaker$ValueReference) -> setValueReference
    void valueReclaimed() -> valueReclaimed
    com.google.inject.internal.util.$MapMaker$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
    java.lang.Object getKey() -> getKey
com.google.inject.internal.util.$MapMaker$SoftEntry -> com.google.inject.internal.util.$MapMaker$SoftEntry:
    com.google.inject.internal.util.$CustomConcurrentHashMap$Internals internals -> internals
    int hash -> hash
    com.google.inject.internal.util.$MapMaker$ValueReference valueReference -> valueReference
    java.lang.Object getKey() -> getKey
    void finalizeReferent() -> finalizeReferent
    com.google.inject.internal.util.$MapMaker$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.inject.internal.util.$MapMaker$ValueReference) -> setValueReference
    void valueReclaimed() -> valueReclaimed
    com.google.inject.internal.util.$MapMaker$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
com.google.inject.internal.util.$MapMaker$SoftValueReference -> com.google.inject.internal.util.$MapMaker$SoftValueReference:
    com.google.inject.internal.util.$MapMaker$ReferenceEntry entry -> entry
    void finalizeReferent() -> finalizeReferent
    com.google.inject.internal.util.$MapMaker$ValueReference copyFor(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.util.$MapMaker$StrategyImpl -> com.google.inject.internal.util.$MapMaker$StrategyImpl:
    com.google.inject.internal.util.$MapMaker$Strength keyStrength -> keyStrength
    com.google.inject.internal.util.$MapMaker$Strength valueStrength -> valueStrength
    java.util.concurrent.ConcurrentMap map -> map
    long expirationNanos -> expirationNanos
    com.google.inject.internal.util.$CustomConcurrentHashMap$Internals internals -> internals
    long serialVersionUID -> serialVersionUID
    void setValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry,java.lang.Object) -> setValue
    void scheduleRemoval(java.lang.Object,java.lang.Object) -> scheduleRemoval
    boolean equalKeys(java.lang.Object,java.lang.Object) -> equalKeys
    boolean equalValues(java.lang.Object,java.lang.Object) -> equalValues
    int hashKey(java.lang.Object) -> hashKey
    java.lang.Object getKey(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> getKey
    int getHash(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> getHash
    com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> newEntry
    com.google.inject.internal.util.$MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyEntry
    java.lang.Object waitForValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> waitForValue
    java.lang.Object getValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> getValue
    java.lang.Object compute(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$Function) -> compute
    void setValueReference(com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$MapMaker$ValueReference) -> setValueReference
    com.google.inject.internal.util.$MapMaker$ReferenceEntry getNext(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> getNext
    void setInternals(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals) -> setInternals
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object waitForValue(java.lang.Object) -> waitForValue
    java.lang.Object compute(java.lang.Object,java.lang.Object,com.google.inject.internal.util.$Function) -> compute
    int getHash(java.lang.Object) -> getHash
    java.lang.Object getNext(java.lang.Object) -> getNext
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object getValue(java.lang.Object) -> getValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object copyEntry(java.lang.Object,java.lang.Object,java.lang.Object) -> copyEntry
    java.lang.Object newEntry(java.lang.Object,int,java.lang.Object) -> newEntry
com.google.inject.internal.util.$MapMaker$StrategyImpl$1 -> com.google.inject.internal.util.$MapMaker$StrategyImpl$1:
    java.lang.ref.WeakReference val$keyReference -> val$keyReference
    java.lang.ref.WeakReference val$valueReference -> val$valueReference
    com.google.inject.internal.util.$MapMaker$StrategyImpl this$0 -> this$0
    void run() -> run
com.google.inject.internal.util.$MapMaker$StrategyImpl$Fields -> com.google.inject.internal.util.$MapMaker$StrategyImpl$Fields:
    java.lang.reflect.Field keyStrength -> keyStrength
    java.lang.reflect.Field valueStrength -> valueStrength
    java.lang.reflect.Field expirationNanos -> expirationNanos
    java.lang.reflect.Field internals -> internals
    java.lang.reflect.Field map -> map
    java.lang.reflect.Field findField(java.lang.String) -> findField
com.google.inject.internal.util.$MapMaker$StrategyImpl$FutureValueReference -> com.google.inject.internal.util.$MapMaker$StrategyImpl$FutureValueReference:
    com.google.inject.internal.util.$MapMaker$ReferenceEntry original -> original
    com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry -> newEntry
    com.google.inject.internal.util.$MapMaker$StrategyImpl this$0 -> this$0
    java.lang.Object get() -> get
    com.google.inject.internal.util.$MapMaker$ValueReference copyFor(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
    void removeEntry() -> removeEntry
com.google.inject.internal.util.$MapMaker$Strength -> com.google.inject.internal.util.$MapMaker$Strength:
    com.google.inject.internal.util.$MapMaker$Strength WEAK -> WEAK
    com.google.inject.internal.util.$MapMaker$Strength SOFT -> SOFT
    com.google.inject.internal.util.$MapMaker$Strength STRONG -> STRONG
    com.google.inject.internal.util.$MapMaker$Strength[] $VALUES -> $VALUES
    com.google.inject.internal.util.$MapMaker$Strength[] values() -> values
    com.google.inject.internal.util.$MapMaker$Strength valueOf(java.lang.String) -> valueOf
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hash(java.lang.Object) -> hash
    com.google.inject.internal.util.$MapMaker$ValueReference referenceValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> newEntry
    com.google.inject.internal.util.$MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyEntry
com.google.inject.internal.util.$MapMaker$Strength$1 -> com.google.inject.internal.util.$MapMaker$Strength$1:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hash(java.lang.Object) -> hash
    com.google.inject.internal.util.$MapMaker$ValueReference referenceValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> newEntry
    com.google.inject.internal.util.$MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyEntry
com.google.inject.internal.util.$MapMaker$Strength$2 -> com.google.inject.internal.util.$MapMaker$Strength$2:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hash(java.lang.Object) -> hash
    com.google.inject.internal.util.$MapMaker$ValueReference referenceValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> newEntry
    com.google.inject.internal.util.$MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyEntry
com.google.inject.internal.util.$MapMaker$Strength$3 -> com.google.inject.internal.util.$MapMaker$Strength$3:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hash(java.lang.Object) -> hash
    com.google.inject.internal.util.$MapMaker$ValueReference referenceValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> newEntry
    com.google.inject.internal.util.$MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyEntry
com.google.inject.internal.util.$MapMaker$StrongEntry -> com.google.inject.internal.util.$MapMaker$StrongEntry:
    java.lang.Object key -> key
    com.google.inject.internal.util.$CustomConcurrentHashMap$Internals internals -> internals
    int hash -> hash
    com.google.inject.internal.util.$MapMaker$ValueReference valueReference -> valueReference
    java.lang.Object getKey() -> getKey
    com.google.inject.internal.util.$MapMaker$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.inject.internal.util.$MapMaker$ValueReference) -> setValueReference
    void valueReclaimed() -> valueReclaimed
    com.google.inject.internal.util.$MapMaker$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
com.google.inject.internal.util.$MapMaker$StrongValueReference -> com.google.inject.internal.util.$MapMaker$StrongValueReference:
    java.lang.Object referent -> referent
    java.lang.Object get() -> get
    com.google.inject.internal.util.$MapMaker$ValueReference copyFor(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.util.$MapMaker$ValueReference -> com.google.inject.internal.util.$MapMaker$ValueReference:
    java.lang.Object get() -> get
    com.google.inject.internal.util.$MapMaker$ValueReference copyFor(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.util.$MapMaker$WeakEntry -> com.google.inject.internal.util.$MapMaker$WeakEntry:
    com.google.inject.internal.util.$CustomConcurrentHashMap$Internals internals -> internals
    int hash -> hash
    com.google.inject.internal.util.$MapMaker$ValueReference valueReference -> valueReference
    java.lang.Object getKey() -> getKey
    void finalizeReferent() -> finalizeReferent
    com.google.inject.internal.util.$MapMaker$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.inject.internal.util.$MapMaker$ValueReference) -> setValueReference
    void valueReclaimed() -> valueReclaimed
    com.google.inject.internal.util.$MapMaker$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
com.google.inject.internal.util.$MapMaker$WeakValueReference -> com.google.inject.internal.util.$MapMaker$WeakValueReference:
    com.google.inject.internal.util.$MapMaker$ReferenceEntry entry -> entry
    void finalizeReferent() -> finalizeReferent
    com.google.inject.internal.util.$MapMaker$ValueReference copyFor(com.google.inject.internal.util.$MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.util.$Maps -> com.google.inject.internal.util.$Maps:
    java.util.HashMap newHashMap() -> newHashMap
    java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    java.util.TreeMap newTreeMap() -> newTreeMap
    java.util.IdentityHashMap newIdentityHashMap() -> newIdentityHashMap
    java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
com.google.inject.internal.util.$NullOutputException -> com.google.inject.internal.util.$NullOutputException:
com.google.inject.internal.util.$Nullable -> com.google.inject.internal.util.$Nullable:
com.google.inject.internal.util.$ObjectArrays -> com.google.inject.internal.util.$ObjectArrays:
    java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
com.google.inject.internal.util.$Objects -> com.google.inject.internal.util.$Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hashCode(java.lang.Object[]) -> hashCode
com.google.inject.internal.util.$Preconditions -> com.google.inject.internal.util.$Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    java.lang.Iterable checkContentsNotNull(java.lang.Iterable) -> checkContentsNotNull
    java.lang.Iterable checkContentsNotNull(java.lang.Iterable,java.lang.Object) -> checkContentsNotNull
    java.lang.Iterable checkContentsNotNull(java.lang.Iterable,java.lang.String,java.lang.Object[]) -> checkContentsNotNull
    boolean containsOrIsNull(java.lang.Iterable) -> containsOrIsNull
    void checkElementIndex(int,int) -> checkElementIndex
    void checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    void checkPositionIndex(int,int) -> checkPositionIndex
    void checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.google.inject.internal.util.$Sets -> com.google.inject.internal.util.$Sets:
    java.util.HashSet newHashSet() -> newHashSet
    java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
    int hashCodeImpl(java.util.Set) -> hashCodeImpl
com.google.inject.internal.util.$Sets$SetFromMap -> com.google.inject.internal.util.$Sets$SetFromMap:
    java.util.Map m -> m
    java.util.Set s -> s
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean containsAll(java.util.Collection) -> containsAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.inject.internal.util.$SourceProvider -> com.google.inject.internal.util.$SourceProvider:
    java.lang.Object UNKNOWN_SOURCE -> UNKNOWN_SOURCE
    com.google.inject.internal.util.$ImmutableSet classNamesToSkip -> classNamesToSkip
    com.google.inject.internal.util.$SourceProvider DEFAULT_INSTANCE -> DEFAULT_INSTANCE
    com.google.inject.internal.util.$SourceProvider plusSkippedClasses(java.lang.Class[]) -> plusSkippedClasses
    java.util.List asStrings(java.lang.Class[]) -> asStrings
    java.lang.StackTraceElement get() -> get
com.google.inject.internal.util.$StackTraceElements -> com.google.inject.internal.util.$StackTraceElements:
    java.lang.Object forMember(java.lang.reflect.Member) -> forMember
    java.lang.Object forType(java.lang.Class) -> forType
com.google.inject.internal.util.$Stopwatch -> com.google.inject.internal.util.$Stopwatch:
    java.util.logging.Logger logger -> logger
    long start -> start
    long reset() -> reset
    void resetAndLog(java.lang.String) -> resetAndLog
com.google.inject.internal.util.$Strings -> com.google.inject.internal.util.$Strings:
    java.lang.String capitalize(java.lang.String) -> capitalize
com.google.inject.internal.util.$ToStringBuilder -> com.google.inject.internal.util.$ToStringBuilder:
    java.util.Map map -> map
    java.lang.String name -> name
    com.google.inject.internal.util.$ToStringBuilder add(java.lang.String,java.lang.Object) -> add
    java.lang.String toString() -> toString
com.google.inject.internal.util.$UnmodifiableIterator -> com.google.inject.internal.util.$UnmodifiableIterator:
    void remove() -> remove
com.google.inject.matcher.AbstractMatcher -> com.google.inject.matcher.AbstractMatcher:
    com.google.inject.matcher.Matcher and(com.google.inject.matcher.Matcher) -> and
    com.google.inject.matcher.Matcher or(com.google.inject.matcher.Matcher) -> or
com.google.inject.matcher.AbstractMatcher$AndMatcher -> com.google.inject.matcher.AbstractMatcher$AndMatcher:
    com.google.inject.matcher.Matcher a -> a
    com.google.inject.matcher.Matcher b -> b
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Object) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.matcher.AbstractMatcher$OrMatcher -> com.google.inject.matcher.AbstractMatcher$OrMatcher:
    com.google.inject.matcher.Matcher a -> a
    com.google.inject.matcher.Matcher b -> b
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Object) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.matcher.Matcher -> com.google.inject.matcher.Matcher:
    boolean matches(java.lang.Object) -> matches
    com.google.inject.matcher.Matcher and(com.google.inject.matcher.Matcher) -> and
    com.google.inject.matcher.Matcher or(com.google.inject.matcher.Matcher) -> or
com.google.inject.matcher.Matchers -> com.google.inject.matcher.Matchers:
    com.google.inject.matcher.Matcher ANY -> ANY
    com.google.inject.matcher.Matcher any() -> any
    com.google.inject.matcher.Matcher not(com.google.inject.matcher.Matcher) -> not
    void checkForRuntimeRetention(java.lang.Class) -> checkForRuntimeRetention
    com.google.inject.matcher.Matcher annotatedWith(java.lang.Class) -> annotatedWith
    com.google.inject.matcher.Matcher annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    com.google.inject.matcher.Matcher subclassesOf(java.lang.Class) -> subclassesOf
    com.google.inject.matcher.Matcher only(java.lang.Object) -> only
    com.google.inject.matcher.Matcher identicalTo(java.lang.Object) -> identicalTo
    com.google.inject.matcher.Matcher inPackage(java.lang.Package) -> inPackage
    com.google.inject.matcher.Matcher inSubpackage(java.lang.String) -> inSubpackage
    com.google.inject.matcher.Matcher returns(com.google.inject.matcher.Matcher) -> returns
    void access$200(java.lang.Class) -> access$200
com.google.inject.matcher.Matchers$1 -> com.google.inject.matcher.Matchers$1:
com.google.inject.matcher.Matchers$AnnotatedWith -> com.google.inject.matcher.Matchers$AnnotatedWith:
    java.lang.annotation.Annotation annotation -> annotation
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.reflect.AnnotatedElement) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$AnnotatedWithType -> com.google.inject.matcher.Matchers$AnnotatedWithType:
    java.lang.Class annotationType -> annotationType
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.reflect.AnnotatedElement) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$Any -> com.google.inject.matcher.Matchers$Any:
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Object) -> matches
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
com.google.inject.matcher.Matchers$IdenticalTo -> com.google.inject.matcher.Matchers$IdenticalTo:
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Object) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.matcher.Matchers$InPackage -> com.google.inject.matcher.Matchers$InPackage:
    java.lang.Package targetPackage -> targetPackage
    java.lang.String packageName -> packageName
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Class) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$InSubpackage -> com.google.inject.matcher.Matchers$InSubpackage:
    java.lang.String targetPackageName -> targetPackageName
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Class) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$Not -> com.google.inject.matcher.Matchers$Not:
    com.google.inject.matcher.Matcher delegate -> delegate
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Object) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.matcher.Matchers$Only -> com.google.inject.matcher.Matchers$Only:
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Object) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.inject.matcher.Matchers$Returns -> com.google.inject.matcher.Matchers$Returns:
    com.google.inject.matcher.Matcher returnType -> returnType
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.reflect.Method) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$SubclassesOf -> com.google.inject.matcher.Matchers$SubclassesOf:
    java.lang.Class superclass -> superclass
    long serialVersionUID -> serialVersionUID
    boolean matches(java.lang.Class) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean matches(java.lang.Object) -> matches
com.google.inject.name.Named -> com.google.inject.name.Named:
    java.lang.String value() -> value
com.google.inject.name.NamedImpl -> com.google.inject.name.NamedImpl:
    java.lang.String value -> value
    long serialVersionUID -> serialVersionUID
    java.lang.String value() -> value
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Class annotationType() -> annotationType
com.google.inject.name.Names -> com.google.inject.name.Names:
    com.google.inject.name.Named named(java.lang.String) -> named
    void bindProperties(com.google.inject.Binder,java.util.Map) -> bindProperties
    void bindProperties(com.google.inject.Binder,java.util.Properties) -> bindProperties
com.google.inject.spi.BindingScopingVisitor -> com.google.inject.spi.BindingScopingVisitor:
    java.lang.Object visitEagerSingleton() -> visitEagerSingleton
    java.lang.Object visitScope(com.google.inject.Scope) -> visitScope
    java.lang.Object visitScopeAnnotation(java.lang.Class) -> visitScopeAnnotation
    java.lang.Object visitNoScoping() -> visitNoScoping
com.google.inject.spi.BindingTargetVisitor -> com.google.inject.spi.BindingTargetVisitor:
    java.lang.Object visit(com.google.inject.spi.InstanceBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderInstanceBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderKeyBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.LinkedKeyBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ExposedBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.UntargettedBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ConstructorBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ConvertedConstantBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderBinding) -> visit
com.google.inject.spi.ConstructorBinding -> com.google.inject.spi.ConstructorBinding:
    com.google.inject.spi.InjectionPoint getConstructor() -> getConstructor
    java.util.Set getInjectableMembers() -> getInjectableMembers
com.google.inject.spi.ConvertedConstantBinding -> com.google.inject.spi.ConvertedConstantBinding:
    java.lang.Object getValue() -> getValue
    com.google.inject.spi.TypeConverterBinding getTypeConverterBinding() -> getTypeConverterBinding
    com.google.inject.Key getSourceKey() -> getSourceKey
    java.util.Set getDependencies() -> getDependencies
com.google.inject.spi.DefaultBindingScopingVisitor -> com.google.inject.spi.DefaultBindingScopingVisitor:
    java.lang.Object visitOther() -> visitOther
    java.lang.Object visitEagerSingleton() -> visitEagerSingleton
    java.lang.Object visitScope(com.google.inject.Scope) -> visitScope
    java.lang.Object visitScopeAnnotation(java.lang.Class) -> visitScopeAnnotation
    java.lang.Object visitNoScoping() -> visitNoScoping
com.google.inject.spi.DefaultBindingTargetVisitor -> com.google.inject.spi.DefaultBindingTargetVisitor:
    java.lang.Object visitOther(com.google.inject.Binding) -> visitOther
    java.lang.Object visit(com.google.inject.spi.InstanceBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderInstanceBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderKeyBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.LinkedKeyBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ExposedBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.UntargettedBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ConstructorBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ConvertedConstantBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderBinding) -> visit
com.google.inject.spi.DefaultElementVisitor -> com.google.inject.spi.DefaultElementVisitor:
    java.lang.Object visitOther(com.google.inject.spi.Element) -> visitOther
    java.lang.Object visit(com.google.inject.spi.Message) -> visit
    java.lang.Object visit(com.google.inject.Binding) -> visit
    java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.TypeConverterBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderLookup) -> visit
    java.lang.Object visit(com.google.inject.spi.InjectionRequest) -> visit
    java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    java.lang.Object visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    java.lang.Object visit(com.google.inject.spi.TypeListenerBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.DisableCircularProxiesOption) -> visit
    java.lang.Object visit(com.google.inject.spi.RequireExplicitBindingsOption) -> visit
com.google.inject.spi.Dependency -> com.google.inject.spi.Dependency:
    com.google.inject.spi.InjectionPoint injectionPoint -> injectionPoint
    com.google.inject.Key key -> key
    boolean nullable -> nullable
    int parameterIndex -> parameterIndex
    com.google.inject.spi.Dependency get(com.google.inject.Key) -> get
    java.util.Set forInjectionPoints(java.util.Set) -> forInjectionPoints
    com.google.inject.Key getKey() -> getKey
    boolean isNullable() -> isNullable
    com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    int getParameterIndex() -> getParameterIndex
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.inject.spi.DisableCircularProxiesOption -> com.google.inject.spi.DisableCircularProxiesOption:
    java.lang.Object source -> source
    java.lang.Object getSource() -> getSource
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
com.google.inject.spi.Element -> com.google.inject.spi.Element:
    java.lang.Object getSource() -> getSource
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.ElementVisitor -> com.google.inject.spi.ElementVisitor:
    java.lang.Object visit(com.google.inject.Binding) -> visit
    java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.TypeConverterBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.InjectionRequest) -> visit
    java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderLookup) -> visit
    java.lang.Object visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    java.lang.Object visit(com.google.inject.spi.Message) -> visit
    java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    java.lang.Object visit(com.google.inject.spi.TypeListenerBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.RequireExplicitBindingsOption) -> visit
    java.lang.Object visit(com.google.inject.spi.DisableCircularProxiesOption) -> visit
com.google.inject.spi.Elements -> com.google.inject.spi.Elements:
    com.google.inject.spi.BindingTargetVisitor GET_INSTANCE_VISITOR -> GET_INSTANCE_VISITOR
    java.util.List getElements(com.google.inject.Module[]) -> getElements
    java.util.List getElements(com.google.inject.Stage,com.google.inject.Module[]) -> getElements
    java.util.List getElements(java.lang.Iterable) -> getElements
    java.util.List getElements(com.google.inject.Stage,java.lang.Iterable) -> getElements
    com.google.inject.Module getModule(java.lang.Iterable) -> getModule
    com.google.inject.spi.BindingTargetVisitor getInstanceVisitor() -> getInstanceVisitor
com.google.inject.spi.Elements$1 -> com.google.inject.spi.Elements$1:
    java.lang.Object visit(com.google.inject.spi.InstanceBinding) -> visit
    java.lang.Object visitOther(com.google.inject.Binding) -> visitOther
com.google.inject.spi.Elements$2 -> com.google.inject.spi.Elements$2:
    java.lang.Iterable val$elements -> val$elements
    void configure(com.google.inject.Binder) -> configure
com.google.inject.spi.Elements$RecordingBinder -> com.google.inject.spi.Elements$RecordingBinder:
    com.google.inject.Stage stage -> stage
    java.util.Set modules -> modules
    java.util.List elements -> elements
    java.lang.Object source -> source
    com.google.inject.internal.util.$SourceProvider sourceProvider -> sourceProvider
    com.google.inject.spi.Elements$RecordingBinder parent -> parent
    com.google.inject.internal.PrivateElementsImpl privateElements -> privateElements
    void bindScope(java.lang.Class,com.google.inject.Scope) -> bindScope
    void requestInjection(java.lang.Object) -> requestInjection
    void requestInjection(com.google.inject.TypeLiteral,java.lang.Object) -> requestInjection
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener) -> bindListener
    void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
    void install(com.google.inject.Module) -> install
    com.google.inject.Stage currentStage() -> currentStage
    void addError(java.lang.String,java.lang.Object[]) -> addError
    void addError(java.lang.Throwable) -> addError
    void addError(com.google.inject.spi.Message) -> addError
    com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.Key) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class) -> bind
    com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant() -> bindConstant
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToTypes
    com.google.inject.spi.Elements$RecordingBinder withSource(java.lang.Object) -> withSource
    com.google.inject.spi.Elements$RecordingBinder skipSources(java.lang.Class[]) -> skipSources
    com.google.inject.PrivateBinder newPrivateBinder() -> newPrivateBinder
    void disableCircularProxies() -> disableCircularProxies
    void requireExplicitBindings() -> requireExplicitBindings
    void expose(com.google.inject.Key) -> expose
    com.google.inject.binder.AnnotatedElementBuilder expose(java.lang.Class) -> expose
    com.google.inject.binder.AnnotatedElementBuilder expose(com.google.inject.TypeLiteral) -> expose
    com.google.inject.binder.AnnotatedElementBuilder exposeInternal(com.google.inject.Key) -> exposeInternal
    java.lang.Object getSource() -> getSource
    java.lang.String toString() -> toString
    com.google.inject.Binder skipSources(java.lang.Class[]) -> skipSources
    com.google.inject.Binder withSource(java.lang.Object) -> withSource
    com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key) -> bind
    com.google.inject.PrivateBinder skipSources(java.lang.Class[]) -> skipSources
    com.google.inject.PrivateBinder withSource(java.lang.Object) -> withSource
    java.util.List access$100(com.google.inject.spi.Elements$RecordingBinder) -> access$100
com.google.inject.spi.Elements$RecordingBinder$1 -> com.google.inject.spi.Elements$RecordingBinder$1:
    com.google.inject.spi.Elements$RecordingBinder this$0 -> this$0
    void annotatedWith(java.lang.Class) -> annotatedWith
    void annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
com.google.inject.spi.ExposedBinding -> com.google.inject.spi.ExposedBinding:
    com.google.inject.spi.PrivateElements getPrivateElements() -> getPrivateElements
    void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.HasDependencies -> com.google.inject.spi.HasDependencies:
    java.util.Set getDependencies() -> getDependencies
com.google.inject.spi.InjectionListener -> com.google.inject.spi.InjectionListener:
    void afterInjection(java.lang.Object) -> afterInjection
com.google.inject.spi.InjectionPoint -> com.google.inject.spi.InjectionPoint:
    java.util.logging.Logger logger -> logger
    boolean optional -> optional
    java.lang.reflect.Member member -> member
    com.google.inject.TypeLiteral declaringType -> declaringType
    com.google.inject.internal.util.$ImmutableList dependencies -> dependencies
    com.google.inject.internal.util.$ImmutableList forMember(java.lang.reflect.Member,com.google.inject.TypeLiteral,java.lang.annotation.Annotation[][]) -> forMember
    com.google.inject.spi.Dependency newDependency(com.google.inject.Key,boolean,int) -> newDependency
    java.lang.reflect.Member getMember() -> getMember
    java.util.List getDependencies() -> getDependencies
    boolean isOptional() -> isOptional
    boolean isToolable() -> isToolable
    com.google.inject.TypeLiteral getDeclaringType() -> getDeclaringType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.inject.spi.InjectionPoint forConstructor(java.lang.reflect.Constructor) -> forConstructor
    com.google.inject.spi.InjectionPoint forConstructor(java.lang.reflect.Constructor,com.google.inject.TypeLiteral) -> forConstructor
    com.google.inject.spi.InjectionPoint forConstructorOf(com.google.inject.TypeLiteral) -> forConstructorOf
    com.google.inject.spi.InjectionPoint forConstructorOf(java.lang.Class) -> forConstructorOf
    java.util.Set forStaticMethodsAndFields(com.google.inject.TypeLiteral) -> forStaticMethodsAndFields
    java.util.Set forStaticMethodsAndFields(java.lang.Class) -> forStaticMethodsAndFields
    java.util.Set forInstanceMethodsAndFields(com.google.inject.TypeLiteral) -> forInstanceMethodsAndFields
    java.util.Set forInstanceMethodsAndFields(java.lang.Class) -> forInstanceMethodsAndFields
    boolean checkForMisplacedBindingAnnotations(java.lang.reflect.Member,com.google.inject.internal.Errors) -> checkForMisplacedBindingAnnotations
    java.lang.annotation.Annotation getAtInject(java.lang.reflect.AnnotatedElement) -> getAtInject
    java.util.Set getInjectionPoints(com.google.inject.TypeLiteral,boolean,com.google.inject.internal.Errors) -> getInjectionPoints
    boolean isValidMethod(com.google.inject.spi.InjectionPoint$InjectableMethod,com.google.inject.internal.Errors) -> isValidMethod
    java.util.List hierarchyFor(com.google.inject.TypeLiteral) -> hierarchyFor
    boolean overrides(java.lang.reflect.Method,java.lang.reflect.Method) -> overrides
    boolean access$000(java.lang.reflect.Method,java.lang.reflect.Method) -> access$000
com.google.inject.spi.InjectionPoint$InjectableField -> com.google.inject.spi.InjectionPoint$InjectableField:
    java.lang.reflect.Field field -> field
    com.google.inject.spi.InjectionPoint toInjectionPoint() -> toInjectionPoint
com.google.inject.spi.InjectionPoint$InjectableMember -> com.google.inject.spi.InjectionPoint$InjectableMember:
    com.google.inject.TypeLiteral declaringType -> declaringType
    boolean optional -> optional
    boolean jsr330 -> jsr330
    com.google.inject.spi.InjectionPoint$InjectableMember previous -> previous
    com.google.inject.spi.InjectionPoint$InjectableMember next -> next
    com.google.inject.spi.InjectionPoint toInjectionPoint() -> toInjectionPoint
com.google.inject.spi.InjectionPoint$InjectableMembers -> com.google.inject.spi.InjectionPoint$InjectableMembers:
    com.google.inject.spi.InjectionPoint$InjectableMember head -> head
    com.google.inject.spi.InjectionPoint$InjectableMember tail -> tail
    void add(com.google.inject.spi.InjectionPoint$InjectableMember) -> add
    void remove(com.google.inject.spi.InjectionPoint$InjectableMember) -> remove
    boolean isEmpty() -> isEmpty
com.google.inject.spi.InjectionPoint$InjectableMethod -> com.google.inject.spi.InjectionPoint$InjectableMethod:
    java.lang.reflect.Method method -> method
    boolean overrodeGuiceInject -> overrodeGuiceInject
    com.google.inject.spi.InjectionPoint toInjectionPoint() -> toInjectionPoint
    boolean isFinal() -> isFinal
com.google.inject.spi.InjectionPoint$OverrideIndex -> com.google.inject.spi.InjectionPoint$OverrideIndex:
    com.google.inject.spi.InjectionPoint$InjectableMembers injectableMembers -> injectableMembers
    java.util.Map bySignature -> bySignature
    com.google.inject.spi.InjectionPoint$Position position -> position
    java.lang.reflect.Method lastMethod -> lastMethod
    com.google.inject.spi.InjectionPoint$Signature lastSignature -> lastSignature
    boolean removeIfOverriddenBy(java.lang.reflect.Method,boolean,com.google.inject.spi.InjectionPoint$InjectableMethod) -> removeIfOverriddenBy
    void add(com.google.inject.spi.InjectionPoint$InjectableMethod) -> add
com.google.inject.spi.InjectionPoint$Position -> com.google.inject.spi.InjectionPoint$Position:
    com.google.inject.spi.InjectionPoint$Position TOP -> TOP
    com.google.inject.spi.InjectionPoint$Position MIDDLE -> MIDDLE
    com.google.inject.spi.InjectionPoint$Position BOTTOM -> BOTTOM
    com.google.inject.spi.InjectionPoint$Position[] $VALUES -> $VALUES
    com.google.inject.spi.InjectionPoint$Position[] values() -> values
    com.google.inject.spi.InjectionPoint$Position valueOf(java.lang.String) -> valueOf
com.google.inject.spi.InjectionPoint$Signature -> com.google.inject.spi.InjectionPoint$Signature:
    java.lang.String name -> name
    java.lang.Class[] parameterTypes -> parameterTypes
    int hash -> hash
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.inject.spi.InjectionRequest -> com.google.inject.spi.InjectionRequest:
    java.lang.Object source -> source
    com.google.inject.TypeLiteral type -> type
    java.lang.Object instance -> instance
    java.lang.Object getSource() -> getSource
    java.lang.Object getInstance() -> getInstance
    com.google.inject.TypeLiteral getType() -> getType
    java.util.Set getInjectionPoints() -> getInjectionPoints
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.InstanceBinding -> com.google.inject.spi.InstanceBinding:
    java.lang.Object getInstance() -> getInstance
    java.util.Set getInjectionPoints() -> getInjectionPoints
com.google.inject.spi.LinkedKeyBinding -> com.google.inject.spi.LinkedKeyBinding:
    com.google.inject.Key getLinkedKey() -> getLinkedKey
com.google.inject.spi.MembersInjectorLookup -> com.google.inject.spi.MembersInjectorLookup:
    java.lang.Object source -> source
    com.google.inject.TypeLiteral type -> type
    com.google.inject.MembersInjector delegate -> delegate
    java.lang.Object getSource() -> getSource
    com.google.inject.TypeLiteral getType() -> getType
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    void initializeDelegate(com.google.inject.MembersInjector) -> initializeDelegate
    void applyTo(com.google.inject.Binder) -> applyTo
    com.google.inject.MembersInjector getDelegate() -> getDelegate
    com.google.inject.MembersInjector getMembersInjector() -> getMembersInjector
    com.google.inject.MembersInjector access$000(com.google.inject.spi.MembersInjectorLookup) -> access$000
    com.google.inject.TypeLiteral access$100(com.google.inject.spi.MembersInjectorLookup) -> access$100
com.google.inject.spi.MembersInjectorLookup$1 -> com.google.inject.spi.MembersInjectorLookup$1:
    com.google.inject.spi.MembersInjectorLookup this$0 -> this$0
    void injectMembers(java.lang.Object) -> injectMembers
    java.lang.String toString() -> toString
com.google.inject.spi.Message -> com.google.inject.spi.Message:
    java.lang.String message -> message
    java.lang.Throwable cause -> cause
    java.util.List sources -> sources
    long serialVersionUID -> serialVersionUID
    java.lang.String getSource() -> getSource
    java.util.List getSources() -> getSources
    java.lang.String getMessage() -> getMessage
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    java.lang.Throwable getCause() -> getCause
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object getSource() -> getSource
com.google.inject.spi.PrivateElements -> com.google.inject.spi.PrivateElements:
    java.util.List getElements() -> getElements
    com.google.inject.Injector getInjector() -> getInjector
    java.util.Set getExposedKeys() -> getExposedKeys
    java.lang.Object getExposedSource(com.google.inject.Key) -> getExposedSource
com.google.inject.spi.ProviderBinding -> com.google.inject.spi.ProviderBinding:
    com.google.inject.Key getProvidedKey() -> getProvidedKey
com.google.inject.spi.ProviderInstanceBinding -> com.google.inject.spi.ProviderInstanceBinding:
    com.google.inject.Provider getProviderInstance() -> getProviderInstance
    java.util.Set getInjectionPoints() -> getInjectionPoints
com.google.inject.spi.ProviderKeyBinding -> com.google.inject.spi.ProviderKeyBinding:
    com.google.inject.Key getProviderKey() -> getProviderKey
com.google.inject.spi.ProviderLookup -> com.google.inject.spi.ProviderLookup:
    java.lang.Object source -> source
    com.google.inject.Key key -> key
    com.google.inject.Provider delegate -> delegate
    java.lang.Object getSource() -> getSource
    com.google.inject.Key getKey() -> getKey
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    void initializeDelegate(com.google.inject.Provider) -> initializeDelegate
    void applyTo(com.google.inject.Binder) -> applyTo
    com.google.inject.Provider getDelegate() -> getDelegate
    com.google.inject.Provider getProvider() -> getProvider
    com.google.inject.Provider access$000(com.google.inject.spi.ProviderLookup) -> access$000
    com.google.inject.Key access$100(com.google.inject.spi.ProviderLookup) -> access$100
com.google.inject.spi.ProviderLookup$1 -> com.google.inject.spi.ProviderLookup$1:
    com.google.inject.spi.ProviderLookup this$0 -> this$0
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.inject.spi.ProviderWithDependencies -> com.google.inject.spi.ProviderWithDependencies:
com.google.inject.spi.ProviderWithExtensionVisitor -> com.google.inject.spi.ProviderWithExtensionVisitor:
    java.lang.Object acceptExtensionVisitor(com.google.inject.spi.BindingTargetVisitor,com.google.inject.spi.ProviderInstanceBinding) -> acceptExtensionVisitor
com.google.inject.spi.RequireExplicitBindingsOption -> com.google.inject.spi.RequireExplicitBindingsOption:
    java.lang.Object source -> source
    java.lang.Object getSource() -> getSource
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
com.google.inject.spi.ScopeBinding -> com.google.inject.spi.ScopeBinding:
    java.lang.Object source -> source
    java.lang.Class annotationType -> annotationType
    com.google.inject.Scope scope -> scope
    java.lang.Object getSource() -> getSource
    java.lang.Class getAnnotationType() -> getAnnotationType
    com.google.inject.Scope getScope() -> getScope
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.StaticInjectionRequest -> com.google.inject.spi.StaticInjectionRequest:
    java.lang.Object source -> source
    java.lang.Class type -> type
    java.lang.Object getSource() -> getSource
    java.lang.Class getType() -> getType
    java.util.Set getInjectionPoints() -> getInjectionPoints
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
com.google.inject.spi.Toolable -> com.google.inject.spi.Toolable:
com.google.inject.spi.TypeConverter -> com.google.inject.spi.TypeConverter:
    java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
com.google.inject.spi.TypeConverterBinding -> com.google.inject.spi.TypeConverterBinding:
    java.lang.Object source -> source
    com.google.inject.matcher.Matcher typeMatcher -> typeMatcher
    com.google.inject.spi.TypeConverter typeConverter -> typeConverter
    java.lang.Object getSource() -> getSource
    com.google.inject.matcher.Matcher getTypeMatcher() -> getTypeMatcher
    com.google.inject.spi.TypeConverter getTypeConverter() -> getTypeConverter
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    void applyTo(com.google.inject.Binder) -> applyTo
    java.lang.String toString() -> toString
com.google.inject.spi.TypeEncounter -> com.google.inject.spi.TypeEncounter:
    void addError(java.lang.String,java.lang.Object[]) -> addError
    void addError(java.lang.Throwable) -> addError
    void addError(com.google.inject.spi.Message) -> addError
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    void register(com.google.inject.MembersInjector) -> register
    void register(com.google.inject.spi.InjectionListener) -> register
com.google.inject.spi.TypeListener -> com.google.inject.spi.TypeListener:
    void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
com.google.inject.spi.TypeListenerBinding -> com.google.inject.spi.TypeListenerBinding:
    java.lang.Object source -> source
    com.google.inject.matcher.Matcher typeMatcher -> typeMatcher
    com.google.inject.spi.TypeListener listener -> listener
    com.google.inject.spi.TypeListener getListener() -> getListener
    com.google.inject.matcher.Matcher getTypeMatcher() -> getTypeMatcher
    java.lang.Object getSource() -> getSource
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.UntargettedBinding -> com.google.inject.spi.UntargettedBinding:
com.google.inject.util.Modules -> com.google.inject.util.Modules:
    com.google.inject.Module EMPTY_MODULE -> EMPTY_MODULE
    com.google.inject.util.Modules$OverriddenModuleBuilder override(com.google.inject.Module[]) -> override
    com.google.inject.util.Modules$OverriddenModuleBuilder override(java.lang.Iterable) -> override
    com.google.inject.Module combine(com.google.inject.Module[]) -> combine
    com.google.inject.Module combine(java.lang.Iterable) -> combine
com.google.inject.util.Modules$1 -> com.google.inject.util.Modules$1:
    void configure(com.google.inject.Binder) -> configure
com.google.inject.util.Modules$2 -> com.google.inject.util.Modules$2:
    java.util.Set val$modulesSet -> val$modulesSet
    void configure(com.google.inject.Binder) -> configure
com.google.inject.util.Modules$ModuleWriter -> com.google.inject.util.Modules$ModuleWriter:
    com.google.inject.Binder binder -> binder
    java.lang.Void visitOther(com.google.inject.spi.Element) -> visitOther
    void writeAll(java.lang.Iterable) -> writeAll
    java.lang.Object visitOther(com.google.inject.spi.Element) -> visitOther
com.google.inject.util.Modules$OverriddenModuleBuilder -> com.google.inject.util.Modules$OverriddenModuleBuilder:
    com.google.inject.Module with(com.google.inject.Module[]) -> with
    com.google.inject.Module with(java.lang.Iterable) -> with
com.google.inject.util.Modules$RealOverriddenModuleBuilder -> com.google.inject.util.Modules$RealOverriddenModuleBuilder:
    com.google.inject.internal.util.$ImmutableSet baseModules -> baseModules
    com.google.inject.Module with(com.google.inject.Module[]) -> with
    com.google.inject.Module with(java.lang.Iterable) -> with
    com.google.inject.internal.util.$ImmutableSet access$100(com.google.inject.util.Modules$RealOverriddenModuleBuilder) -> access$100
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1:
    java.lang.Iterable val$overrides -> val$overrides
    com.google.inject.util.Modules$RealOverriddenModuleBuilder this$0 -> this$0
    void configure() -> configure
    com.google.inject.Scope getScopeInstanceOrNull(com.google.inject.Binding) -> getScopeInstanceOrNull
    com.google.inject.Scope access$200(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1,com.google.inject.Binding) -> access$200
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$1 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$1:
    java.util.Set val$overriddenKeys -> val$overriddenKeys
    java.util.Set val$overridesScopeAnnotations -> val$overridesScopeAnnotations
    com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1 -> this$1
    java.lang.Void visit(com.google.inject.Binding) -> visit
    java.lang.Void visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Void visit(com.google.inject.spi.PrivateElements) -> visit
    java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Object visit(com.google.inject.Binding) -> visit
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2:
    java.util.Set val$overriddenKeys -> val$overriddenKeys
    java.util.Map val$scopeInstancesInUse -> val$scopeInstancesInUse
    java.util.List val$scopeBindings -> val$scopeBindings
    com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1 -> this$1
    java.lang.Void visit(com.google.inject.Binding) -> visit
    void rewrite(com.google.inject.Binder,com.google.inject.spi.PrivateElements,java.util.Set) -> rewrite
    java.lang.Void visit(com.google.inject.spi.PrivateElements) -> visit
    java.lang.Void visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Object visit(com.google.inject.Binding) -> visit
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3:
    java.util.Set val$overridesScopeAnnotations -> val$overridesScopeAnnotations
    java.util.Map val$scopeInstancesInUse -> val$scopeInstancesInUse
    com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1 -> this$1
    java.lang.Void visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$4 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$4:
    com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1 -> this$1
    com.google.inject.Scope visitScope(com.google.inject.Scope) -> visitScope
    java.lang.Object visitScope(com.google.inject.Scope) -> visitScope
com.google.inject.util.Node -> com.google.inject.util.Node:
    com.google.inject.Key key -> key
    int appliedScope -> appliedScope
    com.google.inject.util.Node effectiveScopeDependency -> effectiveScopeDependency
    int effectiveScope -> effectiveScope
    java.lang.Class appliedScopeAnnotation -> appliedScopeAnnotation
    java.util.Set users -> users
    void setScopeRank(int,java.lang.Class) -> setScopeRank
    void setEffectiveScope(int,com.google.inject.util.Node) -> setEffectiveScope
    void pushScopeToUsers() -> pushScopeToUsers
    boolean isScopedCorrectly() -> isScopedCorrectly
    boolean isEffectiveScopeAppliedScope() -> isEffectiveScopeAppliedScope
    com.google.inject.util.Node effectiveScopeDependency() -> effectiveScopeDependency
    void addUser(com.google.inject.util.Node) -> addUser
    java.lang.String toString() -> toString
com.google.inject.util.Providers -> com.google.inject.util.Providers:
    com.google.inject.Provider of(java.lang.Object) -> of
    com.google.inject.Provider guicify(javax.inject.Provider) -> guicify
com.google.inject.util.Providers$1 -> com.google.inject.util.Providers$1:
    java.lang.Object val$instance -> val$instance
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.inject.util.Providers$2 -> com.google.inject.util.Providers$2:
    javax.inject.Provider val$delegate -> val$delegate
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.inject.util.Providers$3 -> com.google.inject.util.Providers$3:
    javax.inject.Provider val$delegate -> val$delegate
    java.util.Set val$dependencies -> val$dependencies
    void initialize(com.google.inject.Injector) -> initialize
    java.util.Set getDependencies() -> getDependencies
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.inject.util.Types -> com.google.inject.util.Types:
    java.lang.reflect.ParameterizedType newParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedType
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.ParameterizedType listOf(java.lang.reflect.Type) -> listOf
    java.lang.reflect.ParameterizedType setOf(java.lang.reflect.Type) -> setOf
    java.lang.reflect.ParameterizedType mapOf(java.lang.reflect.Type,java.lang.reflect.Type) -> mapOf
    java.lang.reflect.ParameterizedType providerOf(java.lang.reflect.Type) -> providerOf
com.google.zxing.BarcodeFormat -> com.google.zxing.BarcodeFormat:
    com.google.zxing.BarcodeFormat AZTEC -> AZTEC
    com.google.zxing.BarcodeFormat CODABAR -> CODABAR
    com.google.zxing.BarcodeFormat CODE_39 -> CODE_39
    com.google.zxing.BarcodeFormat CODE_93 -> CODE_93
    com.google.zxing.BarcodeFormat CODE_128 -> CODE_128
    com.google.zxing.BarcodeFormat DATA_MATRIX -> DATA_MATRIX
    com.google.zxing.BarcodeFormat EAN_8 -> EAN_8
    com.google.zxing.BarcodeFormat EAN_13 -> EAN_13
    com.google.zxing.BarcodeFormat ITF -> ITF
    com.google.zxing.BarcodeFormat MAXICODE -> MAXICODE
    com.google.zxing.BarcodeFormat PDF_417 -> PDF_417
    com.google.zxing.BarcodeFormat QR_CODE -> QR_CODE
    com.google.zxing.BarcodeFormat RSS_14 -> RSS_14
    com.google.zxing.BarcodeFormat RSS_EXPANDED -> RSS_EXPANDED
    com.google.zxing.BarcodeFormat UPC_A -> UPC_A
    com.google.zxing.BarcodeFormat UPC_E -> UPC_E
    com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.BarcodeFormat[] $VALUES -> $VALUES
    com.google.zxing.BarcodeFormat[] values() -> values
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.Binarizer:
    com.google.zxing.LuminanceSource source -> source
    com.google.zxing.LuminanceSource getLuminanceSource() -> getLuminanceSource
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.google.zxing.BinaryBitmap -> com.google.zxing.BinaryBitmap:
    com.google.zxing.Binarizer binarizer -> binarizer
    com.google.zxing.common.BitMatrix matrix -> matrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.BinaryBitmap crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.BinaryBitmap rotateCounterClockwise45() -> rotateCounterClockwise45
    java.lang.String toString() -> toString
com.google.zxing.ChecksumException -> com.google.zxing.ChecksumException:
    com.google.zxing.ChecksumException instance -> instance
    com.google.zxing.ChecksumException getChecksumInstance() -> getChecksumInstance
com.google.zxing.DecodeHintType -> com.google.zxing.DecodeHintType:
    com.google.zxing.DecodeHintType OTHER -> OTHER
    com.google.zxing.DecodeHintType PURE_BARCODE -> PURE_BARCODE
    com.google.zxing.DecodeHintType POSSIBLE_FORMATS -> POSSIBLE_FORMATS
    com.google.zxing.DecodeHintType TRY_HARDER -> TRY_HARDER
    com.google.zxing.DecodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> ALLOWED_LENGTHS
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> ASSUME_CODE_39_CHECK_DIGIT
    com.google.zxing.DecodeHintType ASSUME_GS1 -> ASSUME_GS1
    com.google.zxing.DecodeHintType RETURN_CODABAR_START_END -> RETURN_CODABAR_START_END
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> NEED_RESULT_POINT_CALLBACK
    com.google.zxing.DecodeHintType ALLOWED_EAN_EXTENSIONS -> ALLOWED_EAN_EXTENSIONS
    java.lang.Class valueType -> valueType
    com.google.zxing.DecodeHintType[] $VALUES -> $VALUES
    com.google.zxing.DecodeHintType[] values() -> values
    com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
    java.lang.Class getValueType() -> getValueType
com.google.zxing.Dimension -> com.google.zxing.Dimension:
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.EncodeHintType -> com.google.zxing.EncodeHintType:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> ERROR_CORRECTION
    com.google.zxing.EncodeHintType CHARACTER_SET -> CHARACTER_SET
    com.google.zxing.EncodeHintType DATA_MATRIX_SHAPE -> DATA_MATRIX_SHAPE
    com.google.zxing.EncodeHintType MIN_SIZE -> MIN_SIZE
    com.google.zxing.EncodeHintType MAX_SIZE -> MAX_SIZE
    com.google.zxing.EncodeHintType MARGIN -> MARGIN
    com.google.zxing.EncodeHintType PDF417_COMPACT -> PDF417_COMPACT
    com.google.zxing.EncodeHintType PDF417_COMPACTION -> PDF417_COMPACTION
    com.google.zxing.EncodeHintType PDF417_DIMENSIONS -> PDF417_DIMENSIONS
    com.google.zxing.EncodeHintType AZTEC_LAYERS -> AZTEC_LAYERS
    com.google.zxing.EncodeHintType[] $VALUES -> $VALUES
    com.google.zxing.EncodeHintType[] values() -> values
    com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.google.zxing.FormatException:
    com.google.zxing.FormatException instance -> instance
    com.google.zxing.FormatException getFormatInstance() -> getFormatInstance
com.google.zxing.InvertedLuminanceSource -> com.google.zxing.InvertedLuminanceSource:
    com.google.zxing.LuminanceSource delegate -> delegate
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource invert() -> invert
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
com.google.zxing.LuminanceSource -> com.google.zxing.LuminanceSource:
    int width -> width
    int height -> height
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    boolean isRotateSupported() -> isRotateSupported
    com.google.zxing.LuminanceSource invert() -> invert
    com.google.zxing.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    com.google.zxing.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
    java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.MultiFormatReader:
    java.util.Map hints -> hints
    com.google.zxing.Reader[] readers -> readers
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> decodeWithState
    void setHints(java.util.Map) -> setHints
    void reset() -> reset
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> decodeInternal
com.google.zxing.MultiFormatWriter -> com.google.zxing.MultiFormatWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.MultiFormatWriter$1 -> com.google.zxing.MultiFormatWriter$1:
    int[] $SwitchMap$com$google$zxing$BarcodeFormat -> $SwitchMap$com$google$zxing$BarcodeFormat
com.google.zxing.NotFoundException -> com.google.zxing.NotFoundException:
    com.google.zxing.NotFoundException instance -> instance
    com.google.zxing.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.google.zxing.PlanarYUVLuminanceSource -> com.google.zxing.PlanarYUVLuminanceSource:
    int THUMBNAIL_SCALE_FACTOR -> THUMBNAIL_SCALE_FACTOR
    byte[] yuvData -> yuvData
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
    int[] renderThumbnail() -> renderThumbnail
    int getThumbnailWidth() -> getThumbnailWidth
    int getThumbnailHeight() -> getThumbnailHeight
    void reverseHorizontal(int,int) -> reverseHorizontal
com.google.zxing.RGBLuminanceSource -> com.google.zxing.RGBLuminanceSource:
    byte[] luminances -> luminances
    int dataWidth -> dataWidth
    int dataHeight -> dataHeight
    int left -> left
    int top -> top
    byte[] getRow(int,byte[]) -> getRow
    byte[] getMatrix() -> getMatrix
    boolean isCropSupported() -> isCropSupported
    com.google.zxing.LuminanceSource crop(int,int,int,int) -> crop
com.google.zxing.Reader -> com.google.zxing.Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.ReaderException -> com.google.zxing.ReaderException:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.Result:
    java.lang.String text -> text
    byte[] rawBytes -> rawBytes
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    com.google.zxing.BarcodeFormat format -> format
    java.util.Map resultMetadata -> resultMetadata
    long timestamp -> timestamp
    java.lang.String getText() -> getText
    byte[] getRawBytes() -> getRawBytes
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.util.Map getResultMetadata() -> getResultMetadata
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> putMetadata
    void putAllMetadata(java.util.Map) -> putAllMetadata
    void addResultPoints(com.google.zxing.ResultPoint[]) -> addResultPoints
    long getTimestamp() -> getTimestamp
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.ResultMetadataType:
    com.google.zxing.ResultMetadataType OTHER -> OTHER
    com.google.zxing.ResultMetadataType ORIENTATION -> ORIENTATION
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> BYTE_SEGMENTS
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> ERROR_CORRECTION_LEVEL
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> ISSUE_NUMBER
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> SUGGESTED_PRICE
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> POSSIBLE_COUNTRY
    com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION -> UPC_EAN_EXTENSION
    com.google.zxing.ResultMetadataType PDF417_EXTRA_METADATA -> PDF417_EXTRA_METADATA
    com.google.zxing.ResultMetadataType STRUCTURED_APPEND_SEQUENCE -> STRUCTURED_APPEND_SEQUENCE
    com.google.zxing.ResultMetadataType STRUCTURED_APPEND_PARITY -> STRUCTURED_APPEND_PARITY
    com.google.zxing.ResultMetadataType[] $VALUES -> $VALUES
    com.google.zxing.ResultMetadataType[] values() -> values
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.ResultPoint:
    float x -> x
    float y -> y
    float getX() -> getX
    float getY() -> getY
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> orderBestPatterns
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> crossProductZ
com.google.zxing.ResultPointCallback -> com.google.zxing.ResultPointCallback:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> foundPossibleResultPoint
com.google.zxing.Writer -> com.google.zxing.Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
com.google.zxing.WriterException -> com.google.zxing.WriterException:
com.google.zxing.aztec.AztecDetectorResult -> com.google.zxing.aztec.AztecDetectorResult:
    boolean compact -> compact
    int nbDatablocks -> nbDatablocks
    int nbLayers -> nbLayers
    int getNbLayers() -> getNbLayers
    int getNbDatablocks() -> getNbDatablocks
    boolean isCompact() -> isCompact
com.google.zxing.aztec.AztecReader -> com.google.zxing.aztec.AztecReader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.aztec.AztecWriter -> com.google.zxing.aztec.AztecWriter:
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.nio.charset.Charset,int,int) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.aztec.encoder.AztecCode,int,int) -> renderResult
com.google.zxing.aztec.decoder.Decoder -> com.google.zxing.aztec.decoder.Decoder:
    java.lang.String[] UPPER_TABLE -> UPPER_TABLE
    java.lang.String[] LOWER_TABLE -> LOWER_TABLE
    java.lang.String[] MIXED_TABLE -> MIXED_TABLE
    java.lang.String[] PUNCT_TABLE -> PUNCT_TABLE
    java.lang.String[] DIGIT_TABLE -> DIGIT_TABLE
    com.google.zxing.aztec.AztecDetectorResult ddata -> ddata
    com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult) -> decode
    java.lang.String highLevelDecode(boolean[]) -> highLevelDecode
    java.lang.String getEncodedData(boolean[]) -> getEncodedData
    com.google.zxing.aztec.decoder.Decoder$Table getTable(char) -> getTable
    java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int) -> getCharacter
    boolean[] correctBits(boolean[]) -> correctBits
    boolean[] extractBits(com.google.zxing.common.BitMatrix) -> extractBits
    int readCode(boolean[],int,int) -> readCode
    int totalBitsInLayer(int,boolean) -> totalBitsInLayer
com.google.zxing.aztec.decoder.Decoder$1 -> com.google.zxing.aztec.decoder.Decoder$1:
    int[] $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table -> $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table
com.google.zxing.aztec.decoder.Decoder$Table -> com.google.zxing.aztec.decoder.Decoder$Table:
    com.google.zxing.aztec.decoder.Decoder$Table UPPER -> UPPER
    com.google.zxing.aztec.decoder.Decoder$Table LOWER -> LOWER
    com.google.zxing.aztec.decoder.Decoder$Table MIXED -> MIXED
    com.google.zxing.aztec.decoder.Decoder$Table DIGIT -> DIGIT
    com.google.zxing.aztec.decoder.Decoder$Table PUNCT -> PUNCT
    com.google.zxing.aztec.decoder.Decoder$Table BINARY -> BINARY
    com.google.zxing.aztec.decoder.Decoder$Table[] $VALUES -> $VALUES
    com.google.zxing.aztec.decoder.Decoder$Table[] values() -> values
    com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
com.google.zxing.aztec.detector.Detector -> com.google.zxing.aztec.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    boolean compact -> compact
    int nbLayers -> nbLayers
    int nbDataBlocks -> nbDataBlocks
    int nbCenterLayers -> nbCenterLayers
    int shift -> shift
    int[] EXPECTED_CORNER_BITS -> EXPECTED_CORNER_BITS
    com.google.zxing.aztec.AztecDetectorResult detect() -> detect
    com.google.zxing.aztec.AztecDetectorResult detect(boolean) -> detect
    void extractParameters(com.google.zxing.ResultPoint[]) -> extractParameters
    int getRotation(int[],int) -> getRotation
    int getCorrectedParameterData(long,boolean) -> getCorrectedParameterData
    com.google.zxing.ResultPoint[] getBullsEyeCorners(com.google.zxing.aztec.detector.Detector$Point) -> getBullsEyeCorners
    com.google.zxing.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.ResultPoint[]) -> getMatrixCornerPoints
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> sampleGrid
    int sampleLine(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> sampleLine
    boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> getColor
    com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    com.google.zxing.ResultPoint[] expandSquare(com.google.zxing.ResultPoint[],float,float) -> expandSquare
    boolean isValid(int,int) -> isValid
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point) -> distance
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    int getDimension() -> getDimension
com.google.zxing.aztec.detector.Detector$Point -> com.google.zxing.aztec.detector.Detector$Point:
    int x -> x
    int y -> y
    com.google.zxing.ResultPoint toResultPoint() -> toResultPoint
    int getX() -> getX
    int getY() -> getY
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.AztecCode -> com.google.zxing.aztec.encoder.AztecCode:
    boolean compact -> compact
    int size -> size
    int layers -> layers
    int codeWords -> codeWords
    com.google.zxing.common.BitMatrix matrix -> matrix
    boolean isCompact() -> isCompact
    void setCompact(boolean) -> setCompact
    int getSize() -> getSize
    void setSize(int) -> setSize
    int getLayers() -> getLayers
    void setLayers(int) -> setLayers
    int getCodeWords() -> getCodeWords
    void setCodeWords(int) -> setCodeWords
    com.google.zxing.common.BitMatrix getMatrix() -> getMatrix
    void setMatrix(com.google.zxing.common.BitMatrix) -> setMatrix
com.google.zxing.aztec.encoder.BinaryShiftToken -> com.google.zxing.aztec.encoder.BinaryShiftToken:
    short binaryShiftStart -> binaryShiftStart
    short binaryShiftByteCount -> binaryShiftByteCount
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Encoder -> com.google.zxing.aztec.encoder.Encoder:
    int DEFAULT_EC_PERCENT -> DEFAULT_EC_PERCENT
    int DEFAULT_AZTEC_LAYERS -> DEFAULT_AZTEC_LAYERS
    int MAX_NB_BITS -> MAX_NB_BITS
    int MAX_NB_BITS_COMPACT -> MAX_NB_BITS_COMPACT
    int[] WORD_SIZE -> WORD_SIZE
    com.google.zxing.aztec.encoder.AztecCode encode(byte[]) -> encode
    com.google.zxing.aztec.encoder.AztecCode encode(byte[],int,int) -> encode
    void drawBullsEye(com.google.zxing.common.BitMatrix,int,int) -> drawBullsEye
    com.google.zxing.common.BitArray generateModeMessage(boolean,int,int) -> generateModeMessage
    void drawModeMessage(com.google.zxing.common.BitMatrix,boolean,int,com.google.zxing.common.BitArray) -> drawModeMessage
    com.google.zxing.common.BitArray generateCheckWords(com.google.zxing.common.BitArray,int,int) -> generateCheckWords
    int[] bitsToWords(com.google.zxing.common.BitArray,int,int) -> bitsToWords
    com.google.zxing.common.reedsolomon.GenericGF getGF(int) -> getGF
    com.google.zxing.common.BitArray stuffBits(com.google.zxing.common.BitArray,int) -> stuffBits
    int totalBitsInLayer(int,boolean) -> totalBitsInLayer
com.google.zxing.aztec.encoder.HighLevelEncoder -> com.google.zxing.aztec.encoder.HighLevelEncoder:
    java.lang.String[] MODE_NAMES -> MODE_NAMES
    int MODE_UPPER -> MODE_UPPER
    int MODE_LOWER -> MODE_LOWER
    int MODE_DIGIT -> MODE_DIGIT
    int MODE_MIXED -> MODE_MIXED
    int MODE_PUNCT -> MODE_PUNCT
    int[][] LATCH_TABLE -> LATCH_TABLE
    int[][] CHAR_MAP -> CHAR_MAP
    int[][] SHIFT_TABLE -> SHIFT_TABLE
    byte[] text -> text
    com.google.zxing.common.BitArray encode() -> encode
    java.util.Collection updateStateListForChar(java.lang.Iterable,int) -> updateStateListForChar
    void updateStateForChar(com.google.zxing.aztec.encoder.State,int,java.util.Collection) -> updateStateForChar
    java.util.Collection updateStateListForPair(java.lang.Iterable,int,int) -> updateStateListForPair
    void updateStateForPair(com.google.zxing.aztec.encoder.State,int,int,java.util.Collection) -> updateStateForPair
    java.util.Collection simplifyStates(java.lang.Iterable) -> simplifyStates
com.google.zxing.aztec.encoder.HighLevelEncoder$1 -> com.google.zxing.aztec.encoder.HighLevelEncoder$1:
    com.google.zxing.aztec.encoder.HighLevelEncoder this$0 -> this$0
    int compare(com.google.zxing.aztec.encoder.State,com.google.zxing.aztec.encoder.State) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.aztec.encoder.SimpleToken -> com.google.zxing.aztec.encoder.SimpleToken:
    short value -> value
    short bitCount -> bitCount
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.State -> com.google.zxing.aztec.encoder.State:
    com.google.zxing.aztec.encoder.State INITIAL_STATE -> INITIAL_STATE
    int mode -> mode
    com.google.zxing.aztec.encoder.Token token -> token
    int binaryShiftByteCount -> binaryShiftByteCount
    int bitCount -> bitCount
    int getMode() -> getMode
    com.google.zxing.aztec.encoder.Token getToken() -> getToken
    int getBinaryShiftByteCount() -> getBinaryShiftByteCount
    int getBitCount() -> getBitCount
    com.google.zxing.aztec.encoder.State latchAndAppend(int,int) -> latchAndAppend
    com.google.zxing.aztec.encoder.State shiftAndAppend(int,int) -> shiftAndAppend
    com.google.zxing.aztec.encoder.State addBinaryShiftChar(int) -> addBinaryShiftChar
    com.google.zxing.aztec.encoder.State endBinaryShift(int) -> endBinaryShift
    boolean isBetterThanOrEqualTo(com.google.zxing.aztec.encoder.State) -> isBetterThanOrEqualTo
    com.google.zxing.common.BitArray toBitArray(byte[]) -> toBitArray
    java.lang.String toString() -> toString
com.google.zxing.aztec.encoder.Token -> com.google.zxing.aztec.encoder.Token:
    com.google.zxing.aztec.encoder.Token EMPTY -> EMPTY
    com.google.zxing.aztec.encoder.Token previous -> previous
    com.google.zxing.aztec.encoder.Token getPrevious() -> getPrevious
    com.google.zxing.aztec.encoder.Token add(int,int) -> add
    com.google.zxing.aztec.encoder.Token addBinaryShift(int,int) -> addBinaryShift
    void appendTo(com.google.zxing.common.BitArray,byte[]) -> appendTo
com.google.zxing.client.android.camera.CameraConfigurationUtils -> com.google.zxing.client.android.camera.CameraConfigurationUtils:
    java.lang.String TAG -> TAG
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    int MIN_PREVIEW_PIXELS -> MIN_PREVIEW_PIXELS
    float MAX_EXPOSURE_COMPENSATION -> MAX_EXPOSURE_COMPENSATION
    float MIN_EXPOSURE_COMPENSATION -> MIN_EXPOSURE_COMPENSATION
    double MAX_ASPECT_DISTORTION -> MAX_ASPECT_DISTORTION
    int MIN_FPS -> MIN_FPS
    int MAX_FPS -> MAX_FPS
    int AREA_PER_1000 -> AREA_PER_1000
    void setFocus(android.hardware.Camera$Parameters,boolean,boolean,boolean) -> setFocus
    void setTorch(android.hardware.Camera$Parameters,boolean) -> setTorch
    void setBestExposure(android.hardware.Camera$Parameters,boolean) -> setBestExposure
    void setBestPreviewFPS(android.hardware.Camera$Parameters) -> setBestPreviewFPS
    void setBestPreviewFPS(android.hardware.Camera$Parameters,int,int) -> setBestPreviewFPS
    void setFocusArea(android.hardware.Camera$Parameters) -> setFocusArea
    void setMetering(android.hardware.Camera$Parameters) -> setMetering
    java.util.List buildMiddleArea(int) -> buildMiddleArea
    void setVideoStabilization(android.hardware.Camera$Parameters) -> setVideoStabilization
    void setBarcodeSceneMode(android.hardware.Camera$Parameters) -> setBarcodeSceneMode
    void setZoom(android.hardware.Camera$Parameters,double) -> setZoom
    java.lang.Integer indexOfClosestZoom(android.hardware.Camera$Parameters,double) -> indexOfClosestZoom
    void setInvertColor(android.hardware.Camera$Parameters) -> setInvertColor
    android.graphics.Point findBestPreviewSizeValue(android.hardware.Camera$Parameters,android.graphics.Point) -> findBestPreviewSizeValue
    java.lang.String findSettableValue(java.lang.String,java.util.Collection,java.lang.String[]) -> findSettableValue
    java.lang.String toString(java.util.Collection) -> toString
    java.lang.String toString(java.lang.Iterable) -> toString
    java.lang.String collectStats(android.hardware.Camera$Parameters) -> collectStats
    java.lang.String collectStats(java.lang.CharSequence) -> collectStats
com.google.zxing.client.android.camera.CameraConfigurationUtils$1 -> com.google.zxing.client.android.camera.CameraConfigurationUtils$1:
    int compare(android.hardware.Camera$Size,android.hardware.Camera$Size) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.result.AbstractDoCoMoResultParser:
    java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.result.AddressBookAUResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.result.AddressBookDoCoMoResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String parseName(java.lang.String) -> parseName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.AddressBookParsedResult -> com.google.zxing.client.result.AddressBookParsedResult:
    java.lang.String[] names -> names
    java.lang.String[] nicknames -> nicknames
    java.lang.String pronunciation -> pronunciation
    java.lang.String[] phoneNumbers -> phoneNumbers
    java.lang.String[] phoneTypes -> phoneTypes
    java.lang.String[] emails -> emails
    java.lang.String[] emailTypes -> emailTypes
    java.lang.String instantMessenger -> instantMessenger
    java.lang.String note -> note
    java.lang.String[] addresses -> addresses
    java.lang.String[] addressTypes -> addressTypes
    java.lang.String org -> org
    java.lang.String birthday -> birthday
    java.lang.String title -> title
    java.lang.String[] urls -> urls
    java.lang.String[] geo -> geo
    java.lang.String[] getNames() -> getNames
    java.lang.String[] getNicknames() -> getNicknames
    java.lang.String getPronunciation() -> getPronunciation
    java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    java.lang.String[] getPhoneTypes() -> getPhoneTypes
    java.lang.String[] getEmails() -> getEmails
    java.lang.String[] getEmailTypes() -> getEmailTypes
    java.lang.String getInstantMessenger() -> getInstantMessenger
    java.lang.String getNote() -> getNote
    java.lang.String[] getAddresses() -> getAddresses
    java.lang.String[] getAddressTypes() -> getAddressTypes
    java.lang.String getTitle() -> getTitle
    java.lang.String getOrg() -> getOrg
    java.lang.String[] getURLs() -> getURLs
    java.lang.String getBirthday() -> getBirthday
    java.lang.String[] getGeo() -> getGeo
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.result.BizcardResultParser:
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.result.BookmarkDoCoMoResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.CalendarParsedResult -> com.google.zxing.client.result.CalendarParsedResult:
    java.util.regex.Pattern RFC2445_DURATION -> RFC2445_DURATION
    long[] RFC2445_DURATION_FIELD_UNITS -> RFC2445_DURATION_FIELD_UNITS
    java.util.regex.Pattern DATE_TIME -> DATE_TIME
    java.lang.String summary -> summary
    java.util.Date start -> start
    boolean startAllDay -> startAllDay
    java.util.Date end -> end
    boolean endAllDay -> endAllDay
    java.lang.String location -> location
    java.lang.String organizer -> organizer
    java.lang.String[] attendees -> attendees
    java.lang.String description -> description
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String getSummary() -> getSummary
    java.util.Date getStart() -> getStart
    boolean isStartAllDay() -> isStartAllDay
    java.util.Date getEnd() -> getEnd
    boolean isEndAllDay() -> isEndAllDay
    java.lang.String getLocation() -> getLocation
    java.lang.String getOrganizer() -> getOrganizer
    java.lang.String[] getAttendees() -> getAttendees
    java.lang.String getDescription() -> getDescription
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    java.lang.String getDisplayResult() -> getDisplayResult
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.lang.String format(boolean,java.util.Date) -> format
    long parseDurationMS(java.lang.CharSequence) -> parseDurationMS
    java.text.DateFormat buildDateFormat() -> buildDateFormat
    java.text.DateFormat buildDateTimeFormat() -> buildDateTimeFormat
com.google.zxing.client.result.EmailAddressParsedResult -> com.google.zxing.client.result.EmailAddressParsedResult:
    java.lang.String emailAddress -> emailAddress
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String mailtoURI -> mailtoURI
    java.lang.String getEmailAddress() -> getEmailAddress
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getMailtoURI() -> getMailtoURI
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.result.EmailAddressResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.result.EmailDoCoMoResultParser:
    java.util.regex.Pattern ATEXT_ALPHANUMERIC -> ATEXT_ALPHANUMERIC
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ExpandedProductParsedResult -> com.google.zxing.client.result.ExpandedProductParsedResult:
    java.lang.String KILOGRAM -> KILOGRAM
    java.lang.String POUND -> POUND
    java.lang.String rawText -> rawText
    java.lang.String productID -> productID
    java.lang.String sscc -> sscc
    java.lang.String lotNumber -> lotNumber
    java.lang.String productionDate -> productionDate
    java.lang.String packagingDate -> packagingDate
    java.lang.String bestBeforeDate -> bestBeforeDate
    java.lang.String expirationDate -> expirationDate
    java.lang.String weight -> weight
    java.lang.String weightType -> weightType
    java.lang.String weightIncrement -> weightIncrement
    java.lang.String price -> price
    java.lang.String priceIncrement -> priceIncrement
    java.lang.String priceCurrency -> priceCurrency
    java.util.Map uncommonAIs -> uncommonAIs
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
    java.lang.String getRawText() -> getRawText
    java.lang.String getProductID() -> getProductID
    java.lang.String getSscc() -> getSscc
    java.lang.String getLotNumber() -> getLotNumber
    java.lang.String getProductionDate() -> getProductionDate
    java.lang.String getPackagingDate() -> getPackagingDate
    java.lang.String getBestBeforeDate() -> getBestBeforeDate
    java.lang.String getExpirationDate() -> getExpirationDate
    java.lang.String getWeight() -> getWeight
    java.lang.String getWeightType() -> getWeightType
    java.lang.String getWeightIncrement() -> getWeightIncrement
    java.lang.String getPrice() -> getPrice
    java.lang.String getPriceIncrement() -> getPriceIncrement
    java.lang.String getPriceCurrency() -> getPriceCurrency
    java.util.Map getUncommonAIs() -> getUncommonAIs
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ExpandedProductResultParser -> com.google.zxing.client.result.ExpandedProductResultParser:
    com.google.zxing.client.result.ExpandedProductParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    java.lang.String findValue(int,java.lang.String) -> findValue
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.GeoParsedResult -> com.google.zxing.client.result.GeoParsedResult:
    double latitude -> latitude
    double longitude -> longitude
    double altitude -> altitude
    java.lang.String query -> query
    java.lang.String getGeoURI() -> getGeoURI
    double getLatitude() -> getLatitude
    double getLongitude() -> getLongitude
    double getAltitude() -> getAltitude
    java.lang.String getQuery() -> getQuery
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.result.GeoResultParser:
    java.util.regex.Pattern GEO_URL_PATTERN -> GEO_URL_PATTERN
    com.google.zxing.client.result.GeoParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ISBNParsedResult -> com.google.zxing.client.result.ISBNParsedResult:
    java.lang.String isbn -> isbn
    java.lang.String getISBN() -> getISBN
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ISBNResultParser -> com.google.zxing.client.result.ISBNResultParser:
    com.google.zxing.client.result.ISBNParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.result.ParsedResult:
    com.google.zxing.client.result.ParsedResultType type -> type
    com.google.zxing.client.result.ParsedResultType getType() -> getType
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.result.ParsedResultType:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> ADDRESSBOOK
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> EMAIL_ADDRESS
    com.google.zxing.client.result.ParsedResultType PRODUCT -> PRODUCT
    com.google.zxing.client.result.ParsedResultType URI -> URI
    com.google.zxing.client.result.ParsedResultType TEXT -> TEXT
    com.google.zxing.client.result.ParsedResultType GEO -> GEO
    com.google.zxing.client.result.ParsedResultType TEL -> TEL
    com.google.zxing.client.result.ParsedResultType SMS -> SMS
    com.google.zxing.client.result.ParsedResultType CALENDAR -> CALENDAR
    com.google.zxing.client.result.ParsedResultType WIFI -> WIFI
    com.google.zxing.client.result.ParsedResultType ISBN -> ISBN
    com.google.zxing.client.result.ParsedResultType VIN -> VIN
    com.google.zxing.client.result.ParsedResultType[] $VALUES -> $VALUES
    com.google.zxing.client.result.ParsedResultType[] values() -> values
    com.google.zxing.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
com.google.zxing.client.result.ProductParsedResult -> com.google.zxing.client.result.ProductParsedResult:
    java.lang.String productID -> productID
    java.lang.String normalizedProductID -> normalizedProductID
    java.lang.String getProductID() -> getProductID
    java.lang.String getNormalizedProductID() -> getNormalizedProductID
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.ProductResultParser -> com.google.zxing.client.result.ProductResultParser:
    com.google.zxing.client.result.ProductParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.result.ResultParser:
    com.google.zxing.client.result.ResultParser[] PARSERS -> PARSERS
    java.util.regex.Pattern DIGITS -> DIGITS
    java.util.regex.Pattern AMPERSAND -> AMPERSAND
    java.util.regex.Pattern EQUALS -> EQUALS
    java.lang.String BYTE_ORDER_MARK -> BYTE_ORDER_MARK
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String getMassagedText(com.google.zxing.Result) -> getMassagedText
    com.google.zxing.client.result.ParsedResult parseResult(com.google.zxing.Result) -> parseResult
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    int parseHexDigit(char) -> parseHexDigit
    boolean isStringOfDigits(java.lang.CharSequence,int) -> isStringOfDigits
    boolean isSubstringOfDigits(java.lang.CharSequence,int,int) -> isSubstringOfDigits
    java.util.Map parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    void appendKeyValue(java.lang.CharSequence,java.util.Map) -> appendKeyValue
    java.lang.String urlDecode(java.lang.String) -> urlDecode
    java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.result.SMSMMSResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    void addNumberVia(java.util.Collection,java.util.Collection,java.lang.String) -> addNumberVia
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMSParsedResult -> com.google.zxing.client.result.SMSParsedResult:
    java.lang.String[] numbers -> numbers
    java.lang.String[] vias -> vias
    java.lang.String subject -> subject
    java.lang.String body -> body
    java.lang.String getSMSURI() -> getSMSURI
    java.lang.String[] getNumbers() -> getNumbers
    java.lang.String[] getVias() -> getVias
    java.lang.String getSubject() -> getSubject
    java.lang.String getBody() -> getBody
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.result.SMSTOMMSTOResultParser:
    com.google.zxing.client.result.SMSParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.SMTPResultParser -> com.google.zxing.client.result.SMTPResultParser:
    com.google.zxing.client.result.EmailAddressParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TelParsedResult -> com.google.zxing.client.result.TelParsedResult:
    java.lang.String number -> number
    java.lang.String telURI -> telURI
    java.lang.String title -> title
    java.lang.String getNumber() -> getNumber
    java.lang.String getTelURI() -> getTelURI
    java.lang.String getTitle() -> getTitle
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.result.TelResultParser:
    com.google.zxing.client.result.TelParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.result.TextParsedResult:
    java.lang.String text -> text
    java.lang.String language -> language
    java.lang.String getText() -> getText
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.result.URIParsedResult:
    java.util.regex.Pattern USER_IN_HOST -> USER_IN_HOST
    java.lang.String uri -> uri
    java.lang.String title -> title
    java.lang.String getURI() -> getURI
    java.lang.String getTitle() -> getTitle
    boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    java.lang.String getDisplayResult() -> getDisplayResult
    java.lang.String massageURI(java.lang.String) -> massageURI
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.result.URIResultParser:
    java.util.regex.Pattern URL_WITH_PROTOCOL_PATTERN -> URL_WITH_PROTOCOL_PATTERN
    java.util.regex.Pattern URL_WITHOUT_PROTOCOL_PATTERN -> URL_WITHOUT_PROTOCOL_PATTERN
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    boolean isBasicallyValidURI(java.lang.String) -> isBasicallyValidURI
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.result.URLTOResultParser:
    com.google.zxing.client.result.URIParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.result.VCardResultParser:
    java.util.regex.Pattern BEGIN_VCARD -> BEGIN_VCARD
    java.util.regex.Pattern VCARD_LIKE_DATE -> VCARD_LIKE_DATE
    java.util.regex.Pattern CR_LF_SPACE_TAB -> CR_LF_SPACE_TAB
    java.util.regex.Pattern NEWLINE_ESCAPE -> NEWLINE_ESCAPE
    java.util.regex.Pattern VCARD_ESCAPES -> VCARD_ESCAPES
    java.util.regex.Pattern EQUALS -> EQUALS
    java.util.regex.Pattern SEMICOLON -> SEMICOLON
    java.util.regex.Pattern UNESCAPED_SEMICOLONS -> UNESCAPED_SEMICOLONS
    java.util.regex.Pattern COMMA -> COMMA
    java.util.regex.Pattern SEMICOLON_OR_COMMA -> SEMICOLON_OR_COMMA
    com.google.zxing.client.result.AddressBookParsedResult parse(com.google.zxing.Result) -> parse
    java.util.List matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchVCardPrefixedField
    java.lang.String decodeQuotedPrintable(java.lang.CharSequence,java.lang.String) -> decodeQuotedPrintable
    void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuilder) -> maybeAppendFragment
    java.util.List matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchSingleVCardPrefixedField
    java.lang.String toPrimaryValue(java.util.List) -> toPrimaryValue
    java.lang.String[] toPrimaryValues(java.util.Collection) -> toPrimaryValues
    java.lang.String[] toTypes(java.util.Collection) -> toTypes
    boolean isLikeVCardDate(java.lang.CharSequence) -> isLikeVCardDate
    void formatNames(java.lang.Iterable) -> formatNames
    void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuilder) -> maybeAppendComponent
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.result.VEventResultParser:
    com.google.zxing.client.result.CalendarParsedResult parse(com.google.zxing.Result) -> parse
    java.lang.String matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    java.lang.String[] matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchVCardPrefixedField
    java.lang.String stripMailto(java.lang.String) -> stripMailto
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.VINParsedResult -> com.google.zxing.client.result.VINParsedResult:
    java.lang.String vin -> vin
    java.lang.String worldManufacturerID -> worldManufacturerID
    java.lang.String vehicleDescriptorSection -> vehicleDescriptorSection
    java.lang.String vehicleIdentifierSection -> vehicleIdentifierSection
    java.lang.String countryCode -> countryCode
    java.lang.String vehicleAttributes -> vehicleAttributes
    int modelYear -> modelYear
    char plantCode -> plantCode
    java.lang.String sequentialNumber -> sequentialNumber
    java.lang.String getVIN() -> getVIN
    java.lang.String getWorldManufacturerID() -> getWorldManufacturerID
    java.lang.String getVehicleDescriptorSection() -> getVehicleDescriptorSection
    java.lang.String getVehicleIdentifierSection() -> getVehicleIdentifierSection
    java.lang.String getCountryCode() -> getCountryCode
    java.lang.String getVehicleAttributes() -> getVehicleAttributes
    int getModelYear() -> getModelYear
    char getPlantCode() -> getPlantCode
    java.lang.String getSequentialNumber() -> getSequentialNumber
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.VINResultParser -> com.google.zxing.client.result.VINResultParser:
    java.util.regex.Pattern IOQ -> IOQ
    java.util.regex.Pattern AZ09 -> AZ09
    com.google.zxing.client.result.VINParsedResult parse(com.google.zxing.Result) -> parse
    boolean checkChecksum(java.lang.CharSequence) -> checkChecksum
    int vinCharValue(char) -> vinCharValue
    int vinPositionWeight(int) -> vinPositionWeight
    char checkChar(int) -> checkChar
    int modelYear(char) -> modelYear
    java.lang.String countryCode(java.lang.CharSequence) -> countryCode
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.client.result.WifiParsedResult -> com.google.zxing.client.result.WifiParsedResult:
    java.lang.String ssid -> ssid
    java.lang.String networkEncryption -> networkEncryption
    java.lang.String password -> password
    boolean hidden -> hidden
    java.lang.String getSsid() -> getSsid
    java.lang.String getNetworkEncryption() -> getNetworkEncryption
    java.lang.String getPassword() -> getPassword
    boolean isHidden() -> isHidden
    java.lang.String getDisplayResult() -> getDisplayResult
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.result.WifiResultParser:
    com.google.zxing.client.result.WifiParsedResult parse(com.google.zxing.Result) -> parse
    com.google.zxing.client.result.ParsedResult parse(com.google.zxing.Result) -> parse
com.google.zxing.common.BitArray -> com.google.zxing.common.BitArray:
    int[] bits -> bits
    int size -> size
    int getSize() -> getSize
    int getSizeInBytes() -> getSizeInBytes
    void ensureCapacity(int) -> ensureCapacity
    boolean get(int) -> get
    void set(int) -> set
    void flip(int) -> flip
    int getNextSet(int) -> getNextSet
    int getNextUnset(int) -> getNextUnset
    void setBulk(int,int) -> setBulk
    void setRange(int,int) -> setRange
    void clear() -> clear
    boolean isRange(int,int,boolean) -> isRange
    void appendBit(boolean) -> appendBit
    void appendBits(int,int) -> appendBits
    void appendBitArray(com.google.zxing.common.BitArray) -> appendBitArray
    void xor(com.google.zxing.common.BitArray) -> xor
    void toBytes(int,byte[],int,int) -> toBytes
    int[] getBitArray() -> getBitArray
    void reverse() -> reverse
    int[] makeArray(int) -> makeArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.zxing.common.BitArray clone() -> clone
    java.lang.Object clone() -> clone
com.google.zxing.common.BitMatrix -> com.google.zxing.common.BitMatrix:
    int width -> width
    int height -> height
    int rowSize -> rowSize
    int[] bits -> bits
    boolean get(int,int) -> get
    void set(int,int) -> set
    void flip(int,int) -> flip
    void clear() -> clear
    void setRegion(int,int,int,int) -> setRegion
    com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray) -> getRow
    void setRow(int,com.google.zxing.common.BitArray) -> setRow
    void rotate180() -> rotate180
    int[] getEnclosingRectangle() -> getEnclosingRectangle
    int[] getTopLeftOnBit() -> getTopLeftOnBit
    int[] getBottomRightOnBit() -> getBottomRightOnBit
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.zxing.common.BitMatrix clone() -> clone
    java.lang.Object clone() -> clone
com.google.zxing.common.BitSource -> com.google.zxing.common.BitSource:
    byte[] bytes -> bytes
    int byteOffset -> byteOffset
    int bitOffset -> bitOffset
    int getBitOffset() -> getBitOffset
    int getByteOffset() -> getByteOffset
    int readBits(int) -> readBits
    int available() -> available
com.google.zxing.common.CharacterSetECI -> com.google.zxing.common.CharacterSetECI:
    com.google.zxing.common.CharacterSetECI Cp437 -> Cp437
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> ISO8859_1
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> ISO8859_2
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> ISO8859_3
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> ISO8859_4
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> ISO8859_5
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> ISO8859_6
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> ISO8859_7
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> ISO8859_8
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> ISO8859_9
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> ISO8859_10
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> ISO8859_11
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> ISO8859_13
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> ISO8859_14
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> ISO8859_15
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> ISO8859_16
    com.google.zxing.common.CharacterSetECI SJIS -> SJIS
    com.google.zxing.common.CharacterSetECI Cp1250 -> Cp1250
    com.google.zxing.common.CharacterSetECI Cp1251 -> Cp1251
    com.google.zxing.common.CharacterSetECI Cp1252 -> Cp1252
    com.google.zxing.common.CharacterSetECI Cp1256 -> Cp1256
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> UnicodeBigUnmarked
    com.google.zxing.common.CharacterSetECI UTF8 -> UTF8
    com.google.zxing.common.CharacterSetECI ASCII -> ASCII
    com.google.zxing.common.CharacterSetECI Big5 -> Big5
    com.google.zxing.common.CharacterSetECI GB18030 -> GB18030
    com.google.zxing.common.CharacterSetECI EUC_KR -> EUC_KR
    java.util.Map VALUE_TO_ECI -> VALUE_TO_ECI
    java.util.Map NAME_TO_ECI -> NAME_TO_ECI
    int[] values -> values
    java.lang.String[] otherEncodingNames -> otherEncodingNames
    com.google.zxing.common.CharacterSetECI[] $VALUES -> $VALUES
    com.google.zxing.common.CharacterSetECI[] values() -> values
    com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
com.google.zxing.common.DecoderResult -> com.google.zxing.common.DecoderResult:
    byte[] rawBytes -> rawBytes
    java.lang.String text -> text
    java.util.List byteSegments -> byteSegments
    java.lang.String ecLevel -> ecLevel
    java.lang.Integer errorsCorrected -> errorsCorrected
    java.lang.Integer erasures -> erasures
    java.lang.Object other -> other
    int structuredAppendParity -> structuredAppendParity
    int structuredAppendSequenceNumber -> structuredAppendSequenceNumber
    byte[] getRawBytes() -> getRawBytes
    java.lang.String getText() -> getText
    java.util.List getByteSegments() -> getByteSegments
    java.lang.String getECLevel() -> getECLevel
    java.lang.Integer getErrorsCorrected() -> getErrorsCorrected
    void setErrorsCorrected(java.lang.Integer) -> setErrorsCorrected
    java.lang.Integer getErasures() -> getErasures
    void setErasures(java.lang.Integer) -> setErasures
    java.lang.Object getOther() -> getOther
    void setOther(java.lang.Object) -> setOther
    boolean hasStructuredAppend() -> hasStructuredAppend
    int getStructuredAppendParity() -> getStructuredAppendParity
    int getStructuredAppendSequenceNumber() -> getStructuredAppendSequenceNumber
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.common.DefaultGridSampler:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
com.google.zxing.common.DetectorResult -> com.google.zxing.common.DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    com.google.zxing.ResultPoint[] points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    com.google.zxing.ResultPoint[] getPoints() -> getPoints
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.common.GlobalHistogramBinarizer:
    int LUMINANCE_BITS -> LUMINANCE_BITS
    int LUMINANCE_SHIFT -> LUMINANCE_SHIFT
    int LUMINANCE_BUCKETS -> LUMINANCE_BUCKETS
    byte[] EMPTY -> EMPTY
    byte[] luminances -> luminances
    int[] buckets -> buckets
    com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray) -> getBlackRow
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void initArrays(int) -> initArrays
    int estimateBlackPoint(int[]) -> estimateBlackPoint
com.google.zxing.common.GridSampler -> com.google.zxing.common.GridSampler:
    com.google.zxing.common.GridSampler gridSampler -> gridSampler
    void setGridSampler(com.google.zxing.common.GridSampler) -> setGridSampler
    com.google.zxing.common.GridSampler getInstance() -> getInstance
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> sampleGrid
    void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[]) -> checkAndNudgePoints
com.google.zxing.common.HybridBinarizer -> com.google.zxing.common.HybridBinarizer:
    int BLOCK_SIZE_POWER -> BLOCK_SIZE_POWER
    int BLOCK_SIZE -> BLOCK_SIZE
    int BLOCK_SIZE_MASK -> BLOCK_SIZE_MASK
    int MINIMUM_DIMENSION -> MINIMUM_DIMENSION
    int MIN_DYNAMIC_RANGE -> MIN_DYNAMIC_RANGE
    com.google.zxing.common.BitMatrix matrix -> matrix
    com.google.zxing.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource) -> createBinarizer
    void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix) -> calculateThresholdForBlock
    int cap(int,int,int) -> cap
    void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix) -> thresholdBlock
    int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.common.PerspectiveTransform:
    float a11 -> a11
    float a12 -> a12
    float a13 -> a13
    float a21 -> a21
    float a22 -> a22
    float a23 -> a23
    float a31 -> a31
    float a32 -> a32
    float a33 -> a33
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    void transformPoints(float[]) -> transformPoints
    void transformPoints(float[],float[]) -> transformPoints
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    com.google.zxing.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform) -> times
com.google.zxing.common.StringUtils -> com.google.zxing.common.StringUtils:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> PLATFORM_DEFAULT_ENCODING
    java.lang.String SHIFT_JIS -> SHIFT_JIS
    java.lang.String GB2312 -> GB2312
    java.lang.String EUC_JP -> EUC_JP
    java.lang.String UTF8 -> UTF8
    java.lang.String ISO88591 -> ISO88591
    boolean ASSUME_SHIFT_JIS -> ASSUME_SHIFT_JIS
    java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
com.google.zxing.common.detector.MathUtils -> com.google.zxing.common.detector.MathUtils:
    int round(float) -> round
    float distance(float,float,float,float) -> distance
    float distance(int,int,int,int) -> distance
com.google.zxing.common.detector.MonochromeRectangleDetector -> com.google.zxing.common.detector.MonochromeRectangleDetector:
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
    int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
com.google.zxing.common.detector.WhiteRectangleDetector -> com.google.zxing.common.detector.WhiteRectangleDetector:
    int INIT_SIZE -> INIT_SIZE
    int CORR -> CORR
    com.google.zxing.common.BitMatrix image -> image
    int height -> height
    int width -> width
    int leftInit -> leftInit
    int rightInit -> rightInit
    int downInit -> downInit
    int upInit -> upInit
    com.google.zxing.ResultPoint[] detect() -> detect
    com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
    com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> centerEdges
    boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.common.reedsolomon.GenericGF:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> AZTEC_DATA_12
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> AZTEC_DATA_10
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> AZTEC_DATA_6
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> AZTEC_PARAM
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> QR_CODE_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> DATA_MATRIX_FIELD_256
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> AZTEC_DATA_8
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> MAXICODE_FIELD_64
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> zero
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> one
    int size -> size
    int primitive -> primitive
    int generatorBase -> generatorBase
    com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> getZero
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> getOne
    com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    int addOrSubtract(int,int) -> addOrSubtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
    int getGeneratorBase() -> getGeneratorBase
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.common.reedsolomon.GenericGFPoly:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.common.reedsolomon.ReedSolomonDecoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    void decode(int[],int) -> decode
    com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[]) -> findErrorMagnitudes
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.common.reedsolomon.ReedSolomonEncoder:
    com.google.zxing.common.reedsolomon.GenericGF field -> field
    java.util.List cachedGenerators -> cachedGenerators
    com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    void encode(int[],int) -> encode
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.common.reedsolomon.ReedSolomonException:
com.google.zxing.datamatrix.DataMatrixReader -> com.google.zxing.datamatrix.DataMatrixReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.datamatrix.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    int moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.datamatrix.DataMatrixWriter -> com.google.zxing.datamatrix.DataMatrixWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encodeLowLevel(com.google.zxing.datamatrix.encoder.DefaultPlacement,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeLowLevel
    com.google.zxing.common.BitMatrix convertByteMatrixToBitMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> convertByteMatrixToBitMatrix
com.google.zxing.datamatrix.decoder.BitMatrixParser -> com.google.zxing.datamatrix.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix mappingBitMatrix -> mappingBitMatrix
    com.google.zxing.common.BitMatrix readMappingMatrix -> readMappingMatrix
    com.google.zxing.datamatrix.decoder.Version version -> version
    com.google.zxing.datamatrix.decoder.Version getVersion() -> getVersion
    com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix) -> readVersion
    byte[] readCodewords() -> readCodewords
    boolean readModule(int,int,int,int) -> readModule
    int readUtah(int,int,int,int) -> readUtah
    int readCorner1(int,int) -> readCorner1
    int readCorner2(int,int) -> readCorner2
    int readCorner3(int,int) -> readCorner3
    int readCorner4(int,int) -> readCorner4
    com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix) -> extractDataRegion
com.google.zxing.datamatrix.decoder.DataBlock -> com.google.zxing.datamatrix.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser:
    char[] C40_BASIC_SET_CHARS -> C40_BASIC_SET_CHARS
    char[] C40_SHIFT2_SET_CHARS -> C40_SHIFT2_SET_CHARS
    char[] TEXT_BASIC_SET_CHARS -> TEXT_BASIC_SET_CHARS
    char[] TEXT_SHIFT3_SET_CHARS -> TEXT_SHIFT3_SET_CHARS
    com.google.zxing.common.DecoderResult decode(byte[]) -> decode
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    int unrandomize255State(int,int) -> unrandomize255State
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1 -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE -> PAD_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE -> ASCII_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE -> C40_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE -> TEXT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE -> ANSIX12_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE -> EDIFACT_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE -> BASE256_ENCODE
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.decoder.Decoder -> com.google.zxing.datamatrix.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.datamatrix.decoder.Version -> com.google.zxing.datamatrix.decoder.Version:
    com.google.zxing.datamatrix.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int symbolSizeRows -> symbolSizeRows
    int symbolSizeColumns -> symbolSizeColumns
    int dataRegionSizeRows -> dataRegionSizeRows
    int dataRegionSizeColumns -> dataRegionSizeColumns
    com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int getSymbolSizeRows() -> getSymbolSizeRows
    int getSymbolSizeColumns() -> getSymbolSizeColumns
    int getDataRegionSizeRows() -> getDataRegionSizeRows
    int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    int getTotalCodewords() -> getTotalCodewords
    com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    java.lang.String toString() -> toString
    com.google.zxing.datamatrix.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.datamatrix.decoder.Version$1 -> com.google.zxing.datamatrix.decoder.Version$1:
com.google.zxing.datamatrix.decoder.Version$ECB -> com.google.zxing.datamatrix.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.datamatrix.decoder.Version$ECBlocks -> com.google.zxing.datamatrix.decoder.Version$ECBlocks:
    int ecCodewords -> ecCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewords() -> getECCodewords
    com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.datamatrix.detector.Detector -> com.google.zxing.datamatrix.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector -> rectangleDetector
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> correctTopRightRectangular
    com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> correctTopRight
    boolean isValid(com.google.zxing.ResultPoint) -> isValid
    int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> distance
    void increment(java.util.Map,com.google.zxing.ResultPoint) -> increment
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> sampleGrid
    com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> transitionsBetween
com.google.zxing.datamatrix.detector.Detector$1 -> com.google.zxing.datamatrix.detector.Detector$1:
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions:
    com.google.zxing.ResultPoint from -> from
    com.google.zxing.ResultPoint to -> to
    int transitions -> transitions
    com.google.zxing.ResultPoint getFrom() -> getFrom
    com.google.zxing.ResultPoint getTo() -> getTo
    int getTransitions() -> getTransitions
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.datamatrix.encoder.ASCIIEncoder -> com.google.zxing.datamatrix.encoder.ASCIIEncoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    char encodeASCIIDigits(char,char) -> encodeASCIIDigits
com.google.zxing.datamatrix.encoder.Base256Encoder -> com.google.zxing.datamatrix.encoder.Base256Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    char randomize255State(char,int) -> randomize255State
com.google.zxing.datamatrix.encoder.C40Encoder -> com.google.zxing.datamatrix.encoder.C40Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    int backtrackOneCharacter(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder,java.lang.StringBuilder,int) -> backtrackOneCharacter
    void writeNextTriplet(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> writeNextTriplet
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144 -> com.google.zxing.datamatrix.encoder.DataMatrixSymbolInfo144:
    int getInterleavedBlockCount() -> getInterleavedBlockCount
    int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
com.google.zxing.datamatrix.encoder.DefaultPlacement -> com.google.zxing.datamatrix.encoder.DefaultPlacement:
    java.lang.CharSequence codewords -> codewords
    int numrows -> numrows
    int numcols -> numcols
    byte[] bits -> bits
    int getNumrows() -> getNumrows
    int getNumcols() -> getNumcols
    byte[] getBits() -> getBits
    boolean getBit(int,int) -> getBit
    void setBit(int,int,boolean) -> setBit
    boolean hasBit(int,int) -> hasBit
    void place() -> place
    void module(int,int,int,int) -> module
    void utah(int,int,int) -> utah
    void corner1(int) -> corner1
    void corner2(int) -> corner2
    void corner3(int) -> corner3
    void corner4(int) -> corner4
com.google.zxing.datamatrix.encoder.EdifactEncoder -> com.google.zxing.datamatrix.encoder.EdifactEncoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.CharSequence) -> handleEOD
    void encodeChar(char,java.lang.StringBuilder) -> encodeChar
    java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
com.google.zxing.datamatrix.encoder.Encoder -> com.google.zxing.datamatrix.encoder.Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
com.google.zxing.datamatrix.encoder.EncoderContext -> com.google.zxing.datamatrix.encoder.EncoderContext:
    java.lang.String msg -> msg
    com.google.zxing.datamatrix.encoder.SymbolShapeHint shape -> shape
    com.google.zxing.Dimension minSize -> minSize
    com.google.zxing.Dimension maxSize -> maxSize
    java.lang.StringBuilder codewords -> codewords
    int pos -> pos
    int newEncoding -> newEncoding
    com.google.zxing.datamatrix.encoder.SymbolInfo symbolInfo -> symbolInfo
    int skipAtEnd -> skipAtEnd
    void setSymbolShape(com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> setSymbolShape
    void setSizeConstraints(com.google.zxing.Dimension,com.google.zxing.Dimension) -> setSizeConstraints
    java.lang.String getMessage() -> getMessage
    void setSkipAtEnd(int) -> setSkipAtEnd
    char getCurrentChar() -> getCurrentChar
    char getCurrent() -> getCurrent
    java.lang.StringBuilder getCodewords() -> getCodewords
    void writeCodewords(java.lang.String) -> writeCodewords
    void writeCodeword(char) -> writeCodeword
    int getCodewordCount() -> getCodewordCount
    int getNewEncoding() -> getNewEncoding
    void signalEncoderChange(int) -> signalEncoderChange
    void resetEncoderSignal() -> resetEncoderSignal
    boolean hasMoreCharacters() -> hasMoreCharacters
    int getTotalMessageCharCount() -> getTotalMessageCharCount
    int getRemainingCharacters() -> getRemainingCharacters
    com.google.zxing.datamatrix.encoder.SymbolInfo getSymbolInfo() -> getSymbolInfo
    void updateSymbolInfo() -> updateSymbolInfo
    void updateSymbolInfo(int) -> updateSymbolInfo
    void resetSymbolInfo() -> resetSymbolInfo
com.google.zxing.datamatrix.encoder.ErrorCorrection -> com.google.zxing.datamatrix.encoder.ErrorCorrection:
    int[] FACTOR_SETS -> FACTOR_SETS
    int[][] FACTORS -> FACTORS
    int MODULO_VALUE -> MODULO_VALUE
    int[] LOG -> LOG
    int[] ALOG -> ALOG
    java.lang.String encodeECC200(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolInfo) -> encodeECC200
    java.lang.String createECCBlock(java.lang.CharSequence,int) -> createECCBlock
    java.lang.String createECCBlock(java.lang.CharSequence,int,int,int) -> createECCBlock
com.google.zxing.datamatrix.encoder.HighLevelEncoder -> com.google.zxing.datamatrix.encoder.HighLevelEncoder:
    char PAD -> PAD
    char LATCH_TO_C40 -> LATCH_TO_C40
    char LATCH_TO_BASE256 -> LATCH_TO_BASE256
    char UPPER_SHIFT -> UPPER_SHIFT
    char MACRO_05 -> MACRO_05
    char MACRO_06 -> MACRO_06
    char LATCH_TO_ANSIX12 -> LATCH_TO_ANSIX12
    char LATCH_TO_TEXT -> LATCH_TO_TEXT
    char LATCH_TO_EDIFACT -> LATCH_TO_EDIFACT
    char C40_UNLATCH -> C40_UNLATCH
    char X12_UNLATCH -> X12_UNLATCH
    java.lang.String MACRO_05_HEADER -> MACRO_05_HEADER
    java.lang.String MACRO_06_HEADER -> MACRO_06_HEADER
    java.lang.String MACRO_TRAILER -> MACRO_TRAILER
    int ASCII_ENCODATION -> ASCII_ENCODATION
    int C40_ENCODATION -> C40_ENCODATION
    int TEXT_ENCODATION -> TEXT_ENCODATION
    int X12_ENCODATION -> X12_ENCODATION
    int EDIFACT_ENCODATION -> EDIFACT_ENCODATION
    int BASE256_ENCODATION -> BASE256_ENCODATION
    char randomize253State(char,int) -> randomize253State
    java.lang.String encodeHighLevel(java.lang.String) -> encodeHighLevel
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension) -> encodeHighLevel
    int lookAheadTest(java.lang.CharSequence,int,int) -> lookAheadTest
    int findMinimums(float[],int[],int,byte[]) -> findMinimums
    int getMinimumCount(byte[]) -> getMinimumCount
    boolean isDigit(char) -> isDigit
    boolean isExtendedASCII(char) -> isExtendedASCII
    boolean isNativeC40(char) -> isNativeC40
    boolean isNativeText(char) -> isNativeText
    boolean isNativeX12(char) -> isNativeX12
    boolean isX12TermSep(char) -> isX12TermSep
    boolean isNativeEDIFACT(char) -> isNativeEDIFACT
    boolean isSpecialB256(char) -> isSpecialB256
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    void illegalCharacter(char) -> illegalCharacter
com.google.zxing.datamatrix.encoder.SymbolInfo -> com.google.zxing.datamatrix.encoder.SymbolInfo:
    com.google.zxing.datamatrix.encoder.SymbolInfo[] PROD_SYMBOLS -> PROD_SYMBOLS
    com.google.zxing.datamatrix.encoder.SymbolInfo[] symbols -> symbols
    boolean rectangular -> rectangular
    int dataCapacity -> dataCapacity
    int errorCodewords -> errorCodewords
    int matrixWidth -> matrixWidth
    int matrixHeight -> matrixHeight
    int dataRegions -> dataRegions
    int rsBlockData -> rsBlockData
    int rsBlockError -> rsBlockError
    void overrideSymbolSet(com.google.zxing.datamatrix.encoder.SymbolInfo[]) -> overrideSymbolSet
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,boolean,boolean) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,boolean) -> lookup
    com.google.zxing.datamatrix.encoder.SymbolInfo lookup(int,com.google.zxing.datamatrix.encoder.SymbolShapeHint,com.google.zxing.Dimension,com.google.zxing.Dimension,boolean) -> lookup
    int getHorizontalDataRegions() -> getHorizontalDataRegions
    int getVerticalDataRegions() -> getVerticalDataRegions
    int getSymbolDataWidth() -> getSymbolDataWidth
    int getSymbolDataHeight() -> getSymbolDataHeight
    int getSymbolWidth() -> getSymbolWidth
    int getSymbolHeight() -> getSymbolHeight
    int getCodewordCount() -> getCodewordCount
    int getInterleavedBlockCount() -> getInterleavedBlockCount
    int getDataCapacity() -> getDataCapacity
    int getErrorCodewords() -> getErrorCodewords
    int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
    int getErrorLengthForInterleavedBlock(int) -> getErrorLengthForInterleavedBlock
    java.lang.String toString() -> toString
com.google.zxing.datamatrix.encoder.SymbolShapeHint -> com.google.zxing.datamatrix.encoder.SymbolShapeHint:
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_NONE -> FORCE_NONE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_SQUARE -> FORCE_SQUARE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint FORCE_RECTANGLE -> FORCE_RECTANGLE
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] $VALUES -> $VALUES
    com.google.zxing.datamatrix.encoder.SymbolShapeHint[] values() -> values
    com.google.zxing.datamatrix.encoder.SymbolShapeHint valueOf(java.lang.String) -> valueOf
com.google.zxing.datamatrix.encoder.TextEncoder -> com.google.zxing.datamatrix.encoder.TextEncoder:
    int getEncodingMode() -> getEncodingMode
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
com.google.zxing.datamatrix.encoder.X12Encoder -> com.google.zxing.datamatrix.encoder.X12Encoder:
    int getEncodingMode() -> getEncodingMode
    void encode(com.google.zxing.datamatrix.encoder.EncoderContext) -> encode
    int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    void handleEOD(com.google.zxing.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
com.google.zxing.integration.android.IntentIntegrator -> com.google.zxing.integration.android.IntentIntegrator:
    int REQUEST_CODE -> REQUEST_CODE
    java.lang.String TAG -> TAG
    java.lang.String DEFAULT_TITLE -> DEFAULT_TITLE
    java.lang.String DEFAULT_MESSAGE -> DEFAULT_MESSAGE
    java.lang.String DEFAULT_YES -> DEFAULT_YES
    java.lang.String DEFAULT_NO -> DEFAULT_NO
    java.lang.String BS_PACKAGE -> BS_PACKAGE
    java.lang.String BSPLUS_PACKAGE -> BSPLUS_PACKAGE
    java.util.Collection PRODUCT_CODE_TYPES -> PRODUCT_CODE_TYPES
    java.util.Collection ONE_D_CODE_TYPES -> ONE_D_CODE_TYPES
    java.util.Collection QR_CODE_TYPES -> QR_CODE_TYPES
    java.util.Collection DATA_MATRIX_TYPES -> DATA_MATRIX_TYPES
    java.util.Collection ALL_CODE_TYPES -> ALL_CODE_TYPES
    java.util.List TARGET_BARCODE_SCANNER_ONLY -> TARGET_BARCODE_SCANNER_ONLY
    java.util.List TARGET_ALL_KNOWN -> TARGET_ALL_KNOWN
    android.app.Activity activity -> activity
    android.app.Fragment fragment -> fragment
    java.lang.String title -> title
    java.lang.String message -> message
    java.lang.String buttonYes -> buttonYes
    java.lang.String buttonNo -> buttonNo
    java.util.List targetApplications -> targetApplications
    java.util.Map moreExtras -> moreExtras
    void initializeConfiguration() -> initializeConfiguration
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void setTitleByID(int) -> setTitleByID
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    void setMessageByID(int) -> setMessageByID
    java.lang.String getButtonYes() -> getButtonYes
    void setButtonYes(java.lang.String) -> setButtonYes
    void setButtonYesByID(int) -> setButtonYesByID
    java.lang.String getButtonNo() -> getButtonNo
    void setButtonNo(java.lang.String) -> setButtonNo
    void setButtonNoByID(int) -> setButtonNoByID
    java.util.Collection getTargetApplications() -> getTargetApplications
    void setTargetApplications(java.util.List) -> setTargetApplications
    void setSingleTargetApplication(java.lang.String) -> setSingleTargetApplication
    java.util.Map getMoreExtras() -> getMoreExtras
    void addExtra(java.lang.String,java.lang.Object) -> addExtra
    android.app.AlertDialog initiateScan() -> initiateScan
    android.app.AlertDialog initiateScan(int) -> initiateScan
    android.app.AlertDialog initiateScan(java.util.Collection) -> initiateScan
    android.app.AlertDialog initiateScan(java.util.Collection,int) -> initiateScan
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    java.lang.String findTargetAppPackage(android.content.Intent) -> findTargetAppPackage
    boolean contains(java.lang.Iterable,java.lang.String) -> contains
    android.app.AlertDialog showDownloadDialog() -> showDownloadDialog
    com.google.zxing.integration.android.IntentResult parseActivityResult(int,int,android.content.Intent) -> parseActivityResult
    android.app.AlertDialog shareText(java.lang.CharSequence) -> shareText
    android.app.AlertDialog shareText(java.lang.CharSequence,java.lang.CharSequence) -> shareText
    java.util.List list(java.lang.String[]) -> list
    void attachMoreExtras(android.content.Intent) -> attachMoreExtras
    java.util.List access$000(com.google.zxing.integration.android.IntentIntegrator) -> access$000
    android.app.Fragment access$100(com.google.zxing.integration.android.IntentIntegrator) -> access$100
    android.app.Activity access$200(com.google.zxing.integration.android.IntentIntegrator) -> access$200
    java.lang.String access$300() -> access$300
com.google.zxing.integration.android.IntentIntegrator$1 -> com.google.zxing.integration.android.IntentIntegrator$1:
    com.google.zxing.integration.android.IntentIntegrator this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.zxing.integration.android.IntentResult -> com.google.zxing.integration.android.IntentResult:
    java.lang.String contents -> contents
    java.lang.String formatName -> formatName
    byte[] rawBytes -> rawBytes
    java.lang.Integer orientation -> orientation
    java.lang.String errorCorrectionLevel -> errorCorrectionLevel
    java.lang.String getContents() -> getContents
    java.lang.String getFormatName() -> getFormatName
    byte[] getRawBytes() -> getRawBytes
    java.lang.Integer getOrientation() -> getOrientation
    java.lang.String getErrorCorrectionLevel() -> getErrorCorrectionLevel
    java.lang.String toString() -> toString
com.google.zxing.maxicode.MaxiCodeReader -> com.google.zxing.maxicode.MaxiCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    int MATRIX_WIDTH -> MATRIX_WIDTH
    int MATRIX_HEIGHT -> MATRIX_HEIGHT
    com.google.zxing.maxicode.decoder.Decoder decoder -> decoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
com.google.zxing.maxicode.decoder.BitMatrixParser -> com.google.zxing.maxicode.decoder.BitMatrixParser:
    int[][] BITNR -> BITNR
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    byte[] readCodewords() -> readCodewords
com.google.zxing.maxicode.decoder.DecodedBitStreamParser -> com.google.zxing.maxicode.decoder.DecodedBitStreamParser:
    char SHIFTA -> SHIFTA
    char SHIFTB -> SHIFTB
    char SHIFTC -> SHIFTC
    char SHIFTD -> SHIFTD
    char SHIFTE -> SHIFTE
    char TWOSHIFTA -> TWOSHIFTA
    char THREESHIFTA -> THREESHIFTA
    char LATCHA -> LATCHA
    char LATCHB -> LATCHB
    char LOCK -> LOCK
    char ECI -> ECI
    char NS -> NS
    char PAD -> PAD
    char FS -> FS
    char GS -> GS
    char RS -> RS
    java.text.NumberFormat NINE_DIGITS -> NINE_DIGITS
    java.text.NumberFormat THREE_DIGITS -> THREE_DIGITS
    java.lang.String[] SETS -> SETS
    com.google.zxing.common.DecoderResult decode(byte[],int) -> decode
    int getBit(int,byte[]) -> getBit
    int getInt(byte[],byte[]) -> getInt
    int getCountry(byte[]) -> getCountry
    int getServiceClass(byte[]) -> getServiceClass
    int getPostCode2Length(byte[]) -> getPostCode2Length
    int getPostCode2(byte[]) -> getPostCode2
    java.lang.String getPostCode3(byte[]) -> getPostCode3
    java.lang.String getMessage(byte[],int,int) -> getMessage
com.google.zxing.maxicode.decoder.Decoder -> com.google.zxing.maxicode.decoder.Decoder:
    int ALL -> ALL
    int EVEN -> EVEN
    int ODD -> ODD
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    void correctErrors(byte[],int,int,int,int) -> correctErrors
com.google.zxing.multi.ByQuadrantReader -> com.google.zxing.multi.ByQuadrantReader:
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
com.google.zxing.multi.GenericMultipleBarcodeReader -> com.google.zxing.multi.GenericMultipleBarcodeReader:
    int MIN_DIMENSION_TO_RECUR -> MIN_DIMENSION_TO_RECUR
    int MAX_DEPTH -> MAX_DEPTH
    com.google.zxing.Reader delegate -> delegate
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    void doDecodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map,java.util.List,int,int,int) -> doDecodeMultiple
    com.google.zxing.Result translateResultPoints(com.google.zxing.Result,int,int) -> translateResultPoints
com.google.zxing.multi.MultipleBarcodeReader -> com.google.zxing.multi.MultipleBarcodeReader:
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
com.google.zxing.multi.qrcode.QRCodeMultiReader -> com.google.zxing.multi.qrcode.QRCodeMultiReader:
    com.google.zxing.Result[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    java.util.List processStructuredAppend(java.util.List) -> processStructuredAppend
com.google.zxing.multi.qrcode.QRCodeMultiReader$1 -> com.google.zxing.multi.qrcode.QRCodeMultiReader$1:
com.google.zxing.multi.qrcode.QRCodeMultiReader$SAComparator -> com.google.zxing.multi.qrcode.QRCodeMultiReader$SAComparator:
    int compare(com.google.zxing.Result,com.google.zxing.Result) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.multi.qrcode.detector.MultiDetector -> com.google.zxing.multi.qrcode.detector.MultiDetector:
    com.google.zxing.common.DetectorResult[] EMPTY_DETECTOR_RESULTS -> EMPTY_DETECTOR_RESULTS
    com.google.zxing.common.DetectorResult[] detectMulti(java.util.Map) -> detectMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder:
    com.google.zxing.qrcode.detector.FinderPatternInfo[] EMPTY_RESULT_ARRAY -> EMPTY_RESULT_ARRAY
    float MAX_MODULE_COUNT_PER_EDGE -> MAX_MODULE_COUNT_PER_EDGE
    float MIN_MODULE_COUNT_PER_EDGE -> MIN_MODULE_COUNT_PER_EDGE
    float DIFF_MODSIZE_CUTOFF_PERCENT -> DIFF_MODSIZE_CUTOFF_PERCENT
    float DIFF_MODSIZE_CUTOFF -> DIFF_MODSIZE_CUTOFF
    com.google.zxing.qrcode.detector.FinderPattern[][] selectMutipleBestPatterns() -> selectMutipleBestPatterns
    com.google.zxing.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Map) -> findMulti
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1 -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$1:
com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.google.zxing.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.oned.CodaBarReader -> com.google.zxing.oned.CodaBarReader:
    float MAX_ACCEPTABLE -> MAX_ACCEPTABLE
    float PADDING -> PADDING
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int MIN_CHARACTER_LENGTH -> MIN_CHARACTER_LENGTH
    char[] STARTEND_ENCODING -> STARTEND_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    int counterLength -> counterLength
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void validatePattern(int) -> validatePattern
    void setCounters(com.google.zxing.common.BitArray) -> setCounters
    void counterAppend(int) -> counterAppend
    int findStartPattern() -> findStartPattern
    boolean arrayContains(char[],char) -> arrayContains
    int toNarrowWidePattern(int) -> toNarrowWidePattern
com.google.zxing.oned.CodaBarWriter -> com.google.zxing.oned.CodaBarWriter:
    char[] START_END_CHARS -> START_END_CHARS
    char[] ALT_START_END_CHARS -> ALT_START_END_CHARS
    char[] CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED -> CHARS_WHICH_ARE_TEN_LENGTH_EACH_AFTER_DECODED
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.Code128Reader -> com.google.zxing.oned.Code128Reader:
    int[][] CODE_PATTERNS -> CODE_PATTERNS
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int CODE_SHIFT -> CODE_SHIFT
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_A -> CODE_CODE_A
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_A -> CODE_FNC_4_A
    int CODE_FNC_4_B -> CODE_FNC_4_B
    int CODE_START_A -> CODE_START_A
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_STOP -> CODE_STOP
    int[] findStartPattern(com.google.zxing.common.BitArray) -> findStartPattern
    int decodeCode(com.google.zxing.common.BitArray,int[],int) -> decodeCode
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.Code128Writer -> com.google.zxing.oned.Code128Writer:
    int CODE_START_B -> CODE_START_B
    int CODE_START_C -> CODE_START_C
    int CODE_CODE_B -> CODE_CODE_B
    int CODE_CODE_C -> CODE_CODE_C
    int CODE_STOP -> CODE_STOP
    char ESCAPE_FNC_1 -> ESCAPE_FNC_1
    char ESCAPE_FNC_2 -> ESCAPE_FNC_2
    char ESCAPE_FNC_3 -> ESCAPE_FNC_3
    char ESCAPE_FNC_4 -> ESCAPE_FNC_4
    int CODE_FNC_1 -> CODE_FNC_1
    int CODE_FNC_2 -> CODE_FNC_2
    int CODE_FNC_3 -> CODE_FNC_3
    int CODE_FNC_4_B -> CODE_FNC_4_B
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
    boolean isDigits(java.lang.CharSequence,int,int) -> isDigits
com.google.zxing.oned.Code39Reader -> com.google.zxing.oned.Code39Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    boolean usingCheckDigit -> usingCheckDigit
    boolean extendedMode -> extendedMode
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[]) -> findAsteriskPattern
    int toNarrowWidePattern(int[]) -> toNarrowWidePattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
com.google.zxing.oned.Code39Writer -> com.google.zxing.oned.Code39Writer:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
    void toIntArray(int,int[]) -> toIntArray
com.google.zxing.oned.Code93Reader -> com.google.zxing.oned.Code93Reader:
    java.lang.String ALPHABET_STRING -> ALPHABET_STRING
    char[] ALPHABET -> ALPHABET
    int[] CHARACTER_ENCODINGS -> CHARACTER_ENCODINGS
    int ASTERISK_ENCODING -> ASTERISK_ENCODING
    java.lang.StringBuilder decodeRowResult -> decodeRowResult
    int[] counters -> counters
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    int[] findAsteriskPattern(com.google.zxing.common.BitArray) -> findAsteriskPattern
    int toPattern(int[]) -> toPattern
    char patternToChar(int) -> patternToChar
    java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    void checkChecksums(java.lang.CharSequence) -> checkChecksums
    void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
com.google.zxing.oned.EAN13Reader -> com.google.zxing.oned.EAN13Reader:
    int[] FIRST_DIGIT_ENCODINGS -> FIRST_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
com.google.zxing.oned.EAN13Writer -> com.google.zxing.oned.EAN13Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EAN8Reader -> com.google.zxing.oned.EAN8Reader:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.google.zxing.oned.EAN8Writer -> com.google.zxing.oned.EAN8Writer:
    int CODE_WIDTH -> CODE_WIDTH
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.EANManufacturerOrgSupport -> com.google.zxing.oned.EANManufacturerOrgSupport:
    java.util.List ranges -> ranges
    java.util.List countryIdentifiers -> countryIdentifiers
    java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
    void add(int[],java.lang.String) -> add
    void initIfNeeded() -> initIfNeeded
com.google.zxing.oned.ITFReader -> com.google.zxing.oned.ITFReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int W -> W
    int N -> N
    int[] DEFAULT_ALLOWED_LENGTHS -> DEFAULT_ALLOWED_LENGTHS
    int narrowLineWidth -> narrowLineWidth
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN_REVERSED -> END_PATTERN_REVERSED
    int[][] PATTERNS -> PATTERNS
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    int[] decodeStart(com.google.zxing.common.BitArray) -> decodeStart
    void validateQuietZone(com.google.zxing.common.BitArray,int) -> validateQuietZone
    int skipWhiteSpace(com.google.zxing.common.BitArray) -> skipWhiteSpace
    int[] decodeEnd(com.google.zxing.common.BitArray) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[]) -> findGuardPattern
    int decodeDigit(int[]) -> decodeDigit
com.google.zxing.oned.ITFWriter -> com.google.zxing.oned.ITFWriter:
    int[] START_PATTERN -> START_PATTERN
    int[] END_PATTERN -> END_PATTERN
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.MultiFormatOneDReader -> com.google.zxing.oned.MultiFormatOneDReader:
    com.google.zxing.oned.OneDReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.MultiFormatUPCEANReader -> com.google.zxing.oned.MultiFormatUPCEANReader:
    com.google.zxing.oned.UPCEANReader[] readers -> readers
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
com.google.zxing.oned.OneDReader -> com.google.zxing.oned.OneDReader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map) -> doDecode
    void recordPattern(com.google.zxing.common.BitArray,int,int[]) -> recordPattern
    void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[]) -> recordPatternInReverse
    float patternMatchVariance(int[],int[],float) -> patternMatchVariance
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
com.google.zxing.oned.OneDimensionalCodeWriter -> com.google.zxing.oned.OneDimensionalCodeWriter:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(boolean[],int,int,int) -> renderResult
    int appendPattern(boolean[],int,int[],boolean) -> appendPattern
    int getDefaultMargin() -> getDefaultMargin
    boolean[] encode(java.lang.String) -> encode
com.google.zxing.oned.UPCAReader -> com.google.zxing.oned.UPCAReader:
    com.google.zxing.oned.UPCEANReader ean13Reader -> ean13Reader
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    com.google.zxing.Result maybeReturnResult(com.google.zxing.Result) -> maybeReturnResult
com.google.zxing.oned.UPCAWriter -> com.google.zxing.oned.UPCAWriter:
    com.google.zxing.oned.EAN13Writer subWriter -> subWriter
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    java.lang.String preencode(java.lang.String) -> preencode
com.google.zxing.oned.UPCEANExtension2Support -> com.google.zxing.oned.UPCEANExtension2Support:
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.google.zxing.oned.UPCEANExtension5Support -> com.google.zxing.oned.UPCEANExtension5Support:
    int[] CHECK_DIGIT_ENCODINGS -> CHECK_DIGIT_ENCODINGS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[]) -> decodeRow
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    int determineCheckDigit(int) -> determineCheckDigit
    java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
    java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
com.google.zxing.oned.UPCEANExtensionSupport -> com.google.zxing.oned.UPCEANExtensionSupport:
    int[] EXTENSION_START_PATTERN -> EXTENSION_START_PATTERN
    com.google.zxing.oned.UPCEANExtension2Support twoSupport -> twoSupport
    com.google.zxing.oned.UPCEANExtension5Support fiveSupport -> fiveSupport
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int) -> decodeRow
com.google.zxing.oned.UPCEANReader -> com.google.zxing.oned.UPCEANReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_END_PATTERN -> START_END_PATTERN
    int[] MIDDLE_PATTERN -> MIDDLE_PATTERN
    int[][] L_PATTERNS -> L_PATTERNS
    int[][] L_AND_G_PATTERNS -> L_AND_G_PATTERNS
    java.lang.StringBuilder decodeRowStringBuffer -> decodeRowStringBuffer
    com.google.zxing.oned.UPCEANExtensionSupport extensionReader -> extensionReader
    com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport -> eanManSupport
    int[] findStartGuardPattern(com.google.zxing.common.BitArray) -> findStartGuardPattern
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map) -> decodeRow
    boolean checkChecksum(java.lang.String) -> checkChecksum
    boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> findGuardPattern
    int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][]) -> decodeDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
com.google.zxing.oned.UPCEANWriter -> com.google.zxing.oned.UPCEANWriter:
    int getDefaultMargin() -> getDefaultMargin
com.google.zxing.oned.UPCEReader -> com.google.zxing.oned.UPCEReader:
    int[] MIDDLE_END_PATTERN -> MIDDLE_END_PATTERN
    int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS -> NUMSYS_AND_CHECK_DIGIT_PATTERNS
    int[] decodeMiddleCounters -> decodeMiddleCounters
    int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    int[] decodeEnd(com.google.zxing.common.BitArray,int) -> decodeEnd
    boolean checkChecksum(java.lang.String) -> checkChecksum
    void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    com.google.zxing.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
com.google.zxing.oned.rss.AbstractRSSReader -> com.google.zxing.oned.rss.AbstractRSSReader:
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    float MIN_FINDER_PATTERN_RATIO -> MIN_FINDER_PATTERN_RATIO
    float MAX_FINDER_PATTERN_RATIO -> MAX_FINDER_PATTERN_RATIO
    int[] decodeFinderCounters -> decodeFinderCounters
    int[] dataCharacterCounters -> dataCharacterCounters
    float[] oddRoundingErrors -> oddRoundingErrors
    float[] evenRoundingErrors -> evenRoundingErrors
    int[] oddCounts -> oddCounts
    int[] evenCounts -> evenCounts
    int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    int[] getDataCharacterCounters() -> getDataCharacterCounters
    float[] getOddRoundingErrors() -> getOddRoundingErrors
    float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    int[] getOddCounts() -> getOddCounts
    int[] getEvenCounts() -> getEvenCounts
    int parseFinderValue(int[],int[][]) -> parseFinderValue
    int count(int[]) -> count
    void increment(int[],float[]) -> increment
    void decrement(int[],float[]) -> decrement
    boolean isFinderPattern(int[]) -> isFinderPattern
com.google.zxing.oned.rss.DataCharacter -> com.google.zxing.oned.rss.DataCharacter:
    int value -> value
    int checksumPortion -> checksumPortion
    int getValue() -> getValue
    int getChecksumPortion() -> getChecksumPortion
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.FinderPattern -> com.google.zxing.oned.rss.FinderPattern:
    int value -> value
    int[] startEnd -> startEnd
    com.google.zxing.ResultPoint[] resultPoints -> resultPoints
    int getValue() -> getValue
    int[] getStartEnd() -> getStartEnd
    com.google.zxing.ResultPoint[] getResultPoints() -> getResultPoints
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.Pair -> com.google.zxing.oned.rss.Pair:
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    int count -> count
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    int getCount() -> getCount
    void incrementCount() -> incrementCount
com.google.zxing.oned.rss.RSS14Reader -> com.google.zxing.oned.rss.RSS14Reader:
    int[] OUTSIDE_EVEN_TOTAL_SUBSET -> OUTSIDE_EVEN_TOTAL_SUBSET
    int[] INSIDE_ODD_TOTAL_SUBSET -> INSIDE_ODD_TOTAL_SUBSET
    int[] OUTSIDE_GSUM -> OUTSIDE_GSUM
    int[] INSIDE_GSUM -> INSIDE_GSUM
    int[] OUTSIDE_ODD_WIDEST -> OUTSIDE_ODD_WIDEST
    int[] INSIDE_ODD_WIDEST -> INSIDE_ODD_WIDEST
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    java.util.List possibleLeftPairs -> possibleLeftPairs
    java.util.List possibleRightPairs -> possibleRightPairs
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair) -> addOrTally
    void reset() -> reset
    com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> constructResult
    boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair) -> checkChecksum
    com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map) -> decodePair
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    int[] findFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> findFinderPattern
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.RSSUtils -> com.google.zxing.oned.rss.RSSUtils:
    int getRSSvalue(int[],int,boolean) -> getRSSvalue
    int combins(int,int) -> combins
com.google.zxing.oned.rss.expanded.BitArrayBuilder -> com.google.zxing.oned.rss.expanded.BitArrayBuilder:
    com.google.zxing.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.google.zxing.oned.rss.expanded.ExpandedPair -> com.google.zxing.oned.rss.expanded.ExpandedPair:
    boolean mayBeLast -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter leftChar -> leftChar
    com.google.zxing.oned.rss.DataCharacter rightChar -> rightChar
    com.google.zxing.oned.rss.FinderPattern finderPattern -> finderPattern
    boolean mayBeLast() -> mayBeLast
    com.google.zxing.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    com.google.zxing.oned.rss.DataCharacter getRightChar() -> getRightChar
    com.google.zxing.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    boolean mustBeLast() -> mustBeLast
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    int hashCode() -> hashCode
    int hashNotNull(java.lang.Object) -> hashNotNull
com.google.zxing.oned.rss.expanded.ExpandedRow -> com.google.zxing.oned.rss.expanded.ExpandedRow:
    java.util.List pairs -> pairs
    int rowNumber -> rowNumber
    boolean wasReversed -> wasReversed
    java.util.List getPairs() -> getPairs
    int getRowNumber() -> getRowNumber
    boolean isReversed() -> isReversed
    boolean isEquivalent(java.util.List) -> isEquivalent
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.zxing.oned.rss.expanded.RSSExpandedReader -> com.google.zxing.oned.rss.expanded.RSSExpandedReader:
    int[] SYMBOL_WIDEST -> SYMBOL_WIDEST
    int[] EVEN_TOTAL_SUBSET -> EVEN_TOTAL_SUBSET
    int[] GSUM -> GSUM
    int[][] FINDER_PATTERNS -> FINDER_PATTERNS
    int[][] WEIGHTS -> WEIGHTS
    int FINDER_PAT_A -> FINDER_PAT_A
    int FINDER_PAT_B -> FINDER_PAT_B
    int FINDER_PAT_C -> FINDER_PAT_C
    int FINDER_PAT_D -> FINDER_PAT_D
    int FINDER_PAT_E -> FINDER_PAT_E
    int FINDER_PAT_F -> FINDER_PAT_F
    int[][] FINDER_PATTERN_SEQUENCES -> FINDER_PATTERN_SEQUENCES
    int MAX_PAIRS -> MAX_PAIRS
    java.util.List pairs -> pairs
    java.util.List rows -> rows
    int[] startEnd -> startEnd
    boolean startFromEven -> startFromEven
    com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map) -> decodeRow
    void reset() -> reset
    java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray) -> decodeRow2pairs
    java.util.List checkRows(boolean) -> checkRows
    java.util.List checkRows(java.util.List,int) -> checkRows
    boolean isValidSequence(java.util.List) -> isValidSequence
    void storeRow(int,boolean) -> storeRow
    void removePartialRows(java.util.List,java.util.List) -> removePartialRows
    boolean isPartialRow(java.lang.Iterable,java.lang.Iterable) -> isPartialRow
    java.util.List getRows() -> getRows
    com.google.zxing.Result constructResult(java.util.List) -> constructResult
    boolean checkChecksum() -> checkChecksum
    int getNextSecondBar(com.google.zxing.common.BitArray,int) -> getNextSecondBar
    com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> retrieveNextPair
    void findNextPair(com.google.zxing.common.BitArray,java.util.List,int) -> findNextPair
    void reverseCounters(int[]) -> reverseCounters
    com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean) -> parseFoundFinderPattern
    com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    void adjustOddEvenCounts(int) -> adjustOddEvenCounts
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder -> com.google.zxing.oned.rss.expanded.decoders.AI013103decoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder:
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int LAST_DIGIT_SIZE -> LAST_DIGIT_SIZE
    int FIRST_THREE_DIGITS_SIZE -> FIRST_THREE_DIGITS_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    int DATE_SIZE -> DATE_SIZE
    java.lang.String dateCode -> dateCode
    java.lang.String firstAIdigits -> firstAIdigits
    java.lang.String parseInformation() -> parseInformation
    void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    int WEIGHT_SIZE -> WEIGHT_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.AI01decoder -> com.google.zxing.oned.rss.expanded.decoders.AI01decoder:
    int GTIN_SIZE -> GTIN_SIZE
    void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
    void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder -> com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder:
    void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
    void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    int checkWeight(int) -> checkWeight
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder -> generalDecoder
    com.google.zxing.common.BitArray getInformation() -> getInformation
    com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    java.lang.String parseInformation() -> parseInformation
    com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray) -> createDecoder
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder -> com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder:
    int HEADER_SIZE -> HEADER_SIZE
    java.lang.String parseInformation() -> parseInformation
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult -> com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult:
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation -> decodedInformation
    boolean finished -> finished
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    boolean isFinished() -> isFinished
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState:
    int position -> position
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding -> encoding
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    void incrementPosition(int) -> incrementPosition
    boolean isAlpha() -> isAlpha
    boolean isNumeric() -> isNumeric
    boolean isIsoIec646() -> isIsoIec646
    void setNumeric() -> setNumeric
    void setAlpha() -> setAlpha
    void setIsoIec646() -> setIsoIec646
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State -> com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State:
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC -> NUMERIC
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA -> ALPHA
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646 -> ISO_IEC_646
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] $VALUES -> $VALUES
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
com.google.zxing.oned.rss.expanded.decoders.DecodedChar -> com.google.zxing.oned.rss.expanded.decoders.DecodedChar:
    char value -> value
    char FNC1 -> FNC1
    char getValue() -> getValue
    boolean isFNC1() -> isFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation -> com.google.zxing.oned.rss.expanded.decoders.DecodedInformation:
    java.lang.String newString -> newString
    int remainingValue -> remainingValue
    boolean remaining -> remaining
    java.lang.String getNewString() -> getNewString
    boolean isRemaining() -> isRemaining
    int getRemainingValue() -> getRemainingValue
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric -> com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric:
    int firstDigit -> firstDigit
    int secondDigit -> secondDigit
    int FNC1 -> FNC1
    int getFirstDigit() -> getFirstDigit
    int getSecondDigit() -> getSecondDigit
    int getValue() -> getValue
    boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    boolean isSecondDigitFNC1() -> isSecondDigitFNC1
    boolean isAnyFNC1() -> isAnyFNC1
com.google.zxing.oned.rss.expanded.decoders.DecodedObject -> com.google.zxing.oned.rss.expanded.decoders.DecodedObject:
    int newPosition -> newPosition
    int getNewPosition() -> getNewPosition
com.google.zxing.oned.rss.expanded.decoders.FieldParser -> com.google.zxing.oned.rss.expanded.decoders.FieldParser:
    java.lang.Object VARIABLE_LENGTH -> VARIABLE_LENGTH
    java.lang.Object[][] TWO_DIGIT_DATA_LENGTH -> TWO_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_DATA_LENGTH -> THREE_DIGIT_DATA_LENGTH
    java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH -> THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
    java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH -> FOUR_DIGIT_DATA_LENGTH
    java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    com.google.zxing.common.BitArray information -> information
    com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current -> current
    java.lang.StringBuilder buffer -> buffer
    java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    boolean isStillNumeric(int) -> isStillNumeric
    com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int) -> extractNumericValueFromBitArray
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    boolean isStillIsoIec646(int) -> isStillIsoIec646
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    boolean isStillAlpha(int) -> isStillAlpha
    com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
com.google.zxing.pdf417.PDF417Common -> com.google.zxing.pdf417.PDF417Common:
    int NUMBER_OF_CODEWORDS -> NUMBER_OF_CODEWORDS
    int MAX_CODEWORDS_IN_BARCODE -> MAX_CODEWORDS_IN_BARCODE
    int MIN_ROWS_IN_BARCODE -> MIN_ROWS_IN_BARCODE
    int MAX_ROWS_IN_BARCODE -> MAX_ROWS_IN_BARCODE
    int MODULES_IN_CODEWORD -> MODULES_IN_CODEWORD
    int MODULES_IN_STOP_PATTERN -> MODULES_IN_STOP_PATTERN
    int BARS_IN_MODULE -> BARS_IN_MODULE
    int[] EMPTY_INT_ARRAY -> EMPTY_INT_ARRAY
    int[] SYMBOL_TABLE -> SYMBOL_TABLE
    int[] CODEWORD_TABLE -> CODEWORD_TABLE
    int getBitCountSum(int[]) -> getBitCountSum
    int[] toIntArray(java.util.Collection) -> toIntArray
    int getCodeword(int) -> getCodeword
com.google.zxing.pdf417.PDF417Reader -> com.google.zxing.pdf417.PDF417Reader:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap) -> decodeMultiple
    com.google.zxing.Result[] decodeMultiple(com.google.zxing.BinaryBitmap,java.util.Map) -> decodeMultiple
    com.google.zxing.Result[] decode(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> decode
    int getMaxWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMaxWidth
    int getMinWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> getMinWidth
    int getMaxCodewordWidth(com.google.zxing.ResultPoint[]) -> getMaxCodewordWidth
    int getMinCodewordWidth(com.google.zxing.ResultPoint[]) -> getMinCodewordWidth
    void reset() -> reset
com.google.zxing.pdf417.PDF417ResultMetadata -> com.google.zxing.pdf417.PDF417ResultMetadata:
    int segmentIndex -> segmentIndex
    java.lang.String fileId -> fileId
    int[] optionalData -> optionalData
    boolean lastSegment -> lastSegment
    int getSegmentIndex() -> getSegmentIndex
    void setSegmentIndex(int) -> setSegmentIndex
    java.lang.String getFileId() -> getFileId
    void setFileId(java.lang.String) -> setFileId
    int[] getOptionalData() -> getOptionalData
    void setOptionalData(int[]) -> setOptionalData
    boolean isLastSegment() -> isLastSegment
    void setLastSegment(boolean) -> setLastSegment
com.google.zxing.pdf417.PDF417Writer -> com.google.zxing.pdf417.PDF417Writer:
    int WHITE_SPACE -> WHITE_SPACE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix bitMatrixFromEncoder(com.google.zxing.pdf417.encoder.PDF417,java.lang.String,int,int,int) -> bitMatrixFromEncoder
    com.google.zxing.common.BitMatrix bitMatrixFrombitArray(byte[][],int) -> bitMatrixFrombitArray
    byte[][] rotateArray(byte[][]) -> rotateArray
com.google.zxing.pdf417.decoder.BarcodeMetadata -> com.google.zxing.pdf417.decoder.BarcodeMetadata:
    int columnCount -> columnCount
    int errorCorrectionLevel -> errorCorrectionLevel
    int rowCountUpperPart -> rowCountUpperPart
    int rowCountLowerPart -> rowCountLowerPart
    int rowCount -> rowCount
    int getColumnCount() -> getColumnCount
    int getErrorCorrectionLevel() -> getErrorCorrectionLevel
    int getRowCount() -> getRowCount
    int getRowCountUpperPart() -> getRowCountUpperPart
    int getRowCountLowerPart() -> getRowCountLowerPart
com.google.zxing.pdf417.decoder.BarcodeValue -> com.google.zxing.pdf417.decoder.BarcodeValue:
    java.util.Map values -> values
    void setValue(int) -> setValue
    int[] getValue() -> getValue
    java.lang.Integer getConfidence(int) -> getConfidence
com.google.zxing.pdf417.decoder.BoundingBox -> com.google.zxing.pdf417.decoder.BoundingBox:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPoint topLeft -> topLeft
    com.google.zxing.ResultPoint bottomLeft -> bottomLeft
    com.google.zxing.ResultPoint topRight -> topRight
    com.google.zxing.ResultPoint bottomRight -> bottomRight
    int minX -> minX
    int maxX -> maxX
    int minY -> minY
    int maxY -> maxY
    void init(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> init
    com.google.zxing.pdf417.decoder.BoundingBox merge(com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.pdf417.decoder.BoundingBox) -> merge
    com.google.zxing.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean) -> addMissingRows
    void calculateMinMaxValues() -> calculateMinMaxValues
    int getMinX() -> getMinX
    int getMaxX() -> getMaxX
    int getMinY() -> getMinY
    int getMaxY() -> getMaxY
    com.google.zxing.ResultPoint getTopLeft() -> getTopLeft
    com.google.zxing.ResultPoint getTopRight() -> getTopRight
    com.google.zxing.ResultPoint getBottomLeft() -> getBottomLeft
    com.google.zxing.ResultPoint getBottomRight() -> getBottomRight
com.google.zxing.pdf417.decoder.Codeword -> com.google.zxing.pdf417.decoder.Codeword:
    int BARCODE_ROW_UNKNOWN -> BARCODE_ROW_UNKNOWN
    int startX -> startX
    int endX -> endX
    int bucket -> bucket
    int value -> value
    int rowNumber -> rowNumber
    boolean hasValidRowNumber() -> hasValidRowNumber
    boolean isValidRowNumber(int) -> isValidRowNumber
    void setRowNumberAsRowIndicatorColumn() -> setRowNumberAsRowIndicatorColumn
    int getWidth() -> getWidth
    int getStartX() -> getStartX
    int getEndX() -> getEndX
    int getBucket() -> getBucket
    int getValue() -> getValue
    int getRowNumber() -> getRowNumber
    void setRowNumber(int) -> setRowNumber
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DecodedBitStreamParser -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser:
    int TEXT_COMPACTION_MODE_LATCH -> TEXT_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH -> BYTE_COMPACTION_MODE_LATCH
    int NUMERIC_COMPACTION_MODE_LATCH -> NUMERIC_COMPACTION_MODE_LATCH
    int BYTE_COMPACTION_MODE_LATCH_6 -> BYTE_COMPACTION_MODE_LATCH_6
    int BEGIN_MACRO_PDF417_CONTROL_BLOCK -> BEGIN_MACRO_PDF417_CONTROL_BLOCK
    int BEGIN_MACRO_PDF417_OPTIONAL_FIELD -> BEGIN_MACRO_PDF417_OPTIONAL_FIELD
    int MACRO_PDF417_TERMINATOR -> MACRO_PDF417_TERMINATOR
    int MODE_SHIFT_TO_BYTE_COMPACTION_MODE -> MODE_SHIFT_TO_BYTE_COMPACTION_MODE
    int MAX_NUMERIC_CODEWORDS -> MAX_NUMERIC_CODEWORDS
    int PL -> PL
    int LL -> LL
    int AS -> AS
    int ML -> ML
    int AL -> AL
    int PS -> PS
    int PAL -> PAL
    char[] PUNCT_CHARS -> PUNCT_CHARS
    char[] MIXED_CHARS -> MIXED_CHARS
    java.math.BigInteger[] EXP900 -> EXP900
    int NUMBER_OF_SEQUENCE_CODEWORDS -> NUMBER_OF_SEQUENCE_CODEWORDS
    com.google.zxing.common.DecoderResult decode(int[],java.lang.String) -> decode
    int decodeMacroBlock(int[],int,com.google.zxing.pdf417.PDF417ResultMetadata) -> decodeMacroBlock
    int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
    void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    int byteCompaction(int,int[],int,java.lang.StringBuilder) -> byteCompaction
    int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1 -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1:
    int[] $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode -> $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode -> com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode:
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA -> ALPHA
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER -> LOWER
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED -> MIXED
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT -> PUNCT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT -> ALPHA_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT -> PUNCT_SHIFT
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] $VALUES -> $VALUES
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
    com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.decoder.DetectionResult -> com.google.zxing.pdf417.decoder.DetectionResult:
    int ADJUST_ROW_NUMBER_SKIP -> ADJUST_ROW_NUMBER_SKIP
    com.google.zxing.pdf417.decoder.BarcodeMetadata barcodeMetadata -> barcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] detectionResultColumns -> detectionResultColumns
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    int barcodeColumnCount -> barcodeColumnCount
    com.google.zxing.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns() -> getDetectionResultColumns
    void adjustIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.DetectionResultColumn) -> adjustIndicatorColumnRowNumbers
    int adjustRowNumbers() -> adjustRowNumbers
    int adjustRowNumbersByRow() -> adjustRowNumbersByRow
    void adjustRowNumbersFromBothRI() -> adjustRowNumbersFromBothRI
    int adjustRowNumbersFromRRI() -> adjustRowNumbersFromRRI
    int adjustRowNumbersFromLRI() -> adjustRowNumbersFromLRI
    int adjustRowNumberIfValid(int,int,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumberIfValid
    void adjustRowNumbers(int,int,com.google.zxing.pdf417.decoder.Codeword[]) -> adjustRowNumbers
    boolean adjustRowNumber(com.google.zxing.pdf417.decoder.Codeword,com.google.zxing.pdf417.decoder.Codeword) -> adjustRowNumber
    int getBarcodeColumnCount() -> getBarcodeColumnCount
    int getBarcodeRowCount() -> getBarcodeRowCount
    int getBarcodeECLevel() -> getBarcodeECLevel
    void setBoundingBox(com.google.zxing.pdf417.decoder.BoundingBox) -> setBoundingBox
    com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    void setDetectionResultColumn(int,com.google.zxing.pdf417.decoder.DetectionResultColumn) -> setDetectionResultColumn
    com.google.zxing.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int) -> getDetectionResultColumn
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultColumn -> com.google.zxing.pdf417.decoder.DetectionResultColumn:
    int MAX_NEARBY_DISTANCE -> MAX_NEARBY_DISTANCE
    com.google.zxing.pdf417.decoder.BoundingBox boundingBox -> boundingBox
    com.google.zxing.pdf417.decoder.Codeword[] codewords -> codewords
    com.google.zxing.pdf417.decoder.Codeword getCodewordNearby(int) -> getCodewordNearby
    int imageRowToCodewordIndex(int) -> imageRowToCodewordIndex
    void setCodeword(int,com.google.zxing.pdf417.decoder.Codeword) -> setCodeword
    com.google.zxing.pdf417.decoder.Codeword getCodeword(int) -> getCodeword
    com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    com.google.zxing.pdf417.decoder.Codeword[] getCodewords() -> getCodewords
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn -> com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn:
    boolean isLeft -> isLeft
    void setRowNumbers() -> setRowNumbers
    int adjustCompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustCompleteIndicatorColumnRowNumbers
    int[] getRowHeights() -> getRowHeights
    int adjustIncompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata) -> adjustIncompleteIndicatorColumnRowNumbers
    com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata() -> getBarcodeMetadata
    void removeIncorrectCodewords(com.google.zxing.pdf417.decoder.Codeword[],com.google.zxing.pdf417.decoder.BarcodeMetadata) -> removeIncorrectCodewords
    boolean isLeft() -> isLeft
    java.lang.String toString() -> toString
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder -> com.google.zxing.pdf417.decoder.PDF417CodewordDecoder:
    float[][] RATIOS_TABLE -> RATIOS_TABLE
    int getDecodedValue(int[]) -> getDecodedValue
    int[] sampleBitCounts(int[]) -> sampleBitCounts
    int getDecodedCodewordValue(int[]) -> getDecodedCodewordValue
    int getBitValue(int[]) -> getBitValue
    int getClosestDecodedValue(int[]) -> getClosestDecodedValue
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder -> com.google.zxing.pdf417.decoder.PDF417ScanningDecoder:
    int CODEWORD_SKEW_SIZE -> CODEWORD_SKEW_SIZE
    int MAX_ERRORS -> MAX_ERRORS
    int MAX_EC_CODEWORDS -> MAX_EC_CODEWORDS
    com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection -> errorCorrection
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int) -> decode
    com.google.zxing.pdf417.decoder.DetectionResult merge(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> merge
    com.google.zxing.pdf417.decoder.BoundingBox adjustBoundingBox(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> adjustBoundingBox
    int getMax(int[]) -> getMax
    com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn) -> getBarcodeMetadata
    com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.google.zxing.common.BitMatrix,com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.ResultPoint,boolean,int,int) -> getRowIndicatorColumn
    void adjustCodewordCount(com.google.zxing.pdf417.decoder.DetectionResult,com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> adjustCodewordCount
    com.google.zxing.common.DecoderResult createDecoderResult(com.google.zxing.pdf417.decoder.DetectionResult) -> createDecoderResult
    com.google.zxing.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][]) -> createDecoderResultFromAmbiguousValues
    com.google.zxing.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.google.zxing.pdf417.decoder.DetectionResult) -> createBarcodeMatrix
    boolean isValidBarcodeColumn(com.google.zxing.pdf417.decoder.DetectionResult,int) -> isValidBarcodeColumn
    int getStartColumn(com.google.zxing.pdf417.decoder.DetectionResult,int,int,boolean) -> getStartColumn
    com.google.zxing.pdf417.decoder.Codeword detectCodeword(com.google.zxing.common.BitMatrix,int,int,boolean,int,int,int,int) -> detectCodeword
    int[] getModuleBitCount(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> getModuleBitCount
    int getNumberOfECCodeWords(int) -> getNumberOfECCodeWords
    int adjustCodewordStartColumn(com.google.zxing.common.BitMatrix,int,int,boolean,int,int) -> adjustCodewordStartColumn
    boolean checkCodewordSkew(int,int,int) -> checkCodewordSkew
    com.google.zxing.common.DecoderResult decodeCodewords(int[],int,int[]) -> decodeCodewords
    int correctErrors(int[],int[],int) -> correctErrors
    void verifyCodewordCount(int[],int) -> verifyCodewordCount
    int[] getBitCountForCodeword(int) -> getBitCountForCodeword
    int getCodewordBucketNumber(int) -> getCodewordBucketNumber
    int getCodewordBucketNumber(int[]) -> getCodewordBucketNumber
    java.lang.String toString(com.google.zxing.pdf417.decoder.BarcodeValue[][]) -> toString
com.google.zxing.pdf417.decoder.ec.ErrorCorrection -> com.google.zxing.pdf417.decoder.ec.ErrorCorrection:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int decode(int[],int,int[]) -> decode
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int) -> runEuclideanAlgorithm
    int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> findErrorLocations
    int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[]) -> findErrorMagnitudes
com.google.zxing.pdf417.decoder.ec.ModulusGF -> com.google.zxing.pdf417.decoder.ec.ModulusGF:
    com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF -> PDF417_GF
    int[] expTable -> expTable
    int[] logTable -> logTable
    com.google.zxing.pdf417.decoder.ec.ModulusPoly zero -> zero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly one -> one
    int modulus -> modulus
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero() -> getZero
    com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne() -> getOne
    com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> buildMonomial
    int add(int,int) -> add
    int subtract(int,int) -> subtract
    int exp(int) -> exp
    int log(int) -> log
    int inverse(int) -> inverse
    int multiply(int,int) -> multiply
    int getSize() -> getSize
com.google.zxing.pdf417.decoder.ec.ModulusPoly -> com.google.zxing.pdf417.decoder.ec.ModulusPoly:
    com.google.zxing.pdf417.decoder.ec.ModulusGF field -> field
    int[] coefficients -> coefficients
    int[] getCoefficients() -> getCoefficients
    int getDegree() -> getDegree
    boolean isZero() -> isZero
    int getCoefficient(int) -> getCoefficient
    int evaluateAt(int) -> evaluateAt
    com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> add
    com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> subtract
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly negative() -> negative
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int) -> multiply
    com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    com.google.zxing.pdf417.decoder.ec.ModulusPoly[] divide(com.google.zxing.pdf417.decoder.ec.ModulusPoly) -> divide
    java.lang.String toString() -> toString
com.google.zxing.pdf417.detector.Detector -> com.google.zxing.pdf417.detector.Detector:
    int[] INDEXES_START_PATTERN -> INDEXES_START_PATTERN
    int[] INDEXES_STOP_PATTERN -> INDEXES_STOP_PATTERN
    float MAX_AVG_VARIANCE -> MAX_AVG_VARIANCE
    float MAX_INDIVIDUAL_VARIANCE -> MAX_INDIVIDUAL_VARIANCE
    int[] START_PATTERN -> START_PATTERN
    int[] STOP_PATTERN -> STOP_PATTERN
    int MAX_PIXEL_DRIFT -> MAX_PIXEL_DRIFT
    int MAX_PATTERN_DRIFT -> MAX_PATTERN_DRIFT
    int SKIPPED_ROW_COUNT_MAX -> SKIPPED_ROW_COUNT_MAX
    int ROW_STEP -> ROW_STEP
    int BARCODE_MIN_HEIGHT -> BARCODE_MIN_HEIGHT
    com.google.zxing.pdf417.detector.PDF417DetectorResult detect(com.google.zxing.BinaryBitmap,java.util.Map,boolean) -> detect
    java.util.List detect(boolean,com.google.zxing.common.BitMatrix) -> detect
    com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,int,int) -> findVertices
    void copyToResult(com.google.zxing.ResultPoint[],com.google.zxing.ResultPoint[],int[]) -> copyToResult
    com.google.zxing.ResultPoint[] findRowsWithPattern(com.google.zxing.common.BitMatrix,int,int,int,int,int[]) -> findRowsWithPattern
    int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    float patternMatchVariance(int[],int[],float) -> patternMatchVariance
com.google.zxing.pdf417.detector.PDF417DetectorResult -> com.google.zxing.pdf417.detector.PDF417DetectorResult:
    com.google.zxing.common.BitMatrix bits -> bits
    java.util.List points -> points
    com.google.zxing.common.BitMatrix getBits() -> getBits
    java.util.List getPoints() -> getPoints
com.google.zxing.pdf417.encoder.BarcodeMatrix -> com.google.zxing.pdf417.encoder.BarcodeMatrix:
    com.google.zxing.pdf417.encoder.BarcodeRow[] matrix -> matrix
    int currentRow -> currentRow
    int height -> height
    int width -> width
    void set(int,int,byte) -> set
    void startRow() -> startRow
    com.google.zxing.pdf417.encoder.BarcodeRow getCurrentRow() -> getCurrentRow
    byte[][] getMatrix() -> getMatrix
    byte[][] getScaledMatrix(int,int) -> getScaledMatrix
com.google.zxing.pdf417.encoder.BarcodeRow -> com.google.zxing.pdf417.encoder.BarcodeRow:
    byte[] row -> row
    int currentLocation -> currentLocation
    void set(int,byte) -> set
    void set(int,boolean) -> set
    void addBar(boolean,int) -> addBar
    byte[] getScaledRow(int) -> getScaledRow
com.google.zxing.pdf417.encoder.Compaction -> com.google.zxing.pdf417.encoder.Compaction:
    com.google.zxing.pdf417.encoder.Compaction AUTO -> AUTO
    com.google.zxing.pdf417.encoder.Compaction TEXT -> TEXT
    com.google.zxing.pdf417.encoder.Compaction BYTE -> BYTE
    com.google.zxing.pdf417.encoder.Compaction NUMERIC -> NUMERIC
    com.google.zxing.pdf417.encoder.Compaction[] $VALUES -> $VALUES
    com.google.zxing.pdf417.encoder.Compaction[] values() -> values
    com.google.zxing.pdf417.encoder.Compaction valueOf(java.lang.String) -> valueOf
com.google.zxing.pdf417.encoder.Dimensions -> com.google.zxing.pdf417.encoder.Dimensions:
    int minCols -> minCols
    int maxCols -> maxCols
    int minRows -> minRows
    int maxRows -> maxRows
    int getMinCols() -> getMinCols
    int getMaxCols() -> getMaxCols
    int getMinRows() -> getMinRows
    int getMaxRows() -> getMaxRows
com.google.zxing.pdf417.encoder.PDF417 -> com.google.zxing.pdf417.encoder.PDF417:
    int START_PATTERN -> START_PATTERN
    int STOP_PATTERN -> STOP_PATTERN
    int[][] CODEWORD_TABLE -> CODEWORD_TABLE
    float PREFERRED_RATIO -> PREFERRED_RATIO
    float DEFAULT_MODULE_WIDTH -> DEFAULT_MODULE_WIDTH
    float HEIGHT -> HEIGHT
    com.google.zxing.pdf417.encoder.BarcodeMatrix barcodeMatrix -> barcodeMatrix
    boolean compact -> compact
    com.google.zxing.pdf417.encoder.Compaction compaction -> compaction
    java.nio.charset.Charset encoding -> encoding
    int minCols -> minCols
    int maxCols -> maxCols
    int maxRows -> maxRows
    int minRows -> minRows
    com.google.zxing.pdf417.encoder.BarcodeMatrix getBarcodeMatrix() -> getBarcodeMatrix
    int calculateNumberOfRows(int,int,int) -> calculateNumberOfRows
    int getNumberOfPadCodewords(int,int,int,int) -> getNumberOfPadCodewords
    void encodeChar(int,int,com.google.zxing.pdf417.encoder.BarcodeRow) -> encodeChar
    void encodeLowLevel(java.lang.CharSequence,int,int,int,com.google.zxing.pdf417.encoder.BarcodeMatrix) -> encodeLowLevel
    void generateBarcodeLogic(java.lang.String,int) -> generateBarcodeLogic
    int[] determineDimensions(int,int) -> determineDimensions
    void setDimensions(int,int,int,int) -> setDimensions
    void setCompaction(com.google.zxing.pdf417.encoder.Compaction) -> setCompaction
    void setCompact(boolean) -> setCompact
    void setEncoding(java.nio.charset.Charset) -> setEncoding
com.google.zxing.pdf417.encoder.PDF417ErrorCorrection -> com.google.zxing.pdf417.encoder.PDF417ErrorCorrection:
    int[][] EC_COEFFICIENTS -> EC_COEFFICIENTS
    int getErrorCorrectionCodewordCount(int) -> getErrorCorrectionCodewordCount
    int getRecommendedMinimumErrorCorrectionLevel(int) -> getRecommendedMinimumErrorCorrectionLevel
    java.lang.String generateErrorCorrection(java.lang.CharSequence,int) -> generateErrorCorrection
com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder -> com.google.zxing.pdf417.encoder.PDF417HighLevelEncoder:
    int TEXT_COMPACTION -> TEXT_COMPACTION
    int BYTE_COMPACTION -> BYTE_COMPACTION
    int NUMERIC_COMPACTION -> NUMERIC_COMPACTION
    int SUBMODE_ALPHA -> SUBMODE_ALPHA
    int SUBMODE_LOWER -> SUBMODE_LOWER
    int SUBMODE_MIXED -> SUBMODE_MIXED
    int SUBMODE_PUNCTUATION -> SUBMODE_PUNCTUATION
    int LATCH_TO_TEXT -> LATCH_TO_TEXT
    int LATCH_TO_BYTE_PADDED -> LATCH_TO_BYTE_PADDED
    int LATCH_TO_NUMERIC -> LATCH_TO_NUMERIC
    int SHIFT_TO_BYTE -> SHIFT_TO_BYTE
    int LATCH_TO_BYTE -> LATCH_TO_BYTE
    int ECI_USER_DEFINED -> ECI_USER_DEFINED
    int ECI_GENERAL_PURPOSE -> ECI_GENERAL_PURPOSE
    int ECI_CHARSET -> ECI_CHARSET
    byte[] TEXT_MIXED_RAW -> TEXT_MIXED_RAW
    byte[] TEXT_PUNCTUATION_RAW -> TEXT_PUNCTUATION_RAW
    byte[] MIXED -> MIXED
    byte[] PUNCTUATION -> PUNCTUATION
    java.util.List DEFAULT_ENCODING_NAMES -> DEFAULT_ENCODING_NAMES
    java.lang.String encodeHighLevel(java.lang.String,com.google.zxing.pdf417.encoder.Compaction,java.nio.charset.Charset) -> encodeHighLevel
    byte[] toBytes(java.lang.String,java.nio.charset.Charset) -> toBytes
    int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> encodeText
    void encodeBinary(byte[],int,int,int,java.lang.StringBuilder) -> encodeBinary
    void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder) -> encodeNumeric
    boolean isDigit(char) -> isDigit
    boolean isAlphaUpper(char) -> isAlphaUpper
    boolean isAlphaLower(char) -> isAlphaLower
    boolean isMixed(char) -> isMixed
    boolean isPunctuation(char) -> isPunctuation
    boolean isText(char) -> isText
    int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    int determineConsecutiveTextCount(java.lang.CharSequence,int) -> determineConsecutiveTextCount
    int determineConsecutiveBinaryCount(java.lang.CharSequence,byte[],int) -> determineConsecutiveBinaryCount
    void encodingECI(int,java.lang.StringBuilder) -> encodingECI
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.qrcode.QRCodeReader:
    com.google.zxing.ResultPoint[] NO_POINTS -> NO_POINTS
    com.google.zxing.qrcode.decoder.Decoder decoder -> decoder
    com.google.zxing.qrcode.decoder.Decoder getDecoder() -> getDecoder
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap) -> decode
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> decode
    void reset() -> reset
    com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix) -> extractPureBits
    float moduleSize(int[],com.google.zxing.common.BitMatrix) -> moduleSize
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.qrcode.QRCodeWriter:
    int QUIET_ZONE_SIZE -> QUIET_ZONE_SIZE
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int) -> encode
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> encode
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int,int) -> renderResult
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.qrcode.decoder.BitMatrixParser:
    com.google.zxing.common.BitMatrix bitMatrix -> bitMatrix
    com.google.zxing.qrcode.decoder.Version parsedVersion -> parsedVersion
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> parsedFormatInfo
    boolean mirror -> mirror
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    com.google.zxing.qrcode.decoder.Version readVersion() -> readVersion
    int copyBit(int,int,int) -> copyBit
    byte[] readCodewords() -> readCodewords
    void remask() -> remask
    void setMirror(boolean) -> setMirror
    void mirror() -> mirror
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.qrcode.decoder.DataBlock:
    int numDataCodewords -> numDataCodewords
    byte[] codewords -> codewords
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    int getNumDataCodewords() -> getNumDataCodewords
    byte[] getCodewords() -> getCodewords
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.qrcode.decoder.DataMask:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> DATA_MASKS
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> unmaskBitMatrix
    boolean isMasked(int,int) -> isMasked
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> forReference
com.google.zxing.qrcode.decoder.DataMask$1 -> com.google.zxing.qrcode.decoder.DataMask$1:
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.qrcode.decoder.DataMask$DataMask000:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.qrcode.decoder.DataMask$DataMask001:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.qrcode.decoder.DataMask$DataMask010:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.qrcode.decoder.DataMask$DataMask011:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.qrcode.decoder.DataMask$DataMask100:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.qrcode.decoder.DataMask$DataMask101:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.qrcode.decoder.DataMask$DataMask110:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.qrcode.decoder.DataMask$DataMask111:
    boolean isMasked(int,int) -> isMasked
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.qrcode.decoder.DecodedBitStreamParser:
    char[] ALPHANUMERIC_CHARS -> ALPHANUMERIC_CHARS
    int GB2312_SUBSET -> GB2312_SUBSET
    com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    char toAlphaNumericChar(int) -> toAlphaNumericChar
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    int parseECIValue(com.google.zxing.common.BitSource) -> parseECIValue
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.qrcode.decoder.Decoder:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> rsDecoder
    com.google.zxing.common.DecoderResult decode(boolean[][]) -> decode
    com.google.zxing.common.DecoderResult decode(boolean[][],java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map) -> decode
    com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map) -> decode
    void correctErrors(byte[],int) -> correctErrors
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> L
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> M
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> Q
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> H
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> FOR_BITS
    int bits -> bits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
    int getBits() -> getBits
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.qrcode.decoder.FormatInformation:
    int FORMAT_INFO_MASK_QR -> FORMAT_INFO_MASK_QR
    int[][] FORMAT_INFO_DECODE_LOOKUP -> FORMAT_INFO_DECODE_LOOKUP
    int[] BITS_SET_IN_HALF_BYTE -> BITS_SET_IN_HALF_BYTE
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> errorCorrectionLevel
    byte dataMask -> dataMask
    int numBitsDiffering(int,int) -> numBitsDiffering
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    byte getDataMask() -> getDataMask
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.qrcode.decoder.Mode:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> TERMINATOR
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> NUMERIC
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> ALPHANUMERIC
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> STRUCTURED_APPEND
    com.google.zxing.qrcode.decoder.Mode BYTE -> BYTE
    com.google.zxing.qrcode.decoder.Mode ECI -> ECI
    com.google.zxing.qrcode.decoder.Mode KANJI -> KANJI
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> FNC1_FIRST_POSITION
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> FNC1_SECOND_POSITION
    com.google.zxing.qrcode.decoder.Mode HANZI -> HANZI
    int[] characterCountBitsForVersions -> characterCountBitsForVersions
    int bits -> bits
    com.google.zxing.qrcode.decoder.Mode[] $VALUES -> $VALUES
    com.google.zxing.qrcode.decoder.Mode[] values() -> values
    com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> forBits
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> getCharacterCountBits
    int getBits() -> getBits
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData -> com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData:
    boolean mirrored -> mirrored
    boolean isMirrored() -> isMirrored
    void applyMirroredCorrection(com.google.zxing.ResultPoint[]) -> applyMirroredCorrection
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.qrcode.decoder.Version:
    int[] VERSION_DECODE_INFO -> VERSION_DECODE_INFO
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> VERSIONS
    int versionNumber -> versionNumber
    int[] alignmentPatternCenters -> alignmentPatternCenters
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> ecBlocks
    int totalCodewords -> totalCodewords
    int getVersionNumber() -> getVersionNumber
    int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    int getTotalCodewords() -> getTotalCodewords
    int getDimensionForVersion() -> getDimensionForVersion
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> buildVersions
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.qrcode.decoder.Version$ECB:
    int count -> count
    int dataCodewords -> dataCodewords
    int getCount() -> getCount
    int getDataCodewords() -> getDataCodewords
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.qrcode.decoder.Version$ECBlocks:
    int ecCodewordsPerBlock -> ecCodewordsPerBlock
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> ecBlocks
    int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    int getNumBlocks() -> getNumBlocks
    int getTotalECCodewords() -> getTotalECCodewords
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.qrcode.detector.AlignmentPattern:
    float estimatedModuleSize -> estimatedModuleSize
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.qrcode.detector.AlignmentPatternFinder:
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    int startX -> startX
    int startY -> startY
    int width -> width
    int height -> height
    float moduleSize -> moduleSize
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.qrcode.detector.Detector:
    com.google.zxing.common.BitMatrix image -> image
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    com.google.zxing.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    com.google.zxing.common.DetectorResult detect() -> detect
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> detect
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int) -> createTransform
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int) -> sampleGrid
    int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float) -> computeDimension
    float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSize
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> calculateModuleSizeOneWay
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.qrcode.detector.FinderPattern:
    float estimatedModuleSize -> estimatedModuleSize
    int count -> count
    float getEstimatedModuleSize() -> getEstimatedModuleSize
    int getCount() -> getCount
    boolean aboutEquals(float,float,float) -> aboutEquals
    com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.qrcode.detector.FinderPatternFinder:
    int CENTER_QUORUM -> CENTER_QUORUM
    int MIN_SKIP -> MIN_SKIP
    int MAX_MODULES -> MAX_MODULES
    com.google.zxing.common.BitMatrix image -> image
    java.util.List possibleCenters -> possibleCenters
    boolean hasSkipped -> hasSkipped
    int[] crossCheckStateCount -> crossCheckStateCount
    com.google.zxing.ResultPointCallback resultPointCallback -> resultPointCallback
    com.google.zxing.common.BitMatrix getImage() -> getImage
    java.util.List getPossibleCenters() -> getPossibleCenters
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    float centerFromEnd(int[],int) -> centerFromEnd
    boolean foundPatternCross(int[]) -> foundPatternCross
    int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    boolean crossCheckDiagonal(int,int,int,int) -> crossCheckDiagonal
    float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    boolean handlePossibleCenter(int[],int,int,boolean) -> handlePossibleCenter
    int findRowSkip() -> findRowSkip
    boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.google.zxing.qrcode.detector.FinderPatternFinder$1 -> com.google.zxing.qrcode.detector.FinderPatternFinder$1:
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    float average -> average
    int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.qrcode.detector.FinderPatternInfo:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> bottomLeft
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> topLeft
    com.google.zxing.qrcode.detector.FinderPattern topRight -> topRight
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.qrcode.encoder.BlockPair:
    byte[] dataBytes -> dataBytes
    byte[] errorCorrectionBytes -> errorCorrectionBytes
    byte[] getDataBytes() -> getDataBytes
    byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.qrcode.encoder.ByteMatrix:
    byte[][] bytes -> bytes
    int width -> width
    int height -> height
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    byte get(int,int) -> get
    byte[][] getArray() -> getArray
    void set(int,int,byte) -> set
    void set(int,int,int) -> set
    void set(int,int,boolean) -> set
    void clear(byte) -> clear
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.qrcode.encoder.Encoder:
    int[] ALPHANUMERIC_TABLE -> ALPHANUMERIC_TABLE
    java.lang.String DEFAULT_BYTE_MODE_ENCODING -> DEFAULT_BYTE_MODE_ENCODING
    int calculateMaskPenalty(com.google.zxing.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> encode
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> encode
    int getAlphanumericCode(int) -> getAlphanumericCode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    com.google.zxing.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    com.google.zxing.qrcode.decoder.Version chooseVersion(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> chooseVersion
    void terminateBits(int,com.google.zxing.common.BitArray) -> terminateBits
    void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    com.google.zxing.common.BitArray interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int) -> interleaveWithECBytes
    byte[] generateECBytes(byte[],int) -> generateECBytes
    void appendModeInfo(com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendModeInfo
    void appendLengthInfo(int,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray) -> appendLengthInfo
    void appendBytes(java.lang.String,com.google.zxing.qrcode.decoder.Mode,com.google.zxing.common.BitArray,java.lang.String) -> appendBytes
    void appendNumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendNumericBytes
    void appendAlphanumericBytes(java.lang.CharSequence,com.google.zxing.common.BitArray) -> appendAlphanumericBytes
    void append8BitBytes(java.lang.String,com.google.zxing.common.BitArray,java.lang.String) -> append8BitBytes
    void appendKanjiBytes(java.lang.String,com.google.zxing.common.BitArray) -> appendKanjiBytes
    void appendECI(com.google.zxing.common.CharacterSetECI,com.google.zxing.common.BitArray) -> appendECI
com.google.zxing.qrcode.encoder.Encoder$1 -> com.google.zxing.qrcode.encoder.Encoder$1:
    int[] $SwitchMap$com$google$zxing$qrcode$decoder$Mode -> $SwitchMap$com$google$zxing$qrcode$decoder$Mode
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.qrcode.encoder.MaskUtil:
    int N1 -> N1
    int N2 -> N2
    int N3 -> N3
    int N4 -> N4
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    int applyMaskPenaltyRule2(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    int applyMaskPenaltyRule3(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    boolean isWhiteHorizontal(byte[],int,int) -> isWhiteHorizontal
    boolean isWhiteVertical(byte[][],int,int,int) -> isWhiteVertical
    int applyMaskPenaltyRule4(com.google.zxing.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.qrcode.encoder.MatrixUtil:
    int[][] POSITION_DETECTION_PATTERN -> POSITION_DETECTION_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN -> POSITION_ADJUSTMENT_PATTERN
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE
    int[][] TYPE_INFO_COORDINATES -> TYPE_INFO_COORDINATES
    int VERSION_INFO_POLY -> VERSION_INFO_POLY
    int TYPE_INFO_POLY -> TYPE_INFO_POLY
    int TYPE_INFO_MASK_PATTERN -> TYPE_INFO_MASK_PATTERN
    void clearMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> clearMatrix
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> buildMatrix
    void embedBasicPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    void embedTypeInfo(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    void maybeEmbedVersionInfo(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDataBits
    int findMSBSet(int) -> findMSBSet
    int calculateBCHCode(int,int) -> calculateBCHCode
    void makeTypeInfoBits(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,int,com.google.zxing.common.BitArray) -> makeTypeInfoBits
    void makeVersionInfoBits(com.google.zxing.qrcode.decoder.Version,com.google.zxing.common.BitArray) -> makeVersionInfoBits
    boolean isEmpty(int) -> isEmpty
    void embedTimingPatterns(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    void embedDarkDotAtLeftBottomCorner(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    void embedPositionAdjustmentPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    void embedPositionDetectionPatternsAndSeparators(com.google.zxing.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    void maybeEmbedPositionAdjustmentPatterns(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.qrcode.encoder.QRCode:
    int NUM_MASK_PATTERNS -> NUM_MASK_PATTERNS
    com.google.zxing.qrcode.decoder.Mode mode -> mode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> ecLevel
    com.google.zxing.qrcode.decoder.Version version -> version
    int maskPattern -> maskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> matrix
    com.google.zxing.qrcode.decoder.Mode getMode() -> getMode
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    com.google.zxing.qrcode.decoder.Version getVersion() -> getVersion
    int getMaskPattern() -> getMaskPattern
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> setMode
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    void setVersion(com.google.zxing.qrcode.decoder.Version) -> setVersion
    void setMaskPattern(int) -> setMaskPattern
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> setMatrix
    boolean isValidMaskPattern(int) -> isValidMaskPattern
com.j256.ormlite.android.AndroidCompiledStatement -> com.j256.ormlite.android.AndroidCompiledStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    com.j256.ormlite.android.compat.ApiCompatibility apiCompatibility -> apiCompatibility
    java.lang.String sql -> sql
    android.database.sqlite.SQLiteDatabase db -> db
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    android.database.Cursor cursor -> cursor
    java.util.List args -> args
    java.lang.Integer max -> max
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook cancellationHook -> cancellationHook
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runUpdate() -> runUpdate
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
    android.database.Cursor getCursor() -> getCursor
    java.lang.String toString() -> toString
    int execSql(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.Object[]) -> execSql
    void isInPrep() -> isInPrep
    java.lang.Object[] getArgArray() -> getArgArray
    java.lang.String[] getStringArray() -> getStringArray
com.j256.ormlite.android.AndroidCompiledStatement$1 -> com.j256.ormlite.android.AndroidCompiledStatement$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidConnectionSource -> com.j256.ormlite.android.AndroidConnectionSource:
    com.j256.ormlite.logger.Logger logger -> logger
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    boolean isOpen -> isOpen
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.support.DatabaseConnectionProxyFactory connectionProxyFactory -> connectionProxyFactory
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
    void setDatabaseConnectionProxyFactory(com.j256.ormlite.support.DatabaseConnectionProxyFactory) -> setDatabaseConnectionProxyFactory
    boolean isCancelQueriesEnabled() -> isCancelQueriesEnabled
    void setCancelQueriesEnabled(boolean) -> setCancelQueriesEnabled
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection -> com.j256.ormlite.android.AndroidDatabaseConnection:
    java.lang.String ANDROID_VERSION -> ANDROID_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    android.database.sqlite.SQLiteDatabase db -> db
    boolean readWrite -> readWrite
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    boolean isReadWrite() -> isReadWrite
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> update
    void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> bindArgs
    java.lang.String[] toStrings(java.lang.Object[]) -> toStrings
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection$1 -> com.j256.ormlite.android.AndroidDatabaseConnection$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint -> com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint:
    java.lang.String name -> name
    int getSavepointId() -> getSavepointId
    java.lang.String getSavepointName() -> getSavepointName
com.j256.ormlite.android.AndroidDatabaseResults -> com.j256.ormlite.android.AndroidDatabaseResults:
    int MIN_NUM_COLUMN_NAMES_MAP -> MIN_NUM_COLUMN_NAMES_MAP
    android.database.Cursor cursor -> cursor
    java.lang.String[] columnNames -> columnNames
    java.util.Map columnNameMap -> columnNameMap
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean next() -> next
    boolean last() -> last
    boolean previous() -> previous
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int getCount() -> getCount
    int getPosition() -> getPosition
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
    android.database.Cursor getRawCursor() -> getRawCursor
    java.lang.String toString() -> toString
    int lookupColumn(java.lang.String) -> lookupColumn
com.j256.ormlite.android.AndroidLog -> com.j256.ormlite.android.AndroidLog:
    java.lang.String ALL_LOGS_NAME -> ALL_LOGS_NAME
    int REFRESH_LEVEL_CACHE_EVERY -> REFRESH_LEVEL_CACHE_EVERY
    int MAX_TAG_LENGTH -> MAX_TAG_LENGTH
    java.lang.String className -> className
    int levelCacheC -> levelCacheC
    boolean[] levelCache -> levelCache
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void refreshLevelCache() -> refreshLevelCache
    boolean isLevelEnabledInternal(int) -> isLevelEnabledInternal
    int levelToAndroidLevel(com.j256.ormlite.logger.Log$Level) -> levelToAndroidLevel
com.j256.ormlite.android.AndroidLog$1 -> com.j256.ormlite.android.AndroidLog$1:
    int[] $SwitchMap$com$j256$ormlite$logger$Log$Level -> $SwitchMap$com$j256$ormlite$logger$Log$Level
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.j256.ormlite.android.DatabaseTableConfigUtil:
    java.lang.Class annotationFactoryClazz -> annotationFactoryClazz
    java.lang.reflect.Field elementsField -> elementsField
    java.lang.Class annotationMemberClazz -> annotationMemberClazz
    java.lang.reflect.Field nameField -> nameField
    java.lang.reflect.Field valueField -> valueField
    int workedC -> workedC
    int[] configFieldNums -> configFieldNums
    int COLUMN_NAME -> COLUMN_NAME
    int DATA_TYPE -> DATA_TYPE
    int DEFAULT_VALUE -> DEFAULT_VALUE
    int WIDTH -> WIDTH
    int CAN_BE_NULL -> CAN_BE_NULL
    int ID -> ID
    int GENERATED_ID -> GENERATED_ID
    int GENERATED_ID_SEQUENCE -> GENERATED_ID_SEQUENCE
    int FOREIGN -> FOREIGN
    int USE_GET_SET -> USE_GET_SET
    int UNKNOWN_ENUM_NAME -> UNKNOWN_ENUM_NAME
    int THROW_IF_NULL -> THROW_IF_NULL
    int PERSISTED -> PERSISTED
    int FORMAT -> FORMAT
    int UNIQUE -> UNIQUE
    int UNIQUE_COMBO -> UNIQUE_COMBO
    int INDEX -> INDEX
    int UNIQUE_INDEX -> UNIQUE_INDEX
    int INDEX_NAME -> INDEX_NAME
    int UNIQUE_INDEX_NAME -> UNIQUE_INDEX_NAME
    int FOREIGN_AUTO_REFRESH -> FOREIGN_AUTO_REFRESH
    int MAX_FOREIGN_AUTO_REFRESH_LEVEL -> MAX_FOREIGN_AUTO_REFRESH_LEVEL
    int PERSISTER_CLASS -> PERSISTER_CLASS
    int ALLOW_GENERATED_ID_INSERT -> ALLOW_GENERATED_ID_INSERT
    int COLUMN_DEFINITON -> COLUMN_DEFINITON
    int FOREIGN_AUTO_CREATE -> FOREIGN_AUTO_CREATE
    int VERSION -> VERSION
    int FOREIGN_COLUMN_NAME -> FOREIGN_COLUMN_NAME
    int READ_ONLY -> READ_ONLY
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    int getWorkedC() -> getWorkedC
    int[] lookupClasses() -> lookupClasses
    int configFieldNameToNum(java.lang.String) -> configFieldNameToNum
    com.j256.ormlite.field.DatabaseFieldConfig configFromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> configFromField
    com.j256.ormlite.field.DatabaseFieldConfig buildConfig(com.j256.ormlite.field.DatabaseField,java.lang.String,java.lang.reflect.Field) -> buildConfig
    void assignConfigField(int,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.reflect.Field,java.lang.Object) -> assignConfigField
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample:
    java.lang.String field -> field
com.j256.ormlite.android.apptools.OpenHelperManager -> com.j256.ormlite.android.apptools.OpenHelperManager:
    java.lang.String HELPER_CLASS_RESOURCE_NAME -> HELPER_CLASS_RESOURCE_NAME
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class helperClass -> helperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean wasClosed -> wasClosed
    int instanceCount -> instanceCount
    void setOpenHelperClass(java.lang.Class) -> setOpenHelperClass
    void setHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> setHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class) -> getHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context) -> getHelper
    void release() -> release
    void releaseHelper() -> releaseHelper
    void innerSetHelperClass(java.lang.Class) -> innerSetHelperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper loadHelper(android.content.Context,java.lang.Class) -> loadHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper constructHelper(android.content.Context,java.lang.Class) -> constructHelper
    java.lang.Class lookupHelperClass(android.content.Context,java.lang.Class) -> lookupHelperClass
com.j256.ormlite.android.apptools.OrmLiteBaseActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
    java.lang.String toString() -> toString
com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup -> com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseListActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseListActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseService -> com.j256.ormlite.android.apptools.OrmLiteBaseService:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteConfigUtil -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil:
    java.lang.String RESOURCE_DIR_NAME -> RESOURCE_DIR_NAME
    java.lang.String RAW_DIR_NAME -> RAW_DIR_NAME
    int maxFindSourceLevel -> maxFindSourceLevel
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    void main(java.lang.String[]) -> main
    void writeConfigFile(java.lang.String) -> writeConfigFile
    void writeConfigFile(java.lang.String,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.lang.Class[]) -> writeConfigFile
    java.io.File findRawDir(java.io.File) -> findRawDir
    void writeHeader(java.io.BufferedWriter) -> writeHeader
    void findAnnotatedClasses(java.util.List,java.io.File,int) -> findAnnotatedClasses
    void writeConfigForTable(java.io.BufferedWriter,java.lang.Class) -> writeConfigForTable
    boolean classHasAnnotations(java.lang.Class) -> classHasAnnotations
    java.lang.String getPackageOfClass(java.io.File) -> getPackageOfClass
    java.io.File findResRawDir(java.io.File) -> findResRawDir
com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1 -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1:
    boolean accept(java.io.File) -> accept
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> connectionSource
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isOpen -> isOpen
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    boolean isOpen() -> isOpen
    com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> getDao
    com.j256.ormlite.dao.RuntimeExceptionDao getRuntimeExceptionDao(java.lang.Class) -> getRuntimeExceptionDao
    java.lang.String toString() -> toString
    java.io.InputStream openFileId(android.content.Context,int) -> openFileId
    java.io.InputStream openFile(java.io.File) -> openFile
com.j256.ormlite.android.compat.ApiCompatibility -> com.j256.ormlite.android.compat.ApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook -> com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook:
    void cancel() -> cancel
com.j256.ormlite.android.compat.ApiCompatibilityUtils -> com.j256.ormlite.android.compat.ApiCompatibilityUtils:
    com.j256.ormlite.android.compat.ApiCompatibility compatibility -> compatibility
    int BASE -> BASE
    int BASE_1_1 -> BASE_1_1
    int CUPCAKE -> CUPCAKE
    int DONUT -> DONUT
    int ECLAIR -> ECLAIR
    int ECLAIR_0_1 -> ECLAIR_0_1
    int ECLAIR_MR1 -> ECLAIR_MR1
    int FROYO -> FROYO
    int GINGERBREAD -> GINGERBREAD
    int GINGERBREAD_MR1 -> GINGERBREAD_MR1
    int HONEYCOMB -> HONEYCOMB
    int HONEYCOMB_MR1 -> HONEYCOMB_MR1
    int HONEYCOMB_MR2 -> HONEYCOMB_MR2
    int ICE_CREAM_SANDWICH -> ICE_CREAM_SANDWICH
    int ICE_CREAM_SANDWICH_MR1 -> ICE_CREAM_SANDWICH_MR1
    int JELLY_BEAN -> JELLY_BEAN
    int JELLY_BEAN_MR1 -> JELLY_BEAN_MR1
    int JELLY_BEAN_MR2 -> JELLY_BEAN_MR2
    com.j256.ormlite.android.compat.ApiCompatibility getCompatibility() -> getCompatibility
com.j256.ormlite.android.compat.BasicApiCompatibility -> com.j256.ormlite.android.compat.BasicApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook:
    android.os.CancellationSignal cancellationSignal -> cancellationSignal
    void cancel() -> cancel
    android.os.CancellationSignal access$000(com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook) -> access$000
com.j256.ormlite.dao.BaseDaoImpl -> com.j256.ormlite.dao.BaseDaoImpl:
    boolean initialized -> initialized
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> statementExecutor
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.table.ObjectFactory objectFactory -> objectFactory
    java.lang.ThreadLocal daoConfigLevelLocal -> daoConfigLevelLocal
    com.j256.ormlite.dao.ReferenceObjectCache defaultObjectCache -> defaultObjectCache
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    void initialize() -> initialize
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    void clearAllInternalObjectCaches() -> clearAllInternalObjectCaches
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.table.ObjectFactory getObjectFactory() -> getObjectFactory
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.table.DatabaseTableConfig getTableConfig() -> getTableConfig
    com.j256.ormlite.table.TableInfo getTableInfo() -> getTableInfo
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void setTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setTableConfig
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    void checkForInitialized() -> checkForInitialized
    com.j256.ormlite.dao.ForeignCollection makeEmptyForeignCollection(java.lang.Object,java.lang.String) -> makeEmptyForeignCollection
    com.j256.ormlite.dao.CloseableIterator createIterator(int) -> createIterator
    com.j256.ormlite.dao.CloseableIterator createIterator(com.j256.ormlite.stmt.PreparedQuery,int) -> createIterator
    java.util.List queryForMatching(java.lang.Object,boolean) -> queryForMatching
    java.util.List queryForFieldValues(java.util.Map,boolean) -> queryForFieldValues
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.BaseDaoImpl,int) -> access$000
    com.j256.ormlite.dao.CloseableIterator access$100(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.stmt.PreparedQuery,int) -> access$100
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.j256.ormlite.dao.BaseDaoImpl$1:
    java.util.List initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.dao.BaseDaoImpl$2 -> com.j256.ormlite.dao.BaseDaoImpl$2:
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$3 -> com.j256.ormlite.dao.BaseDaoImpl$3:
    com.j256.ormlite.stmt.PreparedQuery val$preparedQuery -> val$preparedQuery
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.j256.ormlite.dao.BaseDaoImpl$4:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$5 -> com.j256.ormlite.dao.BaseDaoImpl$5:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseForeignCollection -> com.j256.ormlite.dao.BaseForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    java.lang.Object parentId -> parentId
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    java.lang.String orderColumn -> orderColumn
    boolean orderAscending -> orderAscending
    java.lang.Object parent -> parent
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    int update(java.lang.Object) -> update
    int refresh(java.lang.Object) -> refresh
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> getPreparedQuery
    boolean addElement(java.lang.Object) -> addElement
com.j256.ormlite.dao.CloseableIterable -> com.j256.ormlite.dao.CloseableIterable:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.CloseableIterator -> com.j256.ormlite.dao.CloseableIterator:
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object moveRelative(int) -> moveRelative
com.j256.ormlite.dao.CloseableWrappedIterable -> com.j256.ormlite.dao.CloseableWrappedIterable:
    void close() -> close
com.j256.ormlite.dao.CloseableWrappedIterableImpl -> com.j256.ormlite.dao.CloseableWrappedIterableImpl:
    com.j256.ormlite.dao.CloseableIterable iterable -> iterable
    com.j256.ormlite.dao.CloseableIterator iterator -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.Dao -> com.j256.ormlite.dao.Dao:
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
com.j256.ormlite.dao.Dao$CreateOrUpdateStatus -> com.j256.ormlite.dao.Dao$CreateOrUpdateStatus:
    boolean created -> created
    boolean updated -> updated
    int numLinesChanged -> numLinesChanged
    boolean isCreated() -> isCreated
    boolean isUpdated() -> isUpdated
    int getNumLinesChanged() -> getNumLinesChanged
com.j256.ormlite.dao.DaoManager -> com.j256.ormlite.dao.DaoManager:
    java.util.Map configMap -> configMap
    java.util.Map classMap -> classMap
    java.util.Map tableConfigMap -> tableConfigMap
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> lookupDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> lookupDao
    void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDao
    void unregisterDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> unregisterDao
    void registerDaoWithTableConfig(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDaoWithTableConfig
    void clearCache() -> clearCache
    void clearDaoCache() -> clearDaoCache
    void addCachedDatabaseConfigs(java.util.Collection) -> addCachedDatabaseConfigs
    void addDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToClassMap
    void removeDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> removeDaoToClassMap
    void addDaoToTableMap(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToTableMap
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> lookupDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource) -> lookupDao
    java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> findConstructor
    java.lang.Object createDaoFromConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDaoFromConfig
    com.j256.ormlite.dao.Dao doCreateDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> doCreateDao
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.j256.ormlite.dao.DaoManager$ClassConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.Class clazz -> clazz
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.j256.ormlite.dao.EagerForeignCollection:
    long serialVersionUID -> serialVersionUID
    java.util.List results -> results
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void close() -> close
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    java.util.List access$000(com.j256.ormlite.dao.EagerForeignCollection) -> access$000
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.j256.ormlite.dao.EagerForeignCollection$1:
    int offset -> offset
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object next() -> next
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object current() -> current
    java.lang.Object previous() -> previous
    java.lang.Object moveRelative(int) -> moveRelative
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
com.j256.ormlite.dao.ForeignCollection -> com.j256.ormlite.dao.ForeignCollection:
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int update(java.lang.Object) -> update
    int updateAll() -> updateAll
    int refresh(java.lang.Object) -> refresh
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean add(java.lang.Object) -> add
com.j256.ormlite.dao.GenericRawResults -> com.j256.ormlite.dao.GenericRawResults:
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    void close() -> close
com.j256.ormlite.dao.LazyForeignCollection -> com.j256.ormlite.dao.LazyForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.j256.ormlite.dao.CloseableIterator seperateIteratorThrow(int) -> seperateIteratorThrow
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.LazyForeignCollection,int) -> access$000
com.j256.ormlite.dao.LazyForeignCollection$1 -> com.j256.ormlite.dao.LazyForeignCollection$1:
    int val$flags -> val$flags
    com.j256.ormlite.dao.LazyForeignCollection this$0 -> this$0
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.LruObjectCache -> com.j256.ormlite.dao.LruObjectCache:
    int capacity -> capacity
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap -> com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.j256.ormlite.dao.ObjectCache -> com.j256.ormlite.dao.ObjectCache:
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
com.j256.ormlite.dao.RawRowMapper -> com.j256.ormlite.dao.RawRowMapper:
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.dao.RawRowObjectMapper -> com.j256.ormlite.dao.RawRowObjectMapper:
    java.lang.Object mapRow(java.lang.String[],com.j256.ormlite.field.DataType[],java.lang.Object[]) -> mapRow
com.j256.ormlite.dao.ReferenceObjectCache -> com.j256.ormlite.dao.ReferenceObjectCache:
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    boolean useWeak -> useWeak
    com.j256.ormlite.dao.ReferenceObjectCache makeWeakCache() -> makeWeakCache
    com.j256.ormlite.dao.ReferenceObjectCache makeSoftCache() -> makeSoftCache
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    void cleanNullReferences(java.lang.Class) -> cleanNullReferences
    void cleanNullReferencesAll() -> cleanNullReferencesAll
    void cleanMap(java.util.Map) -> cleanMap
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.RuntimeExceptionDao -> com.j256.ormlite.dao.RuntimeExceptionDao:
    com.j256.ormlite.logger.Log$Level LOG_LEVEL -> LOG_LEVEL
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void logMessage(java.lang.Exception,java.lang.String) -> logMessage
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.db.BaseDatabaseType -> com.j256.ormlite.db.BaseDatabaseType:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> DEFAULT_SEQUENCE_SUFFIX
    java.sql.Driver driver -> driver
    java.lang.String getDriverClassName() -> getDriverClassName
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void appendStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendStringType
    void appendLongStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongStringType
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    void appendCharType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendCharType
    void appendByteType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteType
    void appendShortType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendShortType
    void appendIntegerType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendIntegerType
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void appendFloatType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendFloatType
    void appendDoubleType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDoubleType
    void appendByteArrayType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteArrayType
    void appendSerializableType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendSerializableType
    void appendBigDecimalNumericType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBigDecimalNumericType
    void appendDefaultValue(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.lang.Object) -> appendDefaultValue
    void configureGeneratedIdSequence(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureGeneratedIdSequence
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    void configureId(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureId
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
    void appendCanBeNull(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> appendCanBeNull
    void addSingleUnique(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> addSingleUnique
com.j256.ormlite.db.BaseDatabaseType$1 -> com.j256.ormlite.db.BaseDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter:
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.j256.ormlite.db.BaseSqliteDatabaseType:
    com.j256.ormlite.field.FieldConverter booleanConverter -> booleanConverter
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.BaseSqliteDatabaseType$1 -> com.j256.ormlite.db.BaseSqliteDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.DatabaseType -> com.j256.ormlite.db.DatabaseType:
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    java.lang.String getDatabaseName() -> getDatabaseName
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.j256.ormlite.db.SqliteAndroidDatabaseType:
    void loadDriver() -> loadDriver
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    java.lang.String getDriverClassName() -> getDriverClassName
    java.lang.String getDatabaseName() -> getDatabaseName
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
com.j256.ormlite.db.SqliteAndroidDatabaseType$1 -> com.j256.ormlite.db.SqliteAndroidDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.field.BaseFieldConverter -> com.j256.ormlite.field.BaseFieldConverter:
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isStreamType() -> isStreamType
com.j256.ormlite.field.DataPersister -> com.j256.ormlite.field.DataPersister:
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.DataPersisterManager -> com.j256.ormlite.field.DataPersisterManager:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> DEFAULT_ENUM_PERSISTER
    java.util.Map builtInMap -> builtInMap
    java.util.List registeredPersisters -> registeredPersisters
    void registerDataPersisters(com.j256.ormlite.field.DataPersister[]) -> registerDataPersisters
    void clear() -> clear
    com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> lookupForField
com.j256.ormlite.field.DataType -> com.j256.ormlite.field.DataType:
    com.j256.ormlite.field.DataType STRING -> STRING
    com.j256.ormlite.field.DataType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.DataType STRING_BYTES -> STRING_BYTES
    com.j256.ormlite.field.DataType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> BOOLEAN_OBJ
    com.j256.ormlite.field.DataType DATE -> DATE
    com.j256.ormlite.field.DataType DATE_LONG -> DATE_LONG
    com.j256.ormlite.field.DataType DATE_STRING -> DATE_STRING
    com.j256.ormlite.field.DataType CHAR -> CHAR
    com.j256.ormlite.field.DataType CHAR_OBJ -> CHAR_OBJ
    com.j256.ormlite.field.DataType BYTE -> BYTE
    com.j256.ormlite.field.DataType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.DataType BYTE_OBJ -> BYTE_OBJ
    com.j256.ormlite.field.DataType SHORT -> SHORT
    com.j256.ormlite.field.DataType SHORT_OBJ -> SHORT_OBJ
    com.j256.ormlite.field.DataType INTEGER -> INTEGER
    com.j256.ormlite.field.DataType INTEGER_OBJ -> INTEGER_OBJ
    com.j256.ormlite.field.DataType LONG -> LONG
    com.j256.ormlite.field.DataType LONG_OBJ -> LONG_OBJ
    com.j256.ormlite.field.DataType FLOAT -> FLOAT
    com.j256.ormlite.field.DataType FLOAT_OBJ -> FLOAT_OBJ
    com.j256.ormlite.field.DataType DOUBLE -> DOUBLE
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> DOUBLE_OBJ
    com.j256.ormlite.field.DataType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.DataType ENUM_STRING -> ENUM_STRING
    com.j256.ormlite.field.DataType ENUM_INTEGER -> ENUM_INTEGER
    com.j256.ormlite.field.DataType UUID -> UUID
    com.j256.ormlite.field.DataType BIG_INTEGER -> BIG_INTEGER
    com.j256.ormlite.field.DataType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> BIG_DECIMAL_NUMERIC
    com.j256.ormlite.field.DataType DATE_TIME -> DATE_TIME
    com.j256.ormlite.field.DataType SQL_DATE -> SQL_DATE
    com.j256.ormlite.field.DataType TIME_STAMP -> TIME_STAMP
    com.j256.ormlite.field.DataType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    com.j256.ormlite.field.DataType[] $VALUES -> $VALUES
    com.j256.ormlite.field.DataType[] values() -> values
    com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
com.j256.ormlite.field.DatabaseField -> com.j256.ormlite.field.DatabaseField:
    java.lang.String DEFAULT_STRING -> DEFAULT_STRING
    int NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED -> NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String columnName() -> columnName
    com.j256.ormlite.field.DataType dataType() -> dataType
    java.lang.String defaultValue() -> defaultValue
    int width() -> width
    boolean canBeNull() -> canBeNull
    boolean id() -> id
    boolean generatedId() -> generatedId
    java.lang.String generatedIdSequence() -> generatedIdSequence
    boolean foreign() -> foreign
    boolean useGetSet() -> useGetSet
    java.lang.String unknownEnumName() -> unknownEnumName
    boolean throwIfNull() -> throwIfNull
    boolean persisted() -> persisted
    java.lang.String format() -> format
    boolean unique() -> unique
    boolean uniqueCombo() -> uniqueCombo
    boolean index() -> index
    boolean uniqueIndex() -> uniqueIndex
    java.lang.String indexName() -> indexName
    java.lang.String uniqueIndexName() -> uniqueIndexName
    boolean foreignAutoRefresh() -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel() -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass() -> persisterClass
    boolean allowGeneratedIdInsert() -> allowGeneratedIdInsert
    java.lang.String columnDefinition() -> columnDefinition
    boolean foreignAutoCreate() -> foreignAutoCreate
    boolean version() -> version
    java.lang.String foreignColumnName() -> foreignColumnName
    boolean readOnly() -> readOnly
com.j256.ormlite.field.DatabaseFieldConfig -> com.j256.ormlite.field.DatabaseFieldConfig:
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.Class DEFAULT_PERSISTER_CLASS -> DEFAULT_PERSISTER_CLASS
    com.j256.ormlite.field.DataType DEFAULT_DATA_TYPE -> DEFAULT_DATA_TYPE
    boolean DEFAULT_CAN_BE_NULL -> DEFAULT_CAN_BE_NULL
    boolean DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING -> DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String fieldName -> fieldName
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DataType dataType -> dataType
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.String defaultValue -> defaultValue
    int width -> width
    boolean canBeNull -> canBeNull
    boolean id -> id
    boolean generatedId -> generatedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    boolean foreign -> foreign
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> foreignTableConfig
    boolean useGetSet -> useGetSet
    java.lang.Enum unknownEnumValue -> unknownEnumValue
    boolean throwIfNull -> throwIfNull
    boolean persisted -> persisted
    java.lang.String format -> format
    boolean unique -> unique
    boolean uniqueCombo -> uniqueCombo
    boolean index -> index
    java.lang.String indexName -> indexName
    boolean uniqueIndex -> uniqueIndex
    java.lang.String uniqueIndexName -> uniqueIndexName
    boolean foreignAutoRefresh -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass -> persisterClass
    boolean allowGeneratedIdInsert -> allowGeneratedIdInsert
    java.lang.String columnDefinition -> columnDefinition
    boolean foreignAutoCreate -> foreignAutoCreate
    boolean version -> version
    java.lang.String foreignColumnName -> foreignColumnName
    boolean readOnly -> readOnly
    boolean foreignCollection -> foreignCollection
    boolean foreignCollectionEager -> foreignCollectionEager
    int foreignCollectionMaxEagerLevel -> foreignCollectionMaxEagerLevel
    java.lang.String foreignCollectionColumnName -> foreignCollectionColumnName
    java.lang.String foreignCollectionOrderColumnName -> foreignCollectionOrderColumnName
    boolean foreignCollectionOrderAscending -> foreignCollectionOrderAscending
    java.lang.String foreignCollectionForeignFieldName -> foreignCollectionForeignFieldName
    java.lang.String getFieldName() -> getFieldName
    void setFieldName(java.lang.String) -> setFieldName
    java.lang.String getColumnName() -> getColumnName
    void setColumnName(java.lang.String) -> setColumnName
    com.j256.ormlite.field.DataType getDataType() -> getDataType
    void setDataType(com.j256.ormlite.field.DataType) -> setDataType
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    void setDataPersister(com.j256.ormlite.field.DataPersister) -> setDataPersister
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    boolean isCanBeNull() -> isCanBeNull
    void setCanBeNull(boolean) -> setCanBeNull
    boolean isId() -> isId
    void setId(boolean) -> setId
    boolean isGeneratedId() -> isGeneratedId
    void setGeneratedId(boolean) -> setGeneratedId
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    void setGeneratedIdSequence(java.lang.String) -> setGeneratedIdSequence
    boolean isForeign() -> isForeign
    void setForeign(boolean) -> setForeign
    com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> getForeignTableConfig
    void setForeignTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setForeignTableConfig
    boolean isUseGetSet() -> isUseGetSet
    void setUseGetSet(boolean) -> setUseGetSet
    java.lang.Enum getUnknownEnumValue() -> getUnknownEnumValue
    void setUnknownEnumValue(java.lang.Enum) -> setUnknownEnumValue
    boolean isThrowIfNull() -> isThrowIfNull
    void setThrowIfNull(boolean) -> setThrowIfNull
    boolean isPersisted() -> isPersisted
    void setPersisted(boolean) -> setPersisted
    java.lang.String getFormat() -> getFormat
    void setFormat(java.lang.String) -> setFormat
    boolean isUnique() -> isUnique
    void setUnique(boolean) -> setUnique
    boolean isUniqueCombo() -> isUniqueCombo
    void setUniqueCombo(boolean) -> setUniqueCombo
    boolean isIndex() -> isIndex
    void setIndex(boolean) -> setIndex
    java.lang.String getIndexName(java.lang.String) -> getIndexName
    void setIndexName(java.lang.String) -> setIndexName
    boolean isUniqueIndex() -> isUniqueIndex
    void setUniqueIndex(boolean) -> setUniqueIndex
    java.lang.String getUniqueIndexName(java.lang.String) -> getUniqueIndexName
    void setUniqueIndexName(java.lang.String) -> setUniqueIndexName
    void setForeignAutoRefresh(boolean) -> setForeignAutoRefresh
    boolean isForeignAutoRefresh() -> isForeignAutoRefresh
    int getMaxForeignAutoRefreshLevel() -> getMaxForeignAutoRefreshLevel
    void setMaxForeignAutoRefreshLevel(int) -> setMaxForeignAutoRefreshLevel
    boolean isForeignCollection() -> isForeignCollection
    void setForeignCollection(boolean) -> setForeignCollection
    boolean isForeignCollectionEager() -> isForeignCollectionEager
    void setForeignCollectionEager(boolean) -> setForeignCollectionEager
    int getForeignCollectionMaxEagerLevel() -> getForeignCollectionMaxEagerLevel
    void setForeignCollectionMaxEagerLevel(int) -> setForeignCollectionMaxEagerLevel
    void setMaxEagerForeignCollectionLevel(int) -> setMaxEagerForeignCollectionLevel
    void setForeignCollectionMaxEagerForeignCollectionLevel(int) -> setForeignCollectionMaxEagerForeignCollectionLevel
    java.lang.String getForeignCollectionColumnName() -> getForeignCollectionColumnName
    void setForeignCollectionColumnName(java.lang.String) -> setForeignCollectionColumnName
    java.lang.String getForeignCollectionOrderColumnName() -> getForeignCollectionOrderColumnName
    void setForeignCollectionOrderColumn(java.lang.String) -> setForeignCollectionOrderColumn
    void setForeignCollectionOrderColumnName(java.lang.String) -> setForeignCollectionOrderColumnName
    boolean isForeignCollectionOrderAscending() -> isForeignCollectionOrderAscending
    void setForeignCollectionOrderAscending(boolean) -> setForeignCollectionOrderAscending
    java.lang.String getForeignCollectionForeignFieldName() -> getForeignCollectionForeignFieldName
    void setForeignCollectionForeignColumnName(java.lang.String) -> setForeignCollectionForeignColumnName
    void setForeignCollectionForeignFieldName(java.lang.String) -> setForeignCollectionForeignFieldName
    java.lang.Class getPersisterClass() -> getPersisterClass
    void setPersisterClass(java.lang.Class) -> setPersisterClass
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    void setAllowGeneratedIdInsert(boolean) -> setAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    void setColumnDefinition(java.lang.String) -> setColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    void setForeignAutoCreate(boolean) -> setForeignAutoCreate
    boolean isVersion() -> isVersion
    void setVersion(boolean) -> setVersion
    java.lang.String getForeignColumnName() -> getForeignColumnName
    void setForeignColumnName(java.lang.String) -> setForeignColumnName
    boolean isReadOnly() -> isReadOnly
    void setReadOnly(boolean) -> setReadOnly
    com.j256.ormlite.field.DatabaseFieldConfig fromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> fromField
    java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> findGetMethod
    java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> findSetMethod
    com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseField) -> fromDatabaseField
    void postProcess() -> postProcess
    java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> findMatchingEnumVal
    com.j256.ormlite.field.DatabaseFieldConfig fromForeignCollection(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field,com.j256.ormlite.field.ForeignCollectionField) -> fromForeignCollection
    java.lang.String findIndexName(java.lang.String) -> findIndexName
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
    java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> methodFromField
com.j256.ormlite.field.DatabaseFieldConfigLoader -> com.j256.ormlite.field.DatabaseFieldConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    com.j256.ormlite.field.DataPersister DEFAULT_DATA_PERSISTER -> DEFAULT_DATA_PERSISTER
    java.lang.String FIELD_NAME_FIELD_NAME -> FIELD_NAME_FIELD_NAME
    java.lang.String FIELD_NAME_COLUMN_NAME -> FIELD_NAME_COLUMN_NAME
    java.lang.String FIELD_NAME_DATA_PERSISTER -> FIELD_NAME_DATA_PERSISTER
    java.lang.String FIELD_NAME_DEFAULT_VALUE -> FIELD_NAME_DEFAULT_VALUE
    java.lang.String FIELD_NAME_WIDTH -> FIELD_NAME_WIDTH
    java.lang.String FIELD_NAME_CAN_BE_NULL -> FIELD_NAME_CAN_BE_NULL
    java.lang.String FIELD_NAME_ID -> FIELD_NAME_ID
    java.lang.String FIELD_NAME_GENERATED_ID -> FIELD_NAME_GENERATED_ID
    java.lang.String FIELD_NAME_GENERATED_ID_SEQUENCE -> FIELD_NAME_GENERATED_ID_SEQUENCE
    java.lang.String FIELD_NAME_FOREIGN -> FIELD_NAME_FOREIGN
    java.lang.String FIELD_NAME_USE_GET_SET -> FIELD_NAME_USE_GET_SET
    java.lang.String FIELD_NAME_UNKNOWN_ENUM_VALUE -> FIELD_NAME_UNKNOWN_ENUM_VALUE
    java.lang.String FIELD_NAME_THROW_IF_NULL -> FIELD_NAME_THROW_IF_NULL
    java.lang.String FIELD_NAME_FORMAT -> FIELD_NAME_FORMAT
    java.lang.String FIELD_NAME_UNIQUE -> FIELD_NAME_UNIQUE
    java.lang.String FIELD_NAME_UNIQUE_COMBO -> FIELD_NAME_UNIQUE_COMBO
    java.lang.String FIELD_NAME_INDEX -> FIELD_NAME_INDEX
    java.lang.String FIELD_NAME_INDEX_NAME -> FIELD_NAME_INDEX_NAME
    java.lang.String FIELD_NAME_UNIQUE_INDEX -> FIELD_NAME_UNIQUE_INDEX
    java.lang.String FIELD_NAME_UNIQUE_INDEX_NAME -> FIELD_NAME_UNIQUE_INDEX_NAME
    java.lang.String FIELD_NAME_FOREIGN_AUTO_REFRESH -> FIELD_NAME_FOREIGN_AUTO_REFRESH
    java.lang.String FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String FIELD_NAME_PERSISTER_CLASS -> FIELD_NAME_PERSISTER_CLASS
    java.lang.String FIELD_NAME_ALLOW_GENERATED_ID_INSERT -> FIELD_NAME_ALLOW_GENERATED_ID_INSERT
    java.lang.String FIELD_NAME_COLUMN_DEFINITION -> FIELD_NAME_COLUMN_DEFINITION
    java.lang.String FIELD_NAME_FOREIGN_AUTO_CREATE -> FIELD_NAME_FOREIGN_AUTO_CREATE
    java.lang.String FIELD_NAME_VERSION -> FIELD_NAME_VERSION
    java.lang.String FIELD_NAME_FOREIGN_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLUMN_NAME
    java.lang.String FIELD_NAME_READ_ONLY -> FIELD_NAME_READ_ONLY
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION -> FIELD_NAME_FOREIGN_COLLECTION
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_EAGER -> FIELD_NAME_FOREIGN_COLLECTION_EAGER
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME
    com.j256.ormlite.field.DatabaseFieldConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> writeConfig
    void readField(com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String,java.lang.String) -> readField
com.j256.ormlite.field.FieldConverter -> com.j256.ormlite.field.FieldConverter:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    boolean isStreamType() -> isStreamType
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.FieldType -> com.j256.ormlite.field.FieldType:
    java.lang.String FOREIGN_ID_FIELD_SUFFIX -> FOREIGN_ID_FIELD_SUFFIX
    boolean DEFAULT_VALUE_BOOLEAN -> DEFAULT_VALUE_BOOLEAN
    byte DEFAULT_VALUE_BYTE -> DEFAULT_VALUE_BYTE
    char DEFAULT_VALUE_CHAR -> DEFAULT_VALUE_CHAR
    short DEFAULT_VALUE_SHORT -> DEFAULT_VALUE_SHORT
    int DEFAULT_VALUE_INT -> DEFAULT_VALUE_INT
    long DEFAULT_VALUE_LONG -> DEFAULT_VALUE_LONG
    float DEFAULT_VALUE_FLOAT -> DEFAULT_VALUE_FLOAT
    double DEFAULT_VALUE_DOUBLE -> DEFAULT_VALUE_DOUBLE
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.String tableName -> tableName
    java.lang.reflect.Field field -> field
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> fieldConfig
    boolean isId -> isId
    boolean isGeneratedId -> isGeneratedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    java.lang.reflect.Method fieldGetMethod -> fieldGetMethod
    java.lang.reflect.Method fieldSetMethod -> fieldSetMethod
    java.lang.Class parentClass -> parentClass
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.Object defaultValue -> defaultValue
    java.lang.Object dataTypeConfigObj -> dataTypeConfigObj
    com.j256.ormlite.field.FieldConverter fieldConverter -> fieldConverter
    com.j256.ormlite.field.FieldType foreignIdField -> foreignIdField
    com.j256.ormlite.table.TableInfo foreignTableInfo -> foreignTableInfo
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    com.j256.ormlite.dao.BaseDaoImpl foreignDao -> foreignDao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    java.lang.ThreadLocal threadLevelCounters -> threadLevelCounters
    void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> configDaoInformation
    java.lang.reflect.Field getField() -> getField
    java.lang.String getTableName() -> getTableName
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getType() -> getType
    java.lang.String getColumnName() -> getColumnName
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    java.lang.Object getDataTypeConfigObj() -> getDataTypeConfigObj
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object getDefaultValue() -> getDefaultValue
    int getWidth() -> getWidth
    boolean isCanBeNull() -> isCanBeNull
    boolean isId() -> isId
    boolean isGeneratedId() -> isGeneratedId
    boolean isGeneratedIdSequence() -> isGeneratedIdSequence
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    boolean isForeign() -> isForeign
    void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> assignField
    java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
    java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> extractRawJavaFieldValue
    java.lang.Object extractJavaFieldValue(java.lang.Object) -> extractJavaFieldValue
    java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> extractJavaFieldToSqlArgValue
    java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> convertJavaFieldToSqlArgValue
    java.lang.Object convertStringToJavaField(java.lang.String,int) -> convertStringToJavaField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    com.j256.ormlite.field.FieldType getForeignIdField() -> getForeignIdField
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Enum getUnknownEnumVal() -> getUnknownEnumVal
    java.lang.String getFormat() -> getFormat
    boolean isUnique() -> isUnique
    boolean isUniqueCombo() -> isUniqueCombo
    java.lang.String getIndexName() -> getIndexName
    java.lang.String getUniqueIndexName() -> getUniqueIndexName
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isComparable() -> isComparable
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isForeignCollection() -> isForeignCollection
    com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection(java.lang.Object,java.lang.Object) -> buildForeignCollection
    java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> resultToJava
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    boolean isVersion() -> isVersion
    java.lang.Object generateId() -> generateId
    boolean isReadOnly() -> isReadOnly
    java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> getFieldValueIfNotDefault
    boolean isObjectsFieldValueDefault(java.lang.Object) -> isObjectsFieldValueDefault
    java.lang.Object getJavaDefaultValueDefault() -> getJavaDefaultValueDefault
    int createWithForeignDao(java.lang.Object) -> createWithForeignDao
    com.j256.ormlite.field.FieldType createFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field,java.lang.Class) -> createFieldType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isFieldValueDefault(java.lang.Object) -> isFieldValueDefault
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class,java.lang.Class,com.j256.ormlite.dao.BaseDaoImpl) -> findForeignFieldType
    void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> assignDataType
com.j256.ormlite.field.FieldType$1 -> com.j256.ormlite.field.FieldType$1:
    com.j256.ormlite.field.FieldType$LevelCounters initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.FieldType$LevelCounters -> com.j256.ormlite.field.FieldType$LevelCounters:
    int autoRefreshLevel -> autoRefreshLevel
    int autoRefreshLevelMax -> autoRefreshLevelMax
    int foreignCollectionLevel -> foreignCollectionLevel
    int foreignCollectionLevelMax -> foreignCollectionLevelMax
com.j256.ormlite.field.ForeignCollectionField -> com.j256.ormlite.field.ForeignCollectionField:
    int MAX_EAGER_LEVEL -> MAX_EAGER_LEVEL
    boolean eager() -> eager
    int maxEagerForeignCollectionLevel() -> maxEagerForeignCollectionLevel
    int maxEagerLevel() -> maxEagerLevel
    java.lang.String columnName() -> columnName
    java.lang.String orderColumnName() -> orderColumnName
    boolean orderAscending() -> orderAscending
    java.lang.String foreignColumnName() -> foreignColumnName
    java.lang.String foreignFieldName() -> foreignFieldName
com.j256.ormlite.field.SqlType -> com.j256.ormlite.field.SqlType:
    com.j256.ormlite.field.SqlType STRING -> STRING
    com.j256.ormlite.field.SqlType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.SqlType DATE -> DATE
    com.j256.ormlite.field.SqlType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.SqlType CHAR -> CHAR
    com.j256.ormlite.field.SqlType BYTE -> BYTE
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.SqlType SHORT -> SHORT
    com.j256.ormlite.field.SqlType INTEGER -> INTEGER
    com.j256.ormlite.field.SqlType LONG -> LONG
    com.j256.ormlite.field.SqlType FLOAT -> FLOAT
    com.j256.ormlite.field.SqlType DOUBLE -> DOUBLE
    com.j256.ormlite.field.SqlType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.SqlType BLOB -> BLOB
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.SqlType OTHER -> OTHER
    com.j256.ormlite.field.SqlType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.SqlType[] $VALUES -> $VALUES
    com.j256.ormlite.field.SqlType[] values() -> values
    com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.j256.ormlite.field.types.BaseDataType:
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Class[] classes -> classes
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.BaseDateType -> com.j256.ormlite.field.types.BaseDateType:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> defaultDateFormatConfig
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig) -> convertDateStringConfig
    java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> parseDateString
    java.lang.String normalizeDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> normalizeDateString
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig:
    java.lang.ThreadLocal threadLocal -> threadLocal
    java.lang.String dateFormatStr -> dateFormatStr
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1 -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig this$0 -> this$0
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.types.BaseEnumType -> com.j256.ormlite.field.types.BaseEnumType:
    java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> enumVal
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BigDecimalNumericType -> com.j256.ormlite.field.types.BigDecimalNumericType:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.BigDecimalStringType -> com.j256.ormlite.field.types.BigDecimalStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BigIntegerType -> com.j256.ormlite.field.types.BigIntegerType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.BigIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanObjectType -> com.j256.ormlite.field.types.BooleanObjectType:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanType -> com.j256.ormlite.field.types.BooleanType:
    com.j256.ormlite.field.types.BooleanType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.ByteArrayType -> com.j256.ormlite.field.types.ByteArrayType:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteArrayType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ByteObjectType -> com.j256.ormlite.field.types.ByteObjectType:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.ByteType -> com.j256.ormlite.field.types.ByteType:
    com.j256.ormlite.field.types.ByteType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharType -> com.j256.ormlite.field.types.CharType:
    com.j256.ormlite.field.types.CharType singleTon -> singleTon
    com.j256.ormlite.field.types.CharType getSingleton() -> getSingleton
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharacterObjectType -> com.j256.ormlite.field.types.CharacterObjectType:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
com.j256.ormlite.field.types.DateLongType -> com.j256.ormlite.field.types.DateLongType:
    com.j256.ormlite.field.types.DateLongType singleTon -> singleTon
    com.j256.ormlite.field.types.DateLongType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateStringType -> com.j256.ormlite.field.types.DateStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.DateStringType singleTon -> singleTon
    com.j256.ormlite.field.types.DateStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateTimeType -> com.j256.ormlite.field.types.DateTimeType:
    com.j256.ormlite.field.types.DateTimeType singleTon -> singleTon
    java.lang.Class dateTimeClass -> dateTimeClass
    java.lang.reflect.Method getMillisMethod -> getMillisMethod
    java.lang.reflect.Constructor millisConstructor -> millisConstructor
    java.lang.String[] associatedClassNames -> associatedClassNames
    com.j256.ormlite.field.types.DateTimeType getSingleton() -> getSingleton
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.reflect.Method getMillisMethod() -> getMillisMethod
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.Class getDateTimeClass() -> getDateTimeClass
com.j256.ormlite.field.types.DateType -> com.j256.ormlite.field.types.DateType:
    com.j256.ormlite.field.types.DateType singleTon -> singleTon
    com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
com.j256.ormlite.field.types.DoubleObjectType -> com.j256.ormlite.field.types.DoubleObjectType:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.DoubleType -> com.j256.ormlite.field.types.DoubleType:
    com.j256.ormlite.field.types.DoubleType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.EnumIntegerType -> com.j256.ormlite.field.types.EnumIntegerType:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.EnumStringType -> com.j256.ormlite.field.types.EnumStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.EnumStringType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumStringType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.FloatObjectType -> com.j256.ormlite.field.types.FloatObjectType:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.FloatType -> com.j256.ormlite.field.types.FloatType:
    com.j256.ormlite.field.types.FloatType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntType -> com.j256.ormlite.field.types.IntType:
    com.j256.ormlite.field.types.IntType singleTon -> singleTon
    com.j256.ormlite.field.types.IntType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntegerObjectType -> com.j256.ormlite.field.types.IntegerObjectType:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongObjectType -> com.j256.ormlite.field.types.LongObjectType:
    com.j256.ormlite.field.types.LongObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongStringType -> com.j256.ormlite.field.types.LongStringType:
    com.j256.ormlite.field.types.LongStringType singleTon -> singleTon
    com.j256.ormlite.field.types.LongStringType getSingleton() -> getSingleton
    boolean isAppropriateId() -> isAppropriateId
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.LongType -> com.j256.ormlite.field.types.LongType:
    com.j256.ormlite.field.types.LongType singleTon -> singleTon
    com.j256.ormlite.field.types.LongType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SerializableType -> com.j256.ormlite.field.types.SerializableType:
    com.j256.ormlite.field.types.SerializableType singleTon -> singleTon
    com.j256.ormlite.field.types.SerializableType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isStreamType() -> isStreamType
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ShortObjectType -> com.j256.ormlite.field.types.ShortObjectType:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.ShortType -> com.j256.ormlite.field.types.ShortType:
    com.j256.ormlite.field.types.ShortType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SqlDateType -> com.j256.ormlite.field.types.SqlDateType:
    com.j256.ormlite.field.types.SqlDateType singleTon -> singleTon
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig sqlDateFormatConfig -> sqlDateFormatConfig
    com.j256.ormlite.field.types.SqlDateType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.StringBytesType -> com.j256.ormlite.field.types.StringBytesType:
    java.lang.String DEFAULT_STRING_BYTES_CHARSET_NAME -> DEFAULT_STRING_BYTES_CHARSET_NAME
    com.j256.ormlite.field.types.StringBytesType singleTon -> singleTon
    com.j256.ormlite.field.types.StringBytesType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> getCharsetName
com.j256.ormlite.field.types.StringType -> com.j256.ormlite.field.types.StringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.StringType singleTon -> singleTon
    com.j256.ormlite.field.types.StringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.TimeStampType -> com.j256.ormlite.field.types.TimeStampType:
    com.j256.ormlite.field.types.TimeStampType singleTon -> singleTon
    com.j256.ormlite.field.types.TimeStampType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.UuidType -> com.j256.ormlite.field.types.UuidType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.UuidType singleTon -> singleTon
    com.j256.ormlite.field.types.UuidType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.VoidType -> com.j256.ormlite.field.types.VoidType:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.logger.LocalLog -> com.j256.ormlite.logger.LocalLog:
    java.lang.String LOCAL_LOG_LEVEL_PROPERTY -> LOCAL_LOG_LEVEL_PROPERTY
    java.lang.String LOCAL_LOG_FILE_PROPERTY -> LOCAL_LOG_FILE_PROPERTY
    java.lang.String LOCAL_LOG_PROPERTIES_FILE -> LOCAL_LOG_PROPERTIES_FILE
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.ThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    java.io.PrintStream printStream -> printStream
    java.util.List classLevels -> classLevels
    java.lang.String className -> className
    com.j256.ormlite.logger.Log$Level level -> level
    void openLogFile(java.lang.String) -> openLogFile
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void flush() -> flush
    java.util.List readLevelResourceFile(java.io.InputStream) -> readLevelResourceFile
    java.util.List configureClassLevels(java.io.InputStream) -> configureClassLevels
    void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> printMessage
com.j256.ormlite.logger.LocalLog$1 -> com.j256.ormlite.logger.LocalLog$1:
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.j256.ormlite.logger.LocalLog$PatternLevel:
    java.util.regex.Pattern pattern -> pattern
    com.j256.ormlite.logger.Log$Level level -> level
com.j256.ormlite.logger.Log -> com.j256.ormlite.logger.Log:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
com.j256.ormlite.logger.Log$Level -> com.j256.ormlite.logger.Log$Level:
    com.j256.ormlite.logger.Log$Level TRACE -> TRACE
    com.j256.ormlite.logger.Log$Level DEBUG -> DEBUG
    com.j256.ormlite.logger.Log$Level INFO -> INFO
    com.j256.ormlite.logger.Log$Level WARNING -> WARNING
    com.j256.ormlite.logger.Log$Level ERROR -> ERROR
    com.j256.ormlite.logger.Log$Level FATAL -> FATAL
    int level -> level
    com.j256.ormlite.logger.Log$Level[] $VALUES -> $VALUES
    com.j256.ormlite.logger.Log$Level[] values() -> values
    com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
    boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> isEnabled
com.j256.ormlite.logger.Logger -> com.j256.ormlite.logger.Logger:
    java.lang.String ARG_STRING -> ARG_STRING
    int ARG_STRING_LENGTH -> ARG_STRING_LENGTH
    java.lang.Object UNKNOWN_ARG -> UNKNOWN_ARG
    com.j256.ormlite.logger.Log log -> log
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.String) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.String) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.String) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.String) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.String) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void fatal(java.lang.String) -> fatal
    void fatal(java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object[]) -> fatal
    void fatal(java.lang.Throwable,java.lang.String) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> fatal
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object[]) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    void innerLog(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> innerLog
    java.lang.String buildFullMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> buildFullMessage
    void appendArg(java.lang.StringBuilder,java.lang.Object) -> appendArg
com.j256.ormlite.logger.LoggerFactory -> com.j256.ormlite.logger.LoggerFactory:
    java.lang.String LOG_TYPE_SYSTEM_PROPERTY -> LOG_TYPE_SYSTEM_PROPERTY
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> logType
    com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> getLogger
    com.j256.ormlite.logger.Logger getLogger(java.lang.String) -> getLogger
    java.lang.String getSimpleClassName(java.lang.String) -> getSimpleClassName
    com.j256.ormlite.logger.LoggerFactory$LogType findLogType() -> findLogType
com.j256.ormlite.logger.LoggerFactory$1 -> com.j256.ormlite.logger.LoggerFactory$1:
com.j256.ormlite.logger.LoggerFactory$LogType -> com.j256.ormlite.logger.LoggerFactory$LogType:
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> ANDROID
    com.j256.ormlite.logger.LoggerFactory$LogType SLF4J -> SLF4J
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> COMMONS_LOGGING
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J2 -> LOG4J2
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> LOG4J
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> LOCAL
    java.lang.String detectClassName -> detectClassName
    java.lang.String logClassName -> logClassName
    com.j256.ormlite.logger.LoggerFactory$LogType[] $VALUES -> $VALUES
    com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
    com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> createLogFromClassName
    boolean isAvailableTestClass() -> isAvailableTestClass
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.j256.ormlite.logger.LoggerFactory$LogType$1:
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
com.j256.ormlite.misc.BaseDaoEnabled -> com.j256.ormlite.misc.BaseDaoEnabled:
    com.j256.ormlite.dao.Dao dao -> dao
    int create() -> create
    int refresh() -> refresh
    int update() -> update
    int updateId(java.lang.Object) -> updateId
    int delete() -> delete
    java.lang.String objectToString() -> objectToString
    java.lang.Object extractId() -> extractId
    boolean objectsEqual(java.lang.Object) -> objectsEqual
    void setDao(com.j256.ormlite.dao.Dao) -> setDao
    com.j256.ormlite.dao.Dao getDao() -> getDao
    void checkForDao() -> checkForDao
com.j256.ormlite.misc.JavaxPersistence -> com.j256.ormlite.misc.JavaxPersistence:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> createFieldConfig
    java.lang.String getEntityName(java.lang.Class) -> getEntityName
com.j256.ormlite.misc.SqlExceptionUtil -> com.j256.ormlite.misc.SqlExceptionUtil:
    java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> create
com.j256.ormlite.misc.TransactionManager -> com.j256.ormlite.misc.TransactionManager:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String SAVE_POINT_PREFIX -> SAVE_POINT_PREFIX
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.util.concurrent.atomic.AtomicInteger savePointCounter -> savePointCounter
    void initialize() -> initialize
    java.lang.Object callInTransaction(java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.ConnectionSource,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,boolean,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void commit(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> rollBack
com.j256.ormlite.misc.VersionUtils -> com.j256.ormlite.misc.VersionUtils:
    java.lang.String CORE_VERSION -> CORE_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    boolean thrownOnErrors -> thrownOnErrors
    java.lang.String coreVersion -> coreVersion
    void checkCoreVersusJdbcVersions(java.lang.String) -> checkCoreVersusJdbcVersions
    void checkCoreVersusAndroidVersions(java.lang.String) -> checkCoreVersusAndroidVersions
    java.lang.String getCoreVersion() -> getCoreVersion
    void setThrownOnErrors(boolean) -> setThrownOnErrors
    void logVersionWarnings(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> logVersionWarnings
    void warning(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.Object[]) -> warning
    com.j256.ormlite.logger.Logger getLogger() -> getLogger
com.j256.ormlite.stmt.ArgumentHolder -> com.j256.ormlite.stmt.ArgumentHolder:
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.BaseArgumentHolder -> com.j256.ormlite.stmt.BaseArgumentHolder:
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.ColumnArg -> com.j256.ormlite.stmt.ColumnArg:
    java.lang.String tableName -> tableName
    java.lang.String columnName -> columnName
    java.lang.String getTableName() -> getTableName
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.DeleteBuilder -> com.j256.ormlite.stmt.DeleteBuilder:
    com.j256.ormlite.stmt.PreparedDelete prepare() -> prepare
    int delete() -> delete
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
com.j256.ormlite.stmt.GenericRowMapper -> com.j256.ormlite.stmt.GenericRowMapper:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.NullArgHolder -> com.j256.ormlite.stmt.NullArgHolder:
    java.lang.String getColumnName() -> getColumnName
    void setValue(java.lang.Object) -> setValue
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.PreparedDelete -> com.j256.ormlite.stmt.PreparedDelete:
com.j256.ormlite.stmt.PreparedQuery -> com.j256.ormlite.stmt.PreparedQuery:
com.j256.ormlite.stmt.PreparedStmt -> com.j256.ormlite.stmt.PreparedStmt:
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
com.j256.ormlite.stmt.PreparedUpdate -> com.j256.ormlite.stmt.PreparedUpdate:
com.j256.ormlite.stmt.QueryBuilder -> com.j256.ormlite.stmt.QueryBuilder:
    com.j256.ormlite.field.FieldType idField -> idField
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> resultFieldTypes
    boolean distinct -> distinct
    boolean selectIdColumn -> selectIdColumn
    java.util.List selectColumnList -> selectColumnList
    java.util.List selectRawList -> selectRawList
    java.util.List orderByList -> orderByList
    java.lang.String orderByRaw -> orderByRaw
    com.j256.ormlite.stmt.ArgumentHolder[] orderByArgs -> orderByArgs
    java.util.List groupByList -> groupByList
    java.lang.String groupByRaw -> groupByRaw
    boolean isInnerQuery -> isInnerQuery
    boolean isCountOfQuery -> isCountOfQuery
    java.lang.String having -> having
    java.lang.Long limit -> limit
    java.lang.Long offset -> offset
    java.util.List joinList -> joinList
    void enableInnerQuery() -> enableInnerQuery
    int getSelectColumnCount() -> getSelectColumnCount
    java.util.List getSelectColumns() -> getSelectColumns
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.String[]) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.Iterable) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectRaw(java.lang.String[]) -> selectRaw
    com.j256.ormlite.stmt.QueryBuilder groupBy(java.lang.String) -> groupBy
    com.j256.ormlite.stmt.QueryBuilder groupByRaw(java.lang.String) -> groupByRaw
    com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> orderBy
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder distinct() -> distinct
    com.j256.ormlite.stmt.QueryBuilder limit(int) -> limit
    com.j256.ormlite.stmt.QueryBuilder limit(java.lang.Long) -> limit
    com.j256.ormlite.stmt.QueryBuilder offset(int) -> offset
    com.j256.ormlite.stmt.QueryBuilder offset(java.lang.Long) -> offset
    com.j256.ormlite.stmt.QueryBuilder setCountOf(boolean) -> setCountOf
    com.j256.ormlite.stmt.QueryBuilder having(java.lang.String) -> having
    com.j256.ormlite.stmt.QueryBuilder join(com.j256.ormlite.stmt.QueryBuilder) -> join
    com.j256.ormlite.stmt.QueryBuilder joinOr(com.j256.ormlite.stmt.QueryBuilder) -> joinOr
    com.j256.ormlite.stmt.QueryBuilder leftJoin(com.j256.ormlite.stmt.QueryBuilder) -> leftJoin
    com.j256.ormlite.stmt.QueryBuilder leftJoinOr(com.j256.ormlite.stmt.QueryBuilder) -> leftJoinOr
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    long countOf() -> countOf
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    void setAddTableName(boolean) -> setAddTableName
    void addJoinInfo(java.lang.String,com.j256.ormlite.stmt.QueryBuilder,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> addJoinInfo
    void matchJoinedFields(com.j256.ormlite.stmt.QueryBuilder$JoinInfo,com.j256.ormlite.stmt.QueryBuilder) -> matchJoinedFields
    void addSelectColumnToList(java.lang.String) -> addSelectColumnToList
    void appendJoinSql(java.lang.StringBuilder) -> appendJoinSql
    void appendSelectRaw(java.lang.StringBuilder) -> appendSelectRaw
    void appendColumns(java.lang.StringBuilder) -> appendColumns
    void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    void appendLimit(java.lang.StringBuilder) -> appendLimit
    void appendOffset(java.lang.StringBuilder) -> appendOffset
    void appendGroupBys(java.lang.StringBuilder) -> appendGroupBys
    boolean hasGroupStuff() -> hasGroupStuff
    void appendGroupBys(java.lang.StringBuilder,boolean) -> appendGroupBys
    void appendOrderBys(java.lang.StringBuilder,java.util.List) -> appendOrderBys
    boolean hasOrderStuff() -> hasOrderStuff
    void appendOrderBys(java.lang.StringBuilder,boolean,java.util.List) -> appendOrderBys
    void appendColumnName(java.lang.StringBuilder,java.lang.String) -> appendColumnName
    void appendHaving(java.lang.StringBuilder) -> appendHaving
com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper -> com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper:
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
com.j256.ormlite.stmt.QueryBuilder$JoinInfo -> com.j256.ormlite.stmt.QueryBuilder$JoinInfo:
    java.lang.String type -> type
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    com.j256.ormlite.field.FieldType localField -> localField
    com.j256.ormlite.field.FieldType remoteField -> remoteField
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation operation -> operation
    com.j256.ormlite.stmt.QueryBuilder this$0 -> this$0
com.j256.ormlite.stmt.RawResultsImpl -> com.j256.ormlite.stmt.RawResultsImpl:
    com.j256.ormlite.stmt.SelectIterator iterator -> iterator
    java.lang.String[] columnNames -> columnNames
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.stmt.RawRowMapperImpl -> com.j256.ormlite.stmt.RawRowMapperImpl:
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.stmt.SelectArg -> com.j256.ormlite.stmt.SelectArg:
    boolean hasBeenSet -> hasBeenSet
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.SelectIterator -> com.j256.ormlite.stmt.SelectIterator:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.dao.Dao classDao -> classDao
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    com.j256.ormlite.support.CompiledStatement compiledStmt -> compiledStmt
    com.j256.ormlite.support.DatabaseResults results -> results
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> rowMapper
    java.lang.String statement -> statement
    boolean first -> first
    boolean closed -> closed
    boolean alreadyMoved -> alreadyMoved
    java.lang.Object last -> last
    int rowC -> rowC
    boolean hasNextThrow() -> hasNextThrow
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object next() -> next
    java.lang.Object moveRelative(int) -> moveRelative
    void removeThrow() -> removeThrow
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object getCurrent() -> getCurrent
com.j256.ormlite.stmt.StatementBuilder -> com.j256.ormlite.stmt.StatementBuilder:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.String tableName -> tableName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean addTableName -> addTableName
    com.j256.ormlite.stmt.Where where -> where
    com.j256.ormlite.stmt.Where where() -> where
    void setWhere(com.j256.ormlite.stmt.Where) -> setWhere
    com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement(java.lang.Long) -> prepareStatement
    java.lang.String prepareStatementString() -> prepareStatementString
    com.j256.ormlite.stmt.StatementBuilder$StatementInfo prepareStatementInfo() -> prepareStatementInfo
    void clear() -> clear
    void reset() -> reset
    java.lang.String buildStatementString(java.util.List) -> buildStatementString
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> verifyColumnName
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.StatementBuilder$1 -> com.j256.ormlite.stmt.StatementBuilder$1:
com.j256.ormlite.stmt.StatementBuilder$StatementInfo -> com.j256.ormlite.stmt.StatementBuilder$StatementInfo:
    java.lang.String statement -> statement
    java.util.List argList -> argList
    java.lang.String getStatement() -> getStatement
    java.util.List getArgList() -> getArgList
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.j256.ormlite.stmt.StatementBuilder$StatementType:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> SELECT
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> SELECT_LONG
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> SELECT_RAW
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> UPDATE
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> DELETE
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> EXECUTE
    boolean okForStatementBuilder -> okForStatementBuilder
    boolean okForQuery -> okForQuery
    boolean okForUpdate -> okForUpdate
    boolean okForExecute -> okForExecute
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
    boolean isOkForStatementBuilder() -> isOkForStatementBuilder
    boolean isOkForQuery() -> isOkForQuery
    boolean isOkForUpdate() -> isOkForUpdate
    boolean isOkForExecute() -> isOkForExecute
com.j256.ormlite.stmt.StatementBuilder$WhereOperation -> com.j256.ormlite.stmt.StatementBuilder$WhereOperation:
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation FIRST -> FIRST
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation AND -> AND
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation OR -> OR
    java.lang.String before -> before
    java.lang.String after -> after
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation valueOf(java.lang.String) -> valueOf
    void appendBefore(java.lang.StringBuilder) -> appendBefore
    void appendAfter(java.lang.StringBuilder) -> appendAfter
com.j256.ormlite.stmt.StatementExecutor -> com.j256.ormlite.stmt.StatementExecutor:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> preparedQueryForAll
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> mappedInsert
    com.j256.ormlite.stmt.mapped.MappedUpdate mappedUpdate -> mappedUpdate
    com.j256.ormlite.stmt.mapped.MappedUpdateId mappedUpdateId -> mappedUpdateId
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> mappedDelete
    com.j256.ormlite.stmt.mapped.MappedRefresh mappedRefresh -> mappedRefresh
    java.lang.String countStarQuery -> countStarQuery
    java.lang.String ifExistsQuery -> ifExistsQuery
    com.j256.ormlite.field.FieldType[] ifExistsFieldTypes -> ifExistsFieldTypes
    com.j256.ormlite.dao.RawRowMapper rawRowMapper -> rawRowMapper
    java.lang.Object queryForId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> queryForFirst
    java.util.List queryForAll(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> queryForAll
    long queryForCountStar(com.j256.ormlite.support.DatabaseConnection) -> queryForCountStar
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt) -> queryForLong
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> queryForLong
    java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> query
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,int,com.j256.ormlite.dao.ObjectCache) -> buildIterator
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache,int) -> buildIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    int updateRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> updateRaw
    int executeRawNoArgs(com.j256.ormlite.support.DatabaseConnection,java.lang.String) -> executeRawNoArgs
    int executeRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> executeRaw
    int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> create
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    int updateId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> updateId
    int update(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> refresh
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
    int deleteObjects(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    int delete(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedDelete) -> delete
    java.lang.Object callBatchTasks(com.j256.ormlite.support.DatabaseConnection,boolean,java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    boolean ifExists(com.j256.ormlite.support.DatabaseConnection,java.lang.Object) -> ifExists
    void assignStatementArguments(com.j256.ormlite.support.CompiledStatement,java.lang.String[]) -> assignStatementArguments
    void prepareQueryForAll() -> prepareQueryForAll
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper -> com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper:
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.Object[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper:
    com.j256.ormlite.dao.RawRowMapper mapper -> mapper
    com.j256.ormlite.stmt.GenericRowMapper stringRowMapper -> stringRowMapper
    java.lang.String[] columnNames -> columnNames
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper:
    com.j256.ormlite.dao.RawRowObjectMapper mapper -> mapper
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.String[] columnNames -> columnNames
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.ThreadLocalSelectArg -> com.j256.ormlite.stmt.ThreadLocalSelectArg:
    java.lang.ThreadLocal threadValue -> threadValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper -> com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper:
    java.lang.Object value -> value
com.j256.ormlite.stmt.UpdateBuilder -> com.j256.ormlite.stmt.UpdateBuilder:
    java.util.List updateClauseList -> updateClauseList
    com.j256.ormlite.stmt.PreparedUpdate prepare() -> prepare
    com.j256.ormlite.stmt.StatementBuilder updateColumnValue(java.lang.String,java.lang.Object) -> updateColumnValue
    com.j256.ormlite.stmt.StatementBuilder updateColumnExpression(java.lang.String,java.lang.String) -> updateColumnExpression
    void escapeColumnName(java.lang.StringBuilder,java.lang.String) -> escapeColumnName
    java.lang.String escapeColumnName(java.lang.String) -> escapeColumnName
    void escapeValue(java.lang.StringBuilder,java.lang.String) -> escapeValue
    java.lang.String escapeValue(java.lang.String) -> escapeValue
    int update() -> update
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    void addUpdateColumnToList(java.lang.String,com.j256.ormlite.stmt.query.Clause) -> addUpdateColumnToList
com.j256.ormlite.stmt.Where -> com.j256.ormlite.stmt.Where:
    int CLAUSE_STACK_START_SIZE -> CLAUSE_STACK_START_SIZE
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> statementBuilder
    com.j256.ormlite.field.FieldType idFieldType -> idFieldType
    java.lang.String idColumnName -> idColumnName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> clauseStack
    int clauseStackLevel -> clauseStackLevel
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> needsFuture
    com.j256.ormlite.stmt.Where and() -> and
    com.j256.ormlite.stmt.Where and(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> and
    com.j256.ormlite.stmt.Where and(int) -> and
    com.j256.ormlite.stmt.Where between(java.lang.String,java.lang.Object,java.lang.Object) -> between
    com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> eq
    com.j256.ormlite.stmt.Where ge(java.lang.String,java.lang.Object) -> ge
    com.j256.ormlite.stmt.Where gt(java.lang.String,java.lang.Object) -> gt
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Iterable) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Iterable) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> notIn
    com.j256.ormlite.stmt.Where exists(com.j256.ormlite.stmt.QueryBuilder) -> exists
    com.j256.ormlite.stmt.Where isNull(java.lang.String) -> isNull
    com.j256.ormlite.stmt.Where isNotNull(java.lang.String) -> isNotNull
    com.j256.ormlite.stmt.Where le(java.lang.String,java.lang.Object) -> le
    com.j256.ormlite.stmt.Where lt(java.lang.String,java.lang.Object) -> lt
    com.j256.ormlite.stmt.Where like(java.lang.String,java.lang.Object) -> like
    com.j256.ormlite.stmt.Where ne(java.lang.String,java.lang.Object) -> ne
    com.j256.ormlite.stmt.Where not() -> not
    com.j256.ormlite.stmt.Where not(com.j256.ormlite.stmt.Where) -> not
    com.j256.ormlite.stmt.Where or() -> or
    com.j256.ormlite.stmt.Where or(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> or
    com.j256.ormlite.stmt.Where or(int) -> or
    com.j256.ormlite.stmt.Where idEq(java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where idEq(com.j256.ormlite.dao.Dao,java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where raw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> raw
    com.j256.ormlite.stmt.Where rawComparison(java.lang.String,java.lang.String,java.lang.Object) -> rawComparison
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    long countOf() -> countOf
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.stmt.Where clear() -> clear
    com.j256.ormlite.stmt.Where reset() -> reset
    java.lang.String getStatement() -> getStatement
    void appendSql(java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
    com.j256.ormlite.stmt.QueryBuilder checkQueryBuilderMethod(java.lang.String) -> checkQueryBuilderMethod
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.query.Clause[] buildClauseArray(com.j256.ormlite.stmt.Where[],java.lang.String) -> buildClauseArray
    void addNeedsFuture(com.j256.ormlite.stmt.query.NeedsFutureClause) -> addNeedsFuture
    void addClause(com.j256.ormlite.stmt.query.Clause) -> addClause
    com.j256.ormlite.field.FieldType findColumnFieldType(java.lang.String) -> findColumnFieldType
    void push(com.j256.ormlite.stmt.query.Clause) -> push
    com.j256.ormlite.stmt.query.Clause pop(java.lang.String) -> pop
    com.j256.ormlite.stmt.query.Clause peek() -> peek
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.j256.ormlite.stmt.mapped.BaseMappedQuery:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> resultsFieldTypes
    java.util.Map columnPositions -> columnPositions
    java.lang.Object parent -> parent
    java.lang.Object parentId -> parentId
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    void setParentInformation(java.lang.Object,java.lang.Object) -> setParentInformation
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.j256.ormlite.stmt.mapped.BaseMappedStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Class clazz -> clazz
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.String statement -> statement
    com.j256.ormlite.field.FieldType[] argFieldTypes -> argFieldTypes
    java.lang.Object[] getFieldObjects(java.lang.Object) -> getFieldObjects
    java.lang.Object convertIdToFieldObject(java.lang.Object) -> convertIdToFieldObject
    void appendWhereFieldEq(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List) -> appendWhereFieldEq
    void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTableName
    void appendFieldColumnName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.j256.ormlite.stmt.mapped.MappedCreate:
    java.lang.String queryNextSequenceStmt -> queryNextSequenceStmt
    java.lang.String dataClassName -> dataClassName
    int versionFieldTypeIndex -> versionFieldTypeIndex
    int insert(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> insert
    com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    boolean foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[],java.lang.Object) -> foreignCollectionsAreAssigned
    boolean isFieldCreatable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> isFieldCreatable
    java.lang.String buildQueryNextSequence(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> buildQueryNextSequence
    void assignSequenceId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> assignSequenceId
    void assignIdValue(java.lang.Object,java.lang.Number,java.lang.String,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
com.j256.ormlite.stmt.mapped.MappedCreate$1 -> com.j256.ormlite.stmt.mapped.MappedCreate$1:
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder:
    java.lang.Number key -> key
    java.lang.Number getKey() -> getKey
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.stmt.mapped.MappedDelete -> com.j256.ormlite.stmt.mapped.MappedDelete:
    com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
com.j256.ormlite.stmt.mapped.MappedDeleteCollection -> com.j256.ormlite.stmt.mapped.MappedDeleteCollection:
    int deleteObjects(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    com.j256.ormlite.stmt.mapped.MappedDeleteCollection build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,int) -> build
    int updateRows(com.j256.ormlite.support.DatabaseConnection,java.lang.Class,com.j256.ormlite.stmt.mapped.MappedDeleteCollection,java.lang.Object[],com.j256.ormlite.dao.ObjectCache) -> updateRows
    void appendWhereIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int,com.j256.ormlite.field.FieldType[]) -> appendWhereIds
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.j256.ormlite.stmt.mapped.MappedPreparedStmt:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> argHolders
    java.lang.Long limit -> limit
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
    com.j256.ormlite.support.CompiledStatement assignStatementArguments(com.j256.ormlite.support.CompiledStatement) -> assignStatementArguments
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.j256.ormlite.stmt.mapped.MappedQueryForId:
    java.lang.String label -> label
    java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> build
    java.lang.String buildStatement(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> buildStatement
    void logArgs(java.lang.Object[]) -> logArgs
com.j256.ormlite.stmt.mapped.MappedRefresh -> com.j256.ormlite.stmt.mapped.MappedRefresh:
    int executeRefresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> executeRefresh
    com.j256.ormlite.stmt.mapped.MappedRefresh build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
com.j256.ormlite.stmt.mapped.MappedUpdate -> com.j256.ormlite.stmt.mapped.MappedUpdate:
    com.j256.ormlite.field.FieldType versionFieldType -> versionFieldType
    int versionFieldTypeIndex -> versionFieldTypeIndex
    com.j256.ormlite.stmt.mapped.MappedUpdate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    boolean isFieldUpdatable(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.FieldType) -> isFieldUpdatable
com.j256.ormlite.stmt.mapped.MappedUpdateId -> com.j256.ormlite.stmt.mapped.MappedUpdateId:
    int execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedUpdateId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    java.lang.Object extractIdToFieldObject(java.lang.Object) -> extractIdToFieldObject
com.j256.ormlite.stmt.query.BaseComparison -> com.j256.ormlite.stmt.query.BaseComparison:
    java.lang.String NUMBER_CHARACTERS -> NUMBER_CHARACTERS
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    java.lang.Object value -> value
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Between -> com.j256.ormlite.stmt.query.Between:
    java.lang.Object low -> low
    java.lang.Object high -> high
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Clause -> com.j256.ormlite.stmt.query.Clause:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Comparison -> com.j256.ormlite.stmt.query.Comparison:
    java.lang.String getColumnName() -> getColumnName
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
com.j256.ormlite.stmt.query.Exists -> com.j256.ormlite.stmt.query.Exists:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.In -> com.j256.ormlite.stmt.query.In:
    java.lang.Iterable objects -> objects
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.InSubQuery -> com.j256.ormlite.stmt.query.InSubQuery:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNotNull -> com.j256.ormlite.stmt.query.IsNotNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNull -> com.j256.ormlite.stmt.query.IsNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.ManyClause -> com.j256.ormlite.stmt.query.ManyClause:
    java.lang.String AND_OPERATION -> AND_OPERATION
    java.lang.String OR_OPERATION -> OR_OPERATION
    com.j256.ormlite.stmt.query.Clause first -> first
    com.j256.ormlite.stmt.query.Clause second -> second
    com.j256.ormlite.stmt.query.Clause[] others -> others
    int startOthersAt -> startOthersAt
    java.lang.String operation -> operation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.j256.ormlite.stmt.query.NeedsFutureClause:
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.Not -> com.j256.ormlite.stmt.query.Not:
    com.j256.ormlite.stmt.query.Comparison comparison -> comparison
    com.j256.ormlite.stmt.query.Exists exists -> exists
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.OrderBy -> com.j256.ormlite.stmt.query.OrderBy:
    java.lang.String columnName -> columnName
    boolean ascending -> ascending
    java.lang.String getColumnName() -> getColumnName
    boolean isAscending() -> isAscending
com.j256.ormlite.stmt.query.Raw -> com.j256.ormlite.stmt.query.Raw:
    java.lang.String statement -> statement
    com.j256.ormlite.stmt.ArgumentHolder[] args -> args
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetExpression -> com.j256.ormlite.stmt.query.SetExpression:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetValue -> com.j256.ormlite.stmt.query.SetValue:
    com.j256.ormlite.stmt.ArgumentHolder nullValue -> nullValue
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SimpleComparison -> com.j256.ormlite.stmt.query.SimpleComparison:
    java.lang.String EQUAL_TO_OPERATION -> EQUAL_TO_OPERATION
    java.lang.String GREATER_THAN_OPERATION -> GREATER_THAN_OPERATION
    java.lang.String GREATER_THAN_EQUAL_TO_OPERATION -> GREATER_THAN_EQUAL_TO_OPERATION
    java.lang.String LESS_THAN_OPERATION -> LESS_THAN_OPERATION
    java.lang.String LESS_THAN_EQUAL_TO_OPERATION -> LESS_THAN_EQUAL_TO_OPERATION
    java.lang.String LIKE_OPERATION -> LIKE_OPERATION
    java.lang.String NOT_EQUAL_TO_OPERATION -> NOT_EQUAL_TO_OPERATION
    java.lang.String operation -> operation
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.support.BaseConnectionSource -> com.j256.ormlite.support.BaseConnectionSource:
    java.lang.ThreadLocal specialConnection -> specialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> getSavedConnection
    boolean isSavedConnection(com.j256.ormlite.support.DatabaseConnection) -> isSavedConnection
    boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> saveSpecial
    boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> clearSpecial
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.j256.ormlite.support.BaseConnectionSource$NestedConnection:
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    int nestedC -> nestedC
    void increment() -> increment
    int decrementAndGet() -> decrementAndGet
com.j256.ormlite.support.CompiledStatement -> com.j256.ormlite.support.CompiledStatement:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    int runUpdate() -> runUpdate
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
com.j256.ormlite.support.ConnectionSource -> com.j256.ormlite.support.ConnectionSource:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
com.j256.ormlite.support.DatabaseConnection -> com.j256.ormlite.support.DatabaseConnection:
    java.lang.Object MORE_THAN_ONE -> MORE_THAN_ONE
    int DEFAULT_RESULT_FLAGS -> DEFAULT_RESULT_FLAGS
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxy -> com.j256.ormlite.support.DatabaseConnectionProxy:
    com.j256.ormlite.support.DatabaseConnection proxy -> proxy
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxyFactory -> com.j256.ormlite.support.DatabaseConnectionProxyFactory:
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.support.DatabaseResults -> com.j256.ormlite.support.DatabaseResults:
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean previous() -> previous
    boolean next() -> next
    boolean last() -> last
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
com.j256.ormlite.support.GeneratedKeyHolder -> com.j256.ormlite.support.GeneratedKeyHolder:
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory -> com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory:
    java.lang.Class proxyClass -> proxyClass
    java.lang.reflect.Constructor constructor -> constructor
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.table.DatabaseTable -> com.j256.ormlite.table.DatabaseTable:
    java.lang.String tableName() -> tableName
    java.lang.Class daoClass() -> daoClass
com.j256.ormlite.table.DatabaseTableConfig -> com.j256.ormlite.table.DatabaseTableConfig:
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    java.util.List fieldConfigs -> fieldConfigs
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    java.lang.reflect.Constructor constructor -> constructor
    void initialize() -> initialize
    java.lang.Class getDataClass() -> getDataClass
    void setDataClass(java.lang.Class) -> setDataClass
    java.lang.String getTableName() -> getTableName
    void setTableName(java.lang.String) -> setTableName
    void setFieldConfigs(java.util.List) -> setFieldConfigs
    void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] getFieldTypes(com.j256.ormlite.db.DatabaseType) -> getFieldTypes
    java.util.List getFieldConfigs() -> getFieldConfigs
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    void setConstructor(java.lang.reflect.Constructor) -> setConstructor
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    java.lang.String extractTableName(java.lang.Class) -> extractTableName
    java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> findNoArgConstructor
    com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> convertFieldConfigs
com.j256.ormlite.table.DatabaseTableConfigLoader -> com.j256.ormlite.table.DatabaseTableConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    java.lang.String CONFIG_FILE_FIELDS_START -> CONFIG_FILE_FIELDS_START
    java.lang.String CONFIG_FILE_FIELDS_END -> CONFIG_FILE_FIELDS_END
    java.lang.String FIELD_NAME_DATA_CLASS -> FIELD_NAME_DATA_CLASS
    java.lang.String FIELD_NAME_TABLE_NAME -> FIELD_NAME_TABLE_NAME
    java.util.List loadDatabaseConfigFromReader(java.io.BufferedReader) -> loadDatabaseConfigFromReader
    com.j256.ormlite.table.DatabaseTableConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> writeConfig
    void readTableField(com.j256.ormlite.table.DatabaseTableConfig,java.lang.String,java.lang.String) -> readTableField
    void readFields(java.io.BufferedReader,com.j256.ormlite.table.DatabaseTableConfig) -> readFields
com.j256.ormlite.table.ObjectFactory -> com.j256.ormlite.table.ObjectFactory:
    java.lang.Object createObject(java.lang.reflect.Constructor,java.lang.Class) -> createObject
com.j256.ormlite.table.TableInfo -> com.j256.ormlite.table.TableInfo:
    com.j256.ormlite.field.FieldType[] NO_FOREIGN_COLLECTIONS -> NO_FOREIGN_COLLECTIONS
    com.j256.ormlite.dao.BaseDaoImpl baseDaoImpl -> baseDaoImpl
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    com.j256.ormlite.field.FieldType[] foreignCollections -> foreignCollections
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.reflect.Constructor constructor -> constructor
    boolean foreignAutoCreate -> foreignAutoCreate
    java.util.Map fieldNameMap -> fieldNameMap
    java.lang.Class getDataClass() -> getDataClass
    java.lang.String getTableName() -> getTableName
    com.j256.ormlite.field.FieldType[] getFieldTypes() -> getFieldTypes
    com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> getFieldTypeByColumnName
    com.j256.ormlite.field.FieldType getIdField() -> getIdField
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.String objectToString(java.lang.Object) -> objectToString
    java.lang.Object createObject() -> createObject
    boolean isUpdatable() -> isUpdatable
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    com.j256.ormlite.field.FieldType[] getForeignCollections() -> getForeignCollections
    boolean hasColumnName(java.lang.String) -> hasColumnName
    void wireNewInstance(com.j256.ormlite.dao.BaseDaoImpl,java.lang.Object) -> wireNewInstance
com.j256.ormlite.table.TableUtils -> com.j256.ormlite.table.TableUtils:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTableIfNotExists
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTableIfNotExists
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> getCreateTableStatements
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> getCreateTableStatements
    int dropTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> dropTable
    int dropTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> dropTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> clearTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> clearTable
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> createTable
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> createTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.String) -> clearTable
    int doDropTable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doDropTable
    void addDropIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropIndexStatements
    void addCreateTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,java.util.List,boolean) -> addCreateTableStatements
    void addCreateIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean,boolean) -> addCreateIndexStatements
    void addDropTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropTableStatements
    int doCreateTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doCreateTable
    int doStatements(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean,boolean,boolean) -> doStatements
    int doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.List) -> doCreateTestQueries
    java.util.List addCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> addCreateTableStatements
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer mTrans -> mTrans
    android.view.animation.Interpolator lin -> lin
    void initTransformer() -> initTransformer
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int) -> zoom
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int,android.view.animation.Interpolator) -> zoom
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int) -> rotate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int,android.view.animation.Interpolator) -> rotate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int) -> translate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int,android.view.animation.Interpolator) -> translate
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer concatTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> concatTransformer
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer access$0(com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder) -> access$0
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$1 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$1:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$2 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$2:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$3 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$3:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$4 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$4:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedDeg -> val$openedDeg
    int val$closedDeg -> val$closedDeg
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$5 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$5:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$6 -> com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder$6:
    com.jeremyfeinstein.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer val$t -> val$t
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.view.View mContent -> mContent
    int mCurItem -> mCurItem
    android.widget.Scroller mScroller -> mScroller
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mScrolling -> mScrolling
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> mViewBehind
    boolean mEnabled -> mEnabled
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> mClosedListener
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> mOpenedListener
    java.util.List mIgnoredViews -> mIgnoredViews
    int mTouchMode -> mTouchMode
    boolean mQuickReturn -> mQuickReturn
    float mScrollX -> mScrollX
    void initCustomViewAbove() -> initCustomViewAbove
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void setOnPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setInternalPageChangeListener
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int getDestScrollX(int) -> getDestScrollX
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> isMenuOpen
    boolean isInIgnoredView(android.view.MotionEvent) -> isInIgnoredView
    int getBehindWidth() -> getBehindWidth
    int getChildWidth(int) -> getChildWidth
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> completeScroll
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> thisTouchAllowed
    boolean thisSlideAllowed(float) -> thisSlideAllowed
    int getPointerIndex(android.view.MotionEvent,int) -> getPointerIndex
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> determineDrag
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> determineTargetPage
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void startDrag() -> startDrag
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind access$0(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> access$0
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$1 -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$1:
    float getInterpolation(float) -> getInterpolation
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$2 -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$2:
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind -> com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind:
    java.lang.String TAG -> TAG
    int MARGIN_THRESHOLD -> MARGIN_THRESHOLD
    int mTouchMode -> mTouchMode
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> mViewAbove
    android.view.View mContent -> mContent
    android.view.View mSecondaryContent -> mSecondaryContent
    int mMarginThreshold -> mMarginThreshold
    int mWidthOffset -> mWidthOffset
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> mTransformer
    boolean mChildrenEnabled -> mChildrenEnabled
    int mMode -> mMode
    boolean mFadeEnabled -> mFadeEnabled
    android.graphics.Paint mFadePaint -> mFadePaint
    float mScrollScale -> mScrollScale
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> mSecondaryShadowDrawable
    int mShadowWidth -> mShadowWidth
    float mFadeDegree -> mFadeDegree
    boolean mSelectorEnabled -> mSelectorEnabled
    android.graphics.Bitmap mSelectorDrawable -> mSelectorDrawable
    android.view.View mSelectedView -> mSelectedView
    void setCustomViewAbove(com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    void setMarginThreshold(int) -> setMarginThreshold
    int getMarginThreshold() -> getMarginThreshold
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> getMenuPage
    void scrollBehindTo(android.view.View,int,int) -> scrollBehindTo
    int getMenuLeft(android.view.View,int) -> getMenuLeft
    int getAbsLeftBound(android.view.View) -> getAbsLeftBound
    int getAbsRightBound(android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int) -> marginTouchAllowed
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(float) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(float) -> menuOpenSlideAllowed
    void drawShadow(android.view.View,android.graphics.Canvas) -> drawShadow
    void drawFade(android.view.View,android.graphics.Canvas,float) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.jeremyfeinstein.slidingmenu.lib.MenuInterface -> com.jeremyfeinstein.slidingmenu.lib.MenuInterface:
    void scrollBehindTo(int,int,com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,float) -> scrollBehindTo
    int getMenuLeft(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getMenuLeft
    int getAbsLeftBound(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsLeftBound
    int getAbsRightBound(com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int,int) -> marginTouchAllowed
    boolean menuOpenTouchAllowed(android.view.View,int,int) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,int) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(int) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(int) -> menuOpenSlideAllowed
    void drawShadow(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawShadow
    void drawFade(android.graphics.Canvas,int,com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind,android.view.View) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
com.jeremyfeinstein.slidingmenu.lib.R -> com.jeremyfeinstein.slidingmenu.lib.R:
com.jeremyfeinstein.slidingmenu.lib.R$attr -> com.jeremyfeinstein.slidingmenu.lib.R$attr:
    int behindOffset -> behindOffset
    int behindScrollScale -> behindScrollScale
    int behindWidth -> behindWidth
    int fadeDegree -> fadeDegree
    int fadeEnabled -> fadeEnabled
    int mode -> mode
    int selectorDrawable -> selectorDrawable
    int selectorEnabled -> selectorEnabled
    int shadowDrawable -> shadowDrawable
    int shadowWidth -> shadowWidth
    int touchModeAbove -> touchModeAbove
    int touchModeBehind -> touchModeBehind
    int viewAbove -> viewAbove
    int viewBehind -> viewBehind
com.jeremyfeinstein.slidingmenu.lib.R$id -> com.jeremyfeinstein.slidingmenu.lib.R$id:
    int fullscreen -> fullscreen
    int left -> left
    int margin -> margin
    int right -> right
    int selected_view -> selected_view
    int slidingmenumain -> slidingmenumain
com.jeremyfeinstein.slidingmenu.lib.R$layout -> com.jeremyfeinstein.slidingmenu.lib.R$layout:
    int view_sliding_menu_main -> view_sliding_menu_main
com.jeremyfeinstein.slidingmenu.lib.R$styleable -> com.jeremyfeinstein.slidingmenu.lib.R$styleable:
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu:
    java.lang.String TAG -> TAG
    int SLIDING_WINDOW -> SLIDING_WINDOW
    int SLIDING_CONTENT -> SLIDING_CONTENT
    boolean mActionbarOverlay -> mActionbarOverlay
    int TOUCHMODE_MARGIN -> TOUCHMODE_MARGIN
    int TOUCHMODE_FULLSCREEN -> TOUCHMODE_FULLSCREEN
    int TOUCHMODE_NONE -> TOUCHMODE_NONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int LEFT_RIGHT -> LEFT_RIGHT
    com.jeremyfeinstein.slidingmenu.lib.CustomViewAbove mViewAbove -> mViewAbove
    com.jeremyfeinstein.slidingmenu.lib.CustomViewBehind mViewBehind -> mViewBehind
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> mOpenListener
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener mSecondaryOpenListner -> mSecondaryOpenListner
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> mCloseListener
    void attachToActivity(android.app.Activity,int) -> attachToActivity
    void attachToActivity(android.app.Activity,int,boolean) -> attachToActivity
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> showMenu
    void showMenu(boolean) -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void showSecondaryMenu(boolean) -> showSecondaryMenu
    void showContent() -> showContent
    void showContent(boolean) -> showContent
    void toggle() -> toggle
    void toggle(boolean) -> toggle
    boolean isMenuShowing() -> isMenuShowing
    boolean isSecondaryMenuShowing() -> isSecondaryMenuShowing
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    int getTouchmodeMarginThreshold() -> getTouchmodeMarginThreshold
    void setTouchmodeMarginThreshold(int) -> setTouchmodeMarginThreshold
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    void setOnOpenListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setSecondaryOnOpenListner(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setSecondaryOnOpenListner
    void setOnCloseListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> access$0
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener access$1(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> access$1
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener access$2(com.jeremyfeinstein.slidingmenu.lib.SlidingMenu) -> access$2
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$1 -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$1:
    int POSITION_OPEN -> POSITION_OPEN
    int POSITION_CLOSE -> POSITION_CLOSE
    int POSITION_SECONDARY_OPEN -> POSITION_SECONDARY_OPEN
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$CanvasTransformer:
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnCloseListener:
    void onClose() -> onClose
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnClosedListener:
    void onClosed() -> onClosed
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenListener:
    void onOpen() -> onOpen
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$OnOpenedListener:
    void onOpened() -> onOpened
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState:
    int mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> getItem
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState$1 -> com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState$1:
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityBase -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityBase:
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(int) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper:
    android.app.Activity mActivity -> mActivity
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu mSlidingMenu -> mSlidingMenu
    android.view.View mViewAbove -> mViewAbove
    android.view.View mViewBehind -> mViewBehind
    boolean mBroadcasting -> mBroadcasting
    boolean mOnPostCreateCalled -> mOnPostCreateCalled
    boolean mEnableSlide -> mEnableSlide
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> registerAboveContentView
    void setContentView(android.view.View) -> setContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu access$0(com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper) -> access$0
com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper$1 -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper$1:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper this$0 -> this$0
    boolean val$open -> val$open
    boolean val$secondary -> val$secondary
    void run() -> run
com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingFragmentActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingListActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingListActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.jeremyfeinstein.slidingmenu.lib.app.SlidingPreferenceActivity -> com.jeremyfeinstein.slidingmenu.lib.app.SlidingPreferenceActivity:
    com.jeremyfeinstein.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.jeremyfeinstein.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.loopj.android.http.AsyncHttpClient -> com.a.a.a.a:
    int maxConnections -> a
    int timeout -> b
    org.apache.http.impl.client.DefaultHttpClient httpClient -> c
    org.apache.http.protocol.HttpContext httpContext -> d
    java.util.concurrent.ExecutorService threadPool -> e
    java.util.Map requestMap -> f
    java.util.Map clientHeaderMap -> g
    boolean isUrlEncodingEnabled -> h
    org.apache.http.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> a
    java.util.concurrent.ExecutorService getDefaultThreadPool() -> a
    void cancelRequests(android.content.Context,boolean) -> a
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> a
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> a
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> b
    java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> a
    boolean isInputStreamGZIPCompressed(java.io.PushbackInputStream) -> a
    void silentCloseInputStream(java.io.InputStream) -> a
    void endEntityViaReflection(org.apache.http.HttpEntity) -> a
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> a
    java.util.Map access$100(com.loopj.android.http.AsyncHttpClient) -> b
com.loopj.android.http.AsyncHttpClient$1 -> com.a.a.a.b:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.a.a.a.c:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> com.a.a.a.d:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$4 -> com.a.a.a.e:
    android.content.Context val$context -> a
    boolean val$mayInterruptIfRunning -> b
    com.loopj.android.http.AsyncHttpClient this$0 -> c
    void run() -> run
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.a.a.a.f:
    java.io.InputStream wrappedStream -> a
    java.io.PushbackInputStream pushbackStream -> b
    java.util.zip.GZIPInputStream gzippedStream -> c
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> com.a.a.a.g:
    org.apache.http.impl.client.AbstractHttpClient client -> a
    org.apache.http.protocol.HttpContext context -> b
    org.apache.http.client.methods.HttpUriRequest request -> c
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> d
    int executionCount -> e
    boolean isCancelled -> f
    boolean cancelIsNotified -> g
    boolean isFinished -> h
    void run() -> run
    void makeRequest() -> c
    void makeRequestWithRetries() -> d
    boolean isCancelled() -> a
    void sendCancelNotification() -> e
    boolean isDone() -> b
    boolean cancel(boolean) -> a
com.loopj.android.http.AsyncHttpResponseHandler -> com.a.a.a.h:
    java.lang.String responseCharset -> a
    android.os.Handler handler -> b
    boolean useSynchronousMode -> c
    java.net.URI requestURI -> d
    org.apache.http.Header[] requestHeaders -> e
    void setRequestURI(java.net.URI) -> a
    void setRequestHeaders(org.apache.http.Header[]) -> a
    boolean getUseSynchronousMode() -> b
    void setUseSynchronousMode(boolean) -> a
    void onProgress(int,int) -> b
    void onStart() -> c
    void onFinish() -> d
    void onSuccess(int,org.apache.http.Header[],byte[]) -> a
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> b
    void onRetry(int) -> a
    void onCancel() -> e
    void sendProgressMessage(int,int) -> c
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> b
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> c
    void sendStartMessage() -> f
    void sendFinishMessage() -> g
    void sendRetryMessage(int) -> b
    void sendCancelMessage() -> h
    void handleMessage(android.os.Message) -> a
    void sendMessage(android.os.Message) -> b
    android.os.Message obtainMessage(int,java.lang.Object) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    byte[] getResponseData(org.apache.http.HttpEntity) -> a
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.a.a.a.i:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.BinaryHttpResponseHandler -> com.a.a.a.j:
    java.lang.String[] mAllowedContentTypes -> a
    java.lang.String[] getAllowedContentTypes() -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
com.loopj.android.http.FileAsyncHttpResponseHandler -> com.a.a.a.k:
    java.io.File mFile -> a
    boolean $assertionsDisabled -> b
com.loopj.android.http.MySSLSocketFactory -> com.a.a.a.l:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.security.KeyStore getKeystore() -> a
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> b
com.loopj.android.http.MySSLSocketFactory$1 -> com.a.a.a.m:
    com.loopj.android.http.MySSLSocketFactory this$0 -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> com.a.a.a.n:
    long current -> c
    boolean append -> d
    void updateRequestHeaders(org.apache.http.client.methods.HttpUriRequest) -> a
com.loopj.android.http.RequestHandle -> com.a.a.a.o:
    java.lang.ref.WeakReference request -> a
    boolean cancel(boolean) -> a
    boolean isFinished() -> a
    boolean isCancelled() -> b
    boolean shouldBeGarbageCollected() -> c
com.loopj.android.http.RequestParams -> com.a.a.a.p:
    boolean autoCloseInputStreams -> a
    java.util.concurrent.ConcurrentHashMap urlParams -> b
    java.util.concurrent.ConcurrentHashMap streamParams -> c
    java.util.concurrent.ConcurrentHashMap fileParams -> d
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> e
    java.lang.String contentEncoding -> f
    void put(java.lang.String,java.lang.String) -> a
    void put(java.lang.String,java.io.InputStream) -> a
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> a
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> a
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String toString() -> toString
    java.util.List getParamsList() -> a
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> a
    java.lang.String getParamString() -> b
com.loopj.android.http.RequestParams$StreamWrapper -> com.a.a.a.q:
    java.io.InputStream inputStream -> a
    java.lang.String name -> b
    java.lang.String contentType -> c
    boolean autoClose -> d
    com.loopj.android.http.RequestParams$StreamWrapper newInstance(java.io.InputStream,java.lang.String,java.lang.String,boolean) -> a
com.loopj.android.http.ResponseHandlerInterface -> com.a.a.a.r:
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
    void sendStartMessage() -> f
    void sendFinishMessage() -> g
    void sendCancelMessage() -> h
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> c
    void sendRetryMessage(int) -> b
    void setRequestURI(java.net.URI) -> a
    void setRequestHeaders(org.apache.http.Header[]) -> a
    boolean getUseSynchronousMode() -> b
com.loopj.android.http.RetryHandler -> com.a.a.a.s:
    java.util.HashSet exceptionWhitelist -> a
    java.util.HashSet exceptionBlacklist -> b
    int maxRetries -> c
    int retrySleepTimeMS -> d
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> a
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.BaseDiscCache:
    java.io.File cacheDir -> cacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.cache.disc.DiscCacheAware:
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache:
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    int sizeLimit -> sizeLimit
    java.util.Map lastUsageDates -> lastUsageDates
    void calculateCacheSizeAndFillUsageMap() -> calculateCacheSizeAndFillUsageMap
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
    void clear() -> clear
    int removeNext() -> removeNext
    int getSize(java.io.File) -> getSize
    java.util.Map access$000(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> access$000
    java.util.concurrent.atomic.AtomicInteger access$100(com.nostra13.universalimageloader.cache.disc.LimitedDiscCache) -> access$100
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1 -> com.nostra13.universalimageloader.cache.disc.LimitedDiscCache$1:
    com.nostra13.universalimageloader.cache.disc.LimitedDiscCache this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache:
    int getSize(java.io.File) -> getSize
com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache:
    long maxFileAge -> maxFileAge
    java.util.Map loadingDates -> loadingDates
    void put(java.lang.String,java.io.File) -> put
    java.io.File get(java.lang.String) -> get
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache:
    int MIN_NORMAL_CACHE_SIZE_IN_MB -> MIN_NORMAL_CACHE_SIZE_IN_MB
    int MIN_NORMAL_CACHE_SIZE -> MIN_NORMAL_CACHE_SIZE
    int getSize(java.io.File) -> getSize
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
    void put(java.lang.String,java.io.File) -> put
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    java.lang.String HASH_ALGORITHM -> HASH_ALGORITHM
    int RADIX -> RADIX
    java.lang.String generate(java.lang.String) -> generate
    byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.cache.memory.BaseMemoryCache:
    java.util.Map softMap -> softMap
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache:
    int MAX_NORMAL_CACHE_SIZE_IN_MB -> MAX_NORMAL_CACHE_SIZE_IN_MB
    int MAX_NORMAL_CACHE_SIZE -> MAX_NORMAL_CACHE_SIZE
    int sizeLimit -> sizeLimit
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    java.util.List hardCache -> hardCache
    boolean put(java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    int getSizeLimit() -> getSizeLimit
    int getSize(java.lang.Object) -> getSize
    java.lang.Object removeNext() -> removeNext
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.cache.memory.MemoryCacheAware:
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    java.util.List queue -> queue
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> cache
    java.util.Comparator keyComparator -> keyComparator
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Collection keys() -> keys
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    float LOAD_FACTOR -> LOAD_FACTOR
    java.util.Map lruCache -> lruCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    java.lang.Object get(java.lang.Object) -> get
com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    java.util.Map valueSizes -> valueSizes
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> cache
    long maxAge -> maxAge
    java.util.Map loadingDates -> loadingDates
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void trimToSize(int) -> trimToSize
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    java.lang.String toString() -> toString
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    java.util.Map usingCounts -> usingCounts
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.Object removeNext() -> removeNext
    int getSize(java.lang.Object) -> getSize
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    java.lang.Object get(java.lang.Object) -> get
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,int,int) -> createDiscCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createReserveDiscCache(android.content.Context) -> createReserveDiscCache
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEVIEW -> LOG_DISPLAY_IMAGE_IN_IMAGEVIEW
    java.lang.String LOG_TASK_CANCELLED -> LOG_TASK_CANCELLED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    android.widget.ImageView imageView -> imageView
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    boolean loggingEnabled -> loggingEnabled
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
    void setLoggingEnabled(boolean) -> setLoggingEnabled
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int stubImage -> stubImage
    int imageForEmptyUri -> imageForEmptyUri
    int imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean shouldShowStubImage() -> shouldShowStubImage
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    int getStubImage() -> getStubImage
    int getImageForEmptyUri() -> getImageForEmptyUri
    int getImageOnFail() -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisc() -> isCacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1400
    int access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1500
    int access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1600
    boolean access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1800
    boolean access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    android.graphics.BitmapFactory$Options access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    int access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    java.lang.Object access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    android.os.Handler access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int stubImage -> stubImage
    int imageForEmptyUri -> imageForEmptyUri
    int imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisc -> cacheOnDisc
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    boolean access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    boolean access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    boolean access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    android.graphics.BitmapFactory$Options access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    int access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    java.lang.Object access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    android.os.Handler access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.display.BitmapDisplayer fakeBitmapDisplayer -> fakeBitmapDisplayer
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> loadImage
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware getDiscCache() -> getDiscCache
    void clearDiscCache() -> clearDiscCache
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean loggingEnabled -> loggingEnabled
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware reserveDiscCache -> reserveDiscCache
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISC_CACHE_PARAMS -> WARNING_OVERLAP_DISC_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISC_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiscCache -> maxImageWidthForDiscCache
    int maxImageHeightForDiscCache -> maxImageHeightForDiscCache
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> imageCompressFormatForDiscCache
    int imageQualityForDiscCache -> imageQualityForDiscCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    int discCacheSize -> discCacheSize
    int discCacheFileCount -> discCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> discCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean loggingEnabled -> loggingEnabled
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,android.graphics.Bitmap$CompressFormat,int) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder enableLogging() -> enableLogging
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFiledsWithDefaultValues() -> initEmptyFiledsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    android.graphics.Bitmap$CompressFormat access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    int access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    java.util.concurrent.Executor access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    int access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    boolean access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
    boolean access$1900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1900
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.ExecutorService taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageViews -> cacheKeysForImageViews
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void prepareDisplayTaskFor(android.widget.ImageView,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(android.widget.ImageView) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    android.widget.ImageView imageView -> imageView
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISC_CACHE -> LOG_LOAD_IMAGE_FROM_DISC_CACHE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISC -> LOG_CACHE_IMAGE_ON_DISC
    java.lang.String LOG_TASK_CANCELLED -> LOG_TASK_CANCELLED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String WARNING_PRE_PROCESSOR_NULL -> WARNING_PRE_PROCESSOR_NULL
    java.lang.String WARNING_POST_PROCESSOR_NULL -> WARNING_POST_PROCESSOR_NULL
    int BUFFER_SIZE -> BUFFER_SIZE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    boolean loggingEnabled -> loggingEnabled
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    android.widget.ImageView imageView -> imageView
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> listener
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    boolean checkTaskIsNotActual() -> checkTaskIsNotActual
    boolean checkTaskIsInterrupted() -> checkTaskIsInterrupted
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    java.io.File getImageFileInDiscCache() -> getImageFileInDiscCache
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    java.lang.String tryCacheImageOnDisc(java.io.File) -> tryCacheImageOnDisc
    boolean downloadSizedImage(java.io.File,int,int) -> downloadSizedImage
    void downloadImage(java.io.File) -> downloadImage
    void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireImageLoadingFailedEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.String getLoadingUri() -> getLoadingUri
    void log(java.lang.String) -> log
    void log(java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.DiscCacheUtil -> com.nostra13.universalimageloader.core.assist.DiscCacheUtil:
    java.io.File findInCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> findInCache
    boolean removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> removeFromCache
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageLoadingListener -> com.nostra13.universalimageloader.core.assist.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil -> com.nostra13.universalimageloader.core.assist.MemoryCacheUtil:
    java.lang.String URI_AND_SIZE_SEPARATOR -> URI_AND_SIZE_SEPARATOR
    java.lang.String WIDTH_AND_HEIGHT_SEPARATOR -> WIDTH_AND_HEIGHT_SEPARATOR
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
    java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> findCachedBitmapsForImageUri
    java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> findCacheKeysForImageUri
    void removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> removeFromCache
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1 -> com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.core.assist.PauseOnScrollListener -> com.nostra13.universalimageloader.core.assist.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SABSAMPLE_IMAGE -> LOG_SABSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,java.lang.String) -> defineImageSizeAndRotation
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String,java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options) -> decodeStream
    android.graphics.Bitmap considerExactScaleAndOrientaiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientaiton
    void setLoggingEnabled(boolean) -> setLoggingEnabled
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
    void animate(android.widget.ImageView,int) -> animate
com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int roundPixels -> roundPixels
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
    android.graphics.Bitmap roundCorners(android.graphics.Bitmap,android.widget.ImageView,int) -> roundCorners
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,int,android.graphics.Rect,android.graphics.Rect,int,int) -> getRoundedCornerBitmap
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$1 -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection connectTo(java.lang.String) -> connectTo
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.HttpClientImageDownloader -> com.nostra13.universalimageloader.core.download.HttpClientImageDownloader:
    org.apache.http.client.HttpClient httpClient -> httpClient
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1 -> com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1 -> com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(android.widget.ImageView,int,int) -> defineTargetSizeForView
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.utils.ImageSizeUtils$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    int BUFFER_SIZE -> BUFFER_SIZE
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    void closeSilently(java.io.Closeable) -> closeSilently
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    java.lang.String LOG_FORMAT -> LOG_FORMAT
    void d(java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    java.lang.String INDIVIDUAL_DIR_NAME -> INDIVIDUAL_DIR_NAME
    java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
com.sina.sso.RemoteSSO -> com.b.a.a:
    java.lang.String getPackageName() -> a
    java.lang.String getActivityName() -> b
com.sina.sso.RemoteSSO$Stub -> com.b.a.b:
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.thoughtworks.xstream.InitializationException -> com.thoughtworks.xstream.InitializationException:
com.thoughtworks.xstream.MarshallingStrategy -> com.thoughtworks.xstream.MarshallingStrategy:
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
com.thoughtworks.xstream.XStream -> com.thoughtworks.xstream.XStream:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.io.HierarchicalStreamDriver hierarchicalStreamDriver -> hierarchicalStreamDriver
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    com.thoughtworks.xstream.MarshallingStrategy marshallingStrategy -> marshallingStrategy
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.converters.ConverterRegistry converterRegistry -> converterRegistry
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.mapper.PackageAliasingMapper packageAliasingMapper -> packageAliasingMapper
    com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper -> classAliasingMapper
    com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper -> fieldAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeAliasingMapper attributeAliasingMapper -> attributeAliasingMapper
    com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper systemAttributeAliasingMapper -> systemAttributeAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper -> defaultImplementationsMapper
    com.thoughtworks.xstream.mapper.ImmutableTypesMapper immutableTypesMapper -> immutableTypesMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper implicitCollectionMapper -> implicitCollectionMapper
    com.thoughtworks.xstream.mapper.LocalConversionMapper localConversionMapper -> localConversionMapper
    com.thoughtworks.xstream.mapper.SecurityMapper securityMapper -> securityMapper
    com.thoughtworks.xstream.mapper.AnnotationConfiguration annotationConfiguration -> annotationConfiguration
    int NO_REFERENCES -> NO_REFERENCES
    int ID_REFERENCES -> ID_REFERENCES
    int XPATH_RELATIVE_REFERENCES -> XPATH_RELATIVE_REFERENCES
    int XPATH_ABSOLUTE_REFERENCES -> XPATH_ABSOLUTE_REFERENCES
    int SINGLE_NODE_XPATH_RELATIVE_REFERENCES -> SINGLE_NODE_XPATH_RELATIVE_REFERENCES
    int SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES -> SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES
    int PRIORITY_VERY_HIGH -> PRIORITY_VERY_HIGH
    int PRIORITY_NORMAL -> PRIORITY_NORMAL
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_VERY_LOW -> PRIORITY_VERY_LOW
    java.lang.String ANNOTATION_MAPPER_TYPE -> ANNOTATION_MAPPER_TYPE
    java.util.regex.Pattern IGNORE_ALL -> IGNORE_ALL
    com.thoughtworks.xstream.mapper.Mapper buildMapper() -> buildMapper
    com.thoughtworks.xstream.mapper.Mapper buildMapperDynamically(java.lang.String,java.lang.Class[],java.lang.Object[]) -> buildMapperDynamically
    com.thoughtworks.xstream.mapper.MapperWrapper wrapMapper(com.thoughtworks.xstream.mapper.MapperWrapper) -> wrapMapper
    boolean useXStream11XmlFriendlyMapper() -> useXStream11XmlFriendlyMapper
    void setupMappers() -> setupMappers
    void setupSecurity() -> setupSecurity
    void setupAliases() -> setupAliases
    void aliasDynamically(java.lang.String,java.lang.String) -> aliasDynamically
    void setupDefaultImplementations() -> setupDefaultImplementations
    void setupConverters() -> setupConverters
    void registerConverterDynamically(java.lang.String,int,java.lang.Class[],java.lang.Object[]) -> registerConverterDynamically
    void setupImmutableTypes() -> setupImmutableTypes
    void addImmutableTypeDynamically(java.lang.String) -> addImmutableTypeDynamically
    void setMarshallingStrategy(com.thoughtworks.xstream.MarshallingStrategy) -> setMarshallingStrategy
    java.lang.String toXML(java.lang.Object) -> toXML
    void toXML(java.lang.Object,java.io.Writer) -> toXML
    void toXML(java.lang.Object,java.io.OutputStream) -> toXML
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> marshal
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    java.lang.Object fromXML(java.lang.String) -> fromXML
    java.lang.Object fromXML(java.io.Reader) -> fromXML
    java.lang.Object fromXML(java.io.InputStream) -> fromXML
    java.lang.Object fromXML(java.net.URL) -> fromXML
    java.lang.Object fromXML(java.io.File) -> fromXML
    java.lang.Object fromXML(java.lang.String,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.Reader,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.net.URL,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.File,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.InputStream,java.lang.Object) -> fromXML
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> unmarshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object) -> unmarshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder) -> unmarshal
    void alias(java.lang.String,java.lang.Class) -> alias
    void aliasType(java.lang.String,java.lang.Class) -> aliasType
    void alias(java.lang.String,java.lang.Class,java.lang.Class) -> alias
    void aliasPackage(java.lang.String,java.lang.String) -> aliasPackage
    void aliasField(java.lang.String,java.lang.Class,java.lang.String) -> aliasField
    void aliasAttribute(java.lang.String,java.lang.String) -> aliasAttribute
    void aliasSystemAttribute(java.lang.String,java.lang.String) -> aliasSystemAttribute
    void aliasAttribute(java.lang.Class,java.lang.String,java.lang.String) -> aliasAttribute
    void useAttributeFor(java.lang.String,java.lang.Class) -> useAttributeFor
    void useAttributeFor(java.lang.Class,java.lang.String) -> useAttributeFor
    void useAttributeFor(java.lang.Class) -> useAttributeFor
    void addDefaultImplementation(java.lang.Class,java.lang.Class) -> addDefaultImplementation
    void addImmutableType(java.lang.Class) -> addImmutableType
    void registerConverter(com.thoughtworks.xstream.converters.Converter) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int) -> registerConverter
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter) -> registerLocalConverter
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.SingleValueConverter) -> registerLocalConverter
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider getReflectionProvider() -> getReflectionProvider
    com.thoughtworks.xstream.converters.ConverterLookup getConverterLookup() -> getConverterLookup
    void setMode(int) -> setMode
    void addImplicitCollection(java.lang.Class,java.lang.String) -> addImplicitCollection
    void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.Class) -> addImplicitCollection
    void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class) -> addImplicitCollection
    void addImplicitArray(java.lang.Class,java.lang.String) -> addImplicitArray
    void addImplicitArray(java.lang.Class,java.lang.String,java.lang.Class) -> addImplicitArray
    void addImplicitArray(java.lang.Class,java.lang.String,java.lang.String) -> addImplicitArray
    void addImplicitMap(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String) -> addImplicitMap
    void addImplicitMap(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String) -> addImplicitMap
    com.thoughtworks.xstream.converters.DataHolder newDataHolder() -> newDataHolder
    java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String) -> createObjectOutputStream
    java.io.ObjectInputStream createObjectInputStream(java.io.Reader) -> createObjectInputStream
    java.io.ObjectInputStream createObjectInputStream(java.io.InputStream) -> createObjectInputStream
    java.io.ObjectInputStream createObjectInputStream(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> createObjectInputStream
    void setClassLoader(java.lang.ClassLoader) -> setClassLoader
    java.lang.ClassLoader getClassLoader() -> getClassLoader
    com.thoughtworks.xstream.core.ClassLoaderReference getClassLoaderReference() -> getClassLoaderReference
    void omitField(java.lang.Class,java.lang.String) -> omitField
    void ignoreUnknownElements() -> ignoreUnknownElements
    void ignoreUnknownElements(java.lang.String) -> ignoreUnknownElements
    void ignoreUnknownElements(java.util.regex.Pattern) -> ignoreUnknownElements
    void processAnnotations(java.lang.Class[]) -> processAnnotations
    void processAnnotations(java.lang.Class) -> processAnnotations
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void addPermission(com.thoughtworks.xstream.security.TypePermission) -> addPermission
    void allowTypes(java.lang.String[]) -> allowTypes
    void allowTypes(java.lang.Class[]) -> allowTypes
    void allowTypeHierarchy(java.lang.Class) -> allowTypeHierarchy
    void allowTypesByRegExp(java.lang.String[]) -> allowTypesByRegExp
    void allowTypesByRegExp(java.util.regex.Pattern[]) -> allowTypesByRegExp
    void allowTypesByWildcard(java.lang.String[]) -> allowTypesByWildcard
    void denyPermission(com.thoughtworks.xstream.security.TypePermission) -> denyPermission
    void denyTypes(java.lang.String[]) -> denyTypes
    void denyTypes(java.lang.Class[]) -> denyTypes
    void denyTypeHierarchy(java.lang.Class) -> denyTypeHierarchy
    void denyTypesByRegExp(java.lang.String[]) -> denyTypesByRegExp
    void denyTypesByRegExp(java.util.regex.Pattern[]) -> denyTypesByRegExp
    void denyTypesByWildcard(java.lang.String[]) -> denyTypesByWildcard
com.thoughtworks.xstream.XStream$1 -> com.thoughtworks.xstream.XStream$1:
    com.thoughtworks.xstream.core.DefaultConverterLookup val$defaultConverterLookup -> val$defaultConverterLookup
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
com.thoughtworks.xstream.XStream$2 -> com.thoughtworks.xstream.XStream$2:
    com.thoughtworks.xstream.core.DefaultConverterLookup val$defaultConverterLookup -> val$defaultConverterLookup
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
com.thoughtworks.xstream.XStream$3 -> com.thoughtworks.xstream.XStream$3:
    com.thoughtworks.xstream.io.StatefulWriter val$statefulWriter -> val$statefulWriter
    com.thoughtworks.xstream.XStream this$0 -> this$0
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.XStream$4 -> com.thoughtworks.xstream.XStream$4:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.XStream this$0 -> this$0
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.XStream$InitializationException -> com.thoughtworks.xstream.XStream$InitializationException:
com.thoughtworks.xstream.XStreamException -> com.thoughtworks.xstream.XStreamException:
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
com.thoughtworks.xstream.XStreamer -> com.thoughtworks.xstream.XStreamer:
    com.thoughtworks.xstream.security.TypePermission[] PERMISSIONS -> PERMISSIONS
    java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object) -> toXML
    void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer) -> toXML
    java.lang.Object fromXML(java.lang.String) -> fromXML
    java.lang.Object fromXML(java.lang.String,com.thoughtworks.xstream.security.TypePermission[]) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String,com.thoughtworks.xstream.security.TypePermission[]) -> fromXML
    java.lang.Object fromXML(java.io.Reader) -> fromXML
    java.lang.Object fromXML(java.io.Reader,com.thoughtworks.xstream.security.TypePermission[]) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader,com.thoughtworks.xstream.security.TypePermission[]) -> fromXML
    com.thoughtworks.xstream.security.TypePermission[] getDefaultPermissions() -> getDefaultPermissions
com.thoughtworks.xstream.annotations.AnnotationProvider -> com.thoughtworks.xstream.annotations.AnnotationProvider:
    java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field,java.lang.Class) -> getAnnotation
com.thoughtworks.xstream.annotations.AnnotationReflectionConverter -> com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:
    com.thoughtworks.xstream.annotations.AnnotationProvider annotationProvider -> annotationProvider
    java.util.Map cachedConverters -> cachedConverters
    void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field) -> marshallField
    void ensureCache(java.lang.Class) -> ensureCache
    java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field) -> unmarshallField
    com.thoughtworks.xstream.converters.Converter newInstance(java.lang.Class) -> newInstance
com.thoughtworks.xstream.annotations.Annotations -> com.thoughtworks.xstream.annotations.Annotations:
    void configureAliases(com.thoughtworks.xstream.XStream,java.lang.Class[]) -> configureAliases
com.thoughtworks.xstream.annotations.XStreamAlias -> com.thoughtworks.xstream.annotations.XStreamAlias:
    java.lang.String value() -> value
    java.lang.Class impl() -> impl
com.thoughtworks.xstream.annotations.XStreamAliasType -> com.thoughtworks.xstream.annotations.XStreamAliasType:
    java.lang.String value() -> value
com.thoughtworks.xstream.annotations.XStreamAsAttribute -> com.thoughtworks.xstream.annotations.XStreamAsAttribute:
com.thoughtworks.xstream.annotations.XStreamContainedType -> com.thoughtworks.xstream.annotations.XStreamContainedType:
com.thoughtworks.xstream.annotations.XStreamConverter -> com.thoughtworks.xstream.annotations.XStreamConverter:
    java.lang.Class value() -> value
    int priority() -> priority
    boolean useImplicitType() -> useImplicitType
    java.lang.Class[] types() -> types
    java.lang.String[] strings() -> strings
    byte[] bytes() -> bytes
    char[] chars() -> chars
    short[] shorts() -> shorts
    int[] ints() -> ints
    long[] longs() -> longs
    float[] floats() -> floats
    double[] doubles() -> doubles
    boolean[] booleans() -> booleans
com.thoughtworks.xstream.annotations.XStreamConverters -> com.thoughtworks.xstream.annotations.XStreamConverters:
    com.thoughtworks.xstream.annotations.XStreamConverter[] value() -> value
com.thoughtworks.xstream.annotations.XStreamImplicit -> com.thoughtworks.xstream.annotations.XStreamImplicit:
    java.lang.String itemFieldName() -> itemFieldName
    java.lang.String keyFieldName() -> keyFieldName
com.thoughtworks.xstream.annotations.XStreamImplicitCollection -> com.thoughtworks.xstream.annotations.XStreamImplicitCollection:
    java.lang.String value() -> value
    java.lang.String item() -> item
com.thoughtworks.xstream.annotations.XStreamInclude -> com.thoughtworks.xstream.annotations.XStreamInclude:
    java.lang.Class[] value() -> value
com.thoughtworks.xstream.annotations.XStreamOmitField -> com.thoughtworks.xstream.annotations.XStreamOmitField:
com.thoughtworks.xstream.converters.ConversionException -> com.thoughtworks.xstream.converters.ConversionException:
    java.lang.String SEPARATOR -> SEPARATOR
    java.util.Map stuff -> stuff
    java.lang.String get(java.lang.String) -> get
    void add(java.lang.String,java.lang.String) -> add
    void set(java.lang.String,java.lang.String) -> set
    java.util.Iterator keys() -> keys
    java.lang.String getMessage() -> getMessage
    java.lang.String getShortMessage() -> getShortMessage
com.thoughtworks.xstream.converters.Converter -> com.thoughtworks.xstream.converters.Converter:
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.ConverterLookup -> com.thoughtworks.xstream.converters.ConverterLookup:
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
com.thoughtworks.xstream.converters.ConverterMatcher -> com.thoughtworks.xstream.converters.ConverterMatcher:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.ConverterRegistry -> com.thoughtworks.xstream.converters.ConverterRegistry:
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
com.thoughtworks.xstream.converters.DataHolder -> com.thoughtworks.xstream.converters.DataHolder:
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.converters.ErrorReporter -> com.thoughtworks.xstream.converters.ErrorReporter:
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.converters.ErrorWriter -> com.thoughtworks.xstream.converters.ErrorWriter:
    void add(java.lang.String,java.lang.String) -> add
    void set(java.lang.String,java.lang.String) -> set
    java.lang.String get(java.lang.String) -> get
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.converters.MarshallingContext -> com.thoughtworks.xstream.converters.MarshallingContext:
    void convertAnother(java.lang.Object) -> convertAnother
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
com.thoughtworks.xstream.converters.SingleValueConverter -> com.thoughtworks.xstream.converters.SingleValueConverter:
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.SingleValueConverterWrapper -> com.thoughtworks.xstream.converters.SingleValueConverterWrapper:
    com.thoughtworks.xstream.converters.SingleValueConverter wrapped -> wrapped
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.converters.UnmarshallingContext -> com.thoughtworks.xstream.converters.UnmarshallingContext:
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class) -> convertAnother
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    java.lang.Object currentObject() -> currentObject
    java.lang.Class getRequiredType() -> getRequiredType
    void addCompletionCallback(java.lang.Runnable,int) -> addCompletionCallback
com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter -> com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BigDecimalConverter -> com.thoughtworks.xstream.converters.basic.BigDecimalConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BigIntegerConverter -> com.thoughtworks.xstream.converters.basic.BigIntegerConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BooleanConverter -> com.thoughtworks.xstream.converters.basic.BooleanConverter:
    com.thoughtworks.xstream.converters.basic.BooleanConverter TRUE_FALSE -> TRUE_FALSE
    com.thoughtworks.xstream.converters.basic.BooleanConverter YES_NO -> YES_NO
    com.thoughtworks.xstream.converters.basic.BooleanConverter BINARY -> BINARY
    java.lang.String positive -> positive
    java.lang.String negative -> negative
    boolean caseSensitive -> caseSensitive
    boolean shouldConvert(java.lang.Class,java.lang.Object) -> shouldConvert
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.basic.ByteConverter -> com.thoughtworks.xstream.converters.basic.ByteConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.CharConverter -> com.thoughtworks.xstream.converters.basic.CharConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.basic.DateConverter -> com.thoughtworks.xstream.converters.basic.DateConverter:
    java.lang.String[] DEFAULT_ACCEPTABLE_FORMATS -> DEFAULT_ACCEPTABLE_FORMATS
    java.lang.String DEFAULT_PATTERN -> DEFAULT_PATTERN
    java.lang.String DEFAULT_ERA_PATTERN -> DEFAULT_ERA_PATTERN
    java.util.TimeZone UTC -> UTC
    long ERA_START -> ERA_START
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat defaultFormat -> defaultFormat
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat defaultEraFormat -> defaultEraFormat
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat[] acceptableFormats -> acceptableFormats
    java.util.Locale locale -> locale
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.converters.basic.DoubleConverter -> com.thoughtworks.xstream.converters.basic.DoubleConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.FloatConverter -> com.thoughtworks.xstream.converters.basic.FloatConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.IntConverter -> com.thoughtworks.xstream.converters.basic.IntConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.LongConverter -> com.thoughtworks.xstream.converters.basic.LongConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.NullConverter -> com.thoughtworks.xstream.converters.basic.NullConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.basic.ShortConverter -> com.thoughtworks.xstream.converters.basic.ShortConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.StringBufferConverter -> com.thoughtworks.xstream.converters.basic.StringBufferConverter:
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.basic.StringBuilderConverter -> com.thoughtworks.xstream.converters.basic.StringBuilderConverter:
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.basic.StringConverter -> com.thoughtworks.xstream.converters.basic.StringConverter:
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.util.Map cache -> cache
    int lengthLimit -> lengthLimit
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.URIConverter -> com.thoughtworks.xstream.converters.basic.URIConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.URLConverter -> com.thoughtworks.xstream.converters.basic.URLConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.UUIDConverter -> com.thoughtworks.xstream.converters.basic.UUIDConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter -> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    com.thoughtworks.xstream.mapper.Mapper mapper() -> mapper
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
    java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object) -> readItem
    java.lang.Object createCollection(java.lang.Class) -> createCollection
com.thoughtworks.xstream.converters.collections.ArrayConverter -> com.thoughtworks.xstream.converters.collections.ArrayConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.BitSetConverter -> com.thoughtworks.xstream.converters.collections.BitSetConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.CharArrayConverter -> com.thoughtworks.xstream.converters.collections.CharArrayConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.CollectionConverter -> com.thoughtworks.xstream.converters.collections.CollectionConverter:
    java.lang.Class type -> type
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection) -> populateCollection
    void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection) -> populateCollection
    void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection) -> addCurrentElementToCollection
    java.lang.Object createCollection(java.lang.Class) -> createCollection
com.thoughtworks.xstream.converters.collections.MapConverter -> com.thoughtworks.xstream.converters.collections.MapConverter:
    java.lang.Class type -> type
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map) -> populateMap
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> populateMap
    void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> putCurrentEntryIntoMap
    java.lang.Object createCollection(java.lang.Class) -> createCollection
com.thoughtworks.xstream.converters.collections.PropertiesConverter -> com.thoughtworks.xstream.converters.collections.PropertiesConverter:
    java.lang.reflect.Field defaultsField -> defaultsField
    boolean sort -> sort
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter -> com.thoughtworks.xstream.converters.collections.SingletonCollectionConverter:
    java.lang.Class LIST -> LIST
    java.lang.Class SET -> SET
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.SingletonMapConverter -> com.thoughtworks.xstream.converters.collections.SingletonMapConverter:
    java.lang.Class MAP -> MAP
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.TreeMapConverter -> com.thoughtworks.xstream.converters.collections.TreeMapConverter:
    java.util.Comparator NULL_MARKER -> NULL_MARKER
    java.lang.reflect.Field comparatorField -> comparatorField
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalComparator
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap) -> unmarshalComparator
    void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator) -> populateTreeMap
com.thoughtworks.xstream.converters.collections.TreeMapConverter$1 -> com.thoughtworks.xstream.converters.collections.TreeMapConverter$1:
com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator -> com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.collections.TreeSetConverter -> com.thoughtworks.xstream.converters.collections.TreeSetConverter:
    com.thoughtworks.xstream.converters.collections.TreeMapConverter treeMapConverter -> treeMapConverter
    java.lang.reflect.Field sortedMapField -> sortedMapField
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.collections.TreeSetConverter$1 -> com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:
    com.thoughtworks.xstream.converters.collections.TreeSetConverter this$0 -> this$0
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> populateMap
    void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> putCurrentEntryIntoMap
com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1 -> com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:
    java.util.Map val$target -> val$target
    com.thoughtworks.xstream.converters.collections.TreeSetConverter$1 this$1 -> this$1
    boolean add(java.lang.Object) -> add
    java.lang.Object get(int) -> get
    int size() -> size
com.thoughtworks.xstream.converters.enums.EnumConverter -> com.thoughtworks.xstream.converters.enums.EnumConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumMapConverter -> com.thoughtworks.xstream.converters.enums.EnumMapConverter:
    java.lang.reflect.Field typeField -> typeField
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumSetConverter -> com.thoughtworks.xstream.converters.enums.EnumSetConverter:
    java.lang.reflect.Field typeField -> typeField
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.String joinEnumValues(java.util.EnumSet) -> joinEnumValues
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumSingleValueConverter -> com.thoughtworks.xstream.converters.enums.EnumSingleValueConverter:
    java.lang.Class enumType -> enumType
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.enums.EnumToStringConverter -> com.thoughtworks.xstream.converters.enums.EnumToStringConverter:
    java.lang.Class enumType -> enumType
    java.util.Map strings -> strings
    java.util.EnumMap values -> values
    java.util.Map extractStringMap(java.lang.Class) -> extractStringMap
    void checkType(java.lang.Class) -> checkType
    java.util.EnumMap buildValueMap(java.lang.Class,java.util.Map) -> buildValueMap
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.CharsetConverter -> com.thoughtworks.xstream.converters.extended.CharsetConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.ColorConverter -> com.thoughtworks.xstream.converters.extended.ColorConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> write
com.thoughtworks.xstream.converters.extended.CurrencyConverter -> com.thoughtworks.xstream.converters.extended.CurrencyConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.DurationConverter -> com.thoughtworks.xstream.converters.extended.DurationConverter:
    javax.xml.datatype.DatatypeFactory factory -> factory
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.DurationConverter$1 -> com.thoughtworks.xstream.converters.extended.DurationConverter$1:
    javax.xml.datatype.DatatypeFactory getFactory() -> getFactory
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter -> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    java.lang.reflect.Field HANDLER -> HANDLER
    java.lang.reflect.InvocationHandler DUMMY -> DUMMY
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> addInterfacesToXml
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter$1 -> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter$1:
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter -> com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:
    com.thoughtworks.xstream.core.util.Base64Encoder base64 -> base64
    com.thoughtworks.xstream.converters.basic.ByteConverter byteConverter -> byteConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalIndividualByteElements
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.FileConverter -> com.thoughtworks.xstream.converters.extended.FileConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.FontConverter -> com.thoughtworks.xstream.converters.extended.FontConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter textAttributeConverter -> textAttributeConverter
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter -> com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.ISO8601DateConverter -> com.thoughtworks.xstream.converters.extended.ISO8601DateConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter -> com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter:
    org.joda.time.format.DateTimeFormatter[] formattersUTC -> formattersUTC
    org.joda.time.format.DateTimeFormatter[] formattersNoUTC -> formattersNoUTC
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter -> com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter:
    java.lang.String PADDING -> PADDING
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.JavaClassConverter -> com.thoughtworks.xstream.converters.extended.JavaClassConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.JavaFieldConverter -> com.thoughtworks.xstream.converters.extended.JavaFieldConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter javaClassConverter -> javaClassConverter
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.JavaMethodConverter -> com.thoughtworks.xstream.converters.extended.JavaMethodConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter javaClassConverter -> javaClassConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[]) -> marshalMethod
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.LocaleConverter -> com.thoughtworks.xstream.converters.extended.LocaleConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    int[] underscorePositions(java.lang.String) -> underscorePositions
com.thoughtworks.xstream.converters.extended.LookAndFeelConverter -> com.thoughtworks.xstream.converters.extended.LookAndFeelConverter:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.extended.NamedArrayConverter -> com.thoughtworks.xstream.converters.extended.NamedArrayConverter:
    java.lang.Class arrayType -> arrayType
    java.lang.String itemName -> itemName
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.NamedCollectionConverter -> com.thoughtworks.xstream.converters.extended.NamedCollectionConverter:
    java.lang.String name -> name
    java.lang.Class type -> type
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
    java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object) -> readItem
com.thoughtworks.xstream.converters.extended.NamedMapConverter -> com.thoughtworks.xstream.converters.extended.NamedMapConverter:
    java.lang.String entryName -> entryName
    java.lang.String keyName -> keyName
    java.lang.Class keyType -> keyType
    java.lang.String valueName -> valueName
    java.lang.Class valueType -> valueType
    boolean keyAsAttribute -> keyAsAttribute
    boolean valueAsAttribute -> valueAsAttribute
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    com.thoughtworks.xstream.mapper.Mapper enumMapper -> enumMapper
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> populateMap
    com.thoughtworks.xstream.converters.SingleValueConverter getSingleValueConverter(java.lang.Class) -> getSingleValueConverter
    void writeItem(java.lang.String,java.lang.Class,java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
    java.lang.Object readItem(java.lang.Class,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object) -> readItem
com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter -> com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter:
    com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor editor -> editor
    java.lang.Class type -> type
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.RegexPatternConverter -> com.thoughtworks.xstream.converters.extended.RegexPatternConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.SqlDateConverter -> com.thoughtworks.xstream.converters.extended.SqlDateConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.SqlTimeConverter -> com.thoughtworks.xstream.converters.extended.SqlTimeConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.SqlTimestampConverter -> com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat format -> format
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.StackTraceElementConverter -> com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:
    java.util.regex.Pattern PATTERN -> PATTERN
    com.thoughtworks.xstream.converters.extended.StackTraceElementFactory FACTORY -> FACTORY
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.StackTraceElementFactory -> com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:
    java.lang.StackTraceElement nativeMethodElement(java.lang.String,java.lang.String) -> nativeMethodElement
    java.lang.StackTraceElement unknownSourceElement(java.lang.String,java.lang.String) -> unknownSourceElement
    java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String) -> element
    java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String,int) -> element
    java.lang.StackTraceElement create(java.lang.String,java.lang.String,java.lang.String,int) -> create
    void setField(java.lang.StackTraceElement,java.lang.String,java.lang.Object) -> setField
com.thoughtworks.xstream.converters.extended.StackTraceElementFactory15 -> com.thoughtworks.xstream.converters.extended.StackTraceElementFactory15:
    java.lang.StackTraceElement create(java.lang.String,java.lang.String,java.lang.String,int) -> create
com.thoughtworks.xstream.converters.extended.SubjectConverter -> com.thoughtworks.xstream.converters.extended.SubjectConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPrincipals
    void marshalPublicCredentials(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPublicCredentials
    void marshalPrivateCredentials(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPrivateCredentials
    void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> marshalReadOnly
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.util.Set unmarshalPrincipals(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPrincipals
    java.util.Set unmarshalPublicCredentials(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPublicCredentials
    java.util.Set unmarshalPrivateCredentials(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPrivateCredentials
    boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> unmarshalReadOnly
    java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> populateSet
com.thoughtworks.xstream.converters.extended.TextAttributeConverter -> com.thoughtworks.xstream.converters.extended.TextAttributeConverter:
com.thoughtworks.xstream.converters.extended.ThrowableConverter -> com.thoughtworks.xstream.converters.extended.ThrowableConverter:
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    com.thoughtworks.xstream.converters.Converter getConverter() -> getConverter
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter -> com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:
    java.lang.String STRUCTURE_MARKER -> STRUCTURE_MARKER
    java.lang.Class type -> type
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.mapper.Mapper enumMapper -> enumMapper
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    java.lang.reflect.Field valueField -> valueField
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    boolean fieldIsEqual(com.thoughtworks.xstream.core.util.FastField) -> fieldIsEqual
    com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$000
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider access$100(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$100
    boolean access$200(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter,com.thoughtworks.xstream.core.util.FastField) -> access$200
    com.thoughtworks.xstream.mapper.Mapper access$300(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$300
    com.thoughtworks.xstream.converters.ConverterLookup access$400(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$400
    java.lang.reflect.Field access$500(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$500
com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1 -> com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    java.lang.Class val$sourceType -> val$sourceType
    java.lang.Class[] val$definingType -> val$definingType
    java.lang.Class[] val$fieldType -> val$fieldType
    java.lang.Object[] val$realValue -> val$realValue
    java.lang.String[] val$tagValue -> val$tagValue
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter this$0 -> this$0
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.extended.ToStringConverter -> com.thoughtworks.xstream.converters.extended.ToStringConverter:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor ctor -> ctor
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.UseAttributeForEnumMapper -> com.thoughtworks.xstream.converters.extended.UseAttributeForEnumMapper:
    boolean isEnum(java.lang.Class) -> isEnum
    boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class) -> shouldLookForSingleValueConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.mapper.Mapper createEnumMapper(com.thoughtworks.xstream.mapper.Mapper) -> createEnumMapper
com.thoughtworks.xstream.converters.javabean.BeanProperty -> com.thoughtworks.xstream.converters.javabean.BeanProperty:
    java.lang.Class memberClass -> memberClass
    java.lang.String propertyName -> propertyName
    java.lang.Class type -> type
    java.lang.reflect.Method getter -> getter
    java.lang.reflect.Method setter -> setter
    java.lang.Object[] EMPTY_ARGS -> EMPTY_ARGS
    java.lang.Class getBeanClass() -> getBeanClass
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    boolean isReadable() -> isReadable
    boolean isWritable() -> isWritable
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object set(java.lang.Object,java.lang.Object) -> set
    void setGetterMethod(java.lang.reflect.Method) -> setGetterMethod
    void setSetterMethod(java.lang.reflect.Method) -> setSetterMethod
com.thoughtworks.xstream.converters.javabean.BeanProvider -> com.thoughtworks.xstream.converters.javabean.BeanProvider:
    java.lang.Object[] NO_PARAMS -> NO_PARAMS
    com.thoughtworks.xstream.converters.javabean.PropertyDictionary propertyDictionary -> propertyDictionary
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor) -> visitSerializableProperties
    void writeProperty(java.lang.Object,java.lang.String,java.lang.Object) -> writeProperty
    java.lang.Class getPropertyType(java.lang.Object,java.lang.String) -> getPropertyType
    boolean propertyDefinedInClass(java.lang.String,java.lang.Class) -> propertyDefinedInClass
    boolean canInstantiate(java.lang.Class) -> canInstantiate
    java.lang.reflect.Constructor getDefaultConstrutor(java.lang.Class) -> getDefaultConstrutor
    java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object) -> getSerializableProperties
    boolean canStreamProperty(java.beans.PropertyDescriptor) -> canStreamProperty
    boolean propertyWriteable(java.lang.String,java.lang.Class) -> propertyWriteable
    java.beans.PropertyDescriptor getProperty(java.lang.String,java.lang.Class) -> getProperty
com.thoughtworks.xstream.converters.javabean.BeanProvider$Visitor -> com.thoughtworks.xstream.converters.javabean.BeanProvider$Visitor:
com.thoughtworks.xstream.converters.javabean.ComparingPropertySorter -> com.thoughtworks.xstream.converters.javabean.ComparingPropertySorter:
    java.util.Comparator comparator -> comparator
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.javabean.JavaBeanProvider beanProvider -> beanProvider
    java.lang.Class type -> type
    java.lang.String classAttributeIdentifier -> classAttributeIdentifier
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.converters.UnmarshallingContext) -> instantiateNewInstance
    java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String) -> determineType
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1 -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.lang.String val$classAttributeName -> val$classAttributeName
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.converters.javabean.JavaBeanConverter this$0 -> this$0
    boolean shouldVisit(java.lang.String,java.lang.Class) -> shouldVisit
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
    void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class) -> writeField
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$2 -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$2:
    com.thoughtworks.xstream.converters.javabean.JavaBeanConverter this$0 -> this$0
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException:
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicatePropertyException -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicatePropertyException:
com.thoughtworks.xstream.converters.javabean.JavaBeanProvider -> com.thoughtworks.xstream.converters.javabean.JavaBeanProvider:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor) -> visitSerializableProperties
    void writeProperty(java.lang.Object,java.lang.String,java.lang.Object) -> writeProperty
    java.lang.Class getPropertyType(java.lang.Object,java.lang.String) -> getPropertyType
    boolean propertyDefinedInClass(java.lang.String,java.lang.Class) -> propertyDefinedInClass
    boolean canInstantiate(java.lang.Class) -> canInstantiate
com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor -> com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor:
    boolean shouldVisit(java.lang.String,java.lang.Class) -> shouldVisit
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.javabean.NativePropertySorter -> com.thoughtworks.xstream.converters.javabean.NativePropertySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.javabean.PropertyDictionary -> com.thoughtworks.xstream.converters.javabean.PropertyDictionary:
    java.util.Map propertyNameCache -> propertyNameCache
    com.thoughtworks.xstream.converters.javabean.PropertySorter sorter -> sorter
    java.util.Iterator serializablePropertiesFor(java.lang.Class) -> serializablePropertiesFor
    com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String) -> property
    java.util.Iterator propertiesFor(java.lang.Class) -> propertiesFor
    java.beans.PropertyDescriptor propertyDescriptor(java.lang.Class,java.lang.String) -> propertyDescriptor
    java.util.Map buildMap(java.lang.Class) -> buildMap
    void flushCache() -> flushCache
com.thoughtworks.xstream.converters.javabean.PropertySorter -> com.thoughtworks.xstream.converters.javabean.PropertySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter -> com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:
    java.util.Map instanceMaps -> instanceMaps
    java.lang.reflect.Method getName -> getName
    java.lang.Class type -> type
    java.util.Map attributeMap -> attributeMap
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String getName(java.text.AttributedCharacterIterator$Attribute) -> getName
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker serializationMethodInvoker -> serializationMethodInvoker
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider -> pureJavaReflectionProvider
    boolean canAccess(java.lang.Class) -> canAccess
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshal
    void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field) -> marshallField
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshal
    java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field) -> unmarshallField
    boolean shouldUnmarshalTransientFields() -> shouldUnmarshalTransientFields
    boolean shouldUnmarshalField(java.lang.reflect.Field) -> shouldUnmarshalField
    void handleUnknownField(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String) -> handleUnknownField
    void writeValueToImplicitCollection(java.lang.Object,java.util.Map,java.lang.Object,java.lang.String) -> writeValueToImplicitCollection
    java.lang.Class readDeclaringClass(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> readDeclaringClass
    java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> instantiateNewInstance
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:
    java.util.Set writtenAttributes -> writtenAttributes
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.util.List val$fields -> val$fields
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:
    java.util.List val$fields -> val$fields
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> writeField
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3:
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$ArraysList -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$ArraysList:
    java.lang.Class physicalFieldType -> physicalFieldType
    java.lang.Object toPhysicalArray() -> toPhysicalArray
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException:
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$FieldInfo -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$FieldInfo:
    java.lang.String fieldName -> fieldName
    java.lang.Class type -> type
    java.lang.Class definedIn -> definedIn
    java.lang.Object value -> value
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:
    java.util.Map map -> map
    java.lang.String keyFieldName -> keyFieldName
    java.util.Map fieldCache -> fieldCache
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    boolean add(java.lang.Object) -> add
    java.lang.Object get(int) -> get
    int size() -> size
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException:
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:
    java.lang.String DEFAULT_NAMING_MARKER -> DEFAULT_NAMING_MARKER
    java.lang.String CALLBACK_MARKER -> CALLBACK_MARKER
    java.util.Map fieldCache -> fieldCache
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object) -> getCallbacks
    java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory) -> createCallbackIndexMap
    java.lang.Object[] createNullArguments(java.lang.Class[]) -> createNullArguments
    net.sf.cglib.proxy.Callback createReverseEngineeredCallbackOfProperType(net.sf.cglib.proxy.Callback,int,java.util.Map) -> createReverseEngineeredCallbackOfProperType
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List) -> readCallback
    java.lang.Object create(net.sf.cglib.proxy.Enhancer,java.util.List,boolean) -> create
    java.util.List hierarchyFor(java.lang.Class) -> hierarchyFor
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider:
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor val$visitor -> val$visitor
    com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider this$0 -> this$0
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter:
    java.util.Map callbackIndexMap -> callbackIndexMap
    int accept(java.lang.reflect.Method) -> accept
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:
    java.lang.Integer index -> index
    java.util.Map indexMap -> indexMap
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter) -> access$000
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1 -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0 -> this$0
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2 -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.converters.UnmarshallingContext val$context -> val$context
    java.io.Externalizable val$externalizable -> val$externalizable
    com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0 -> this$0
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.converters.reflection.FieldDictionary -> com.thoughtworks.xstream.converters.reflection.FieldDictionary:
    java.util.Map keyedByFieldNameCache -> keyedByFieldNameCache
    java.util.Map keyedByFieldKeyCache -> keyedByFieldKeyCache
    com.thoughtworks.xstream.converters.reflection.FieldKeySorter sorter -> sorter
    void init() -> init
    java.util.Iterator serializableFieldsFor(java.lang.Class) -> serializableFieldsFor
    java.util.Iterator fieldsFor(java.lang.Class) -> fieldsFor
    java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class) -> field
    java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class) -> fieldOrNull
    java.util.Map buildMap(java.lang.Class,boolean) -> buildMap
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.FieldKey -> com.thoughtworks.xstream.converters.reflection.FieldKey:
    java.lang.String fieldName -> fieldName
    java.lang.Class declaringClass -> declaringClass
    int depth -> depth
    int order -> order
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    int getDepth() -> getDepth
    int getOrder() -> getOrder
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.converters.reflection.FieldKeySorter -> com.thoughtworks.xstream.converters.reflection.FieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.MissingFieldException -> com.thoughtworks.xstream.converters.reflection.MissingFieldException:
    java.lang.String fieldName -> fieldName
    java.lang.String className -> className
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getClassName() -> getClassName
com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter$1 -> com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter$1:
    com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter this$0 -> this$0
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.reflection.ObjectAccessException -> com.thoughtworks.xstream.converters.reflection.ObjectAccessException:
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider -> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:
    java.util.Map serializedDataCache -> serializedDataCache
    com.thoughtworks.xstream.converters.reflection.FieldDictionary fieldDictionary -> fieldDictionary
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.Object instantiateUsingSerialization(java.lang.Class) -> instantiateUsingSerialization
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    boolean fieldModifiersSupported(java.lang.reflect.Field) -> fieldModifiersSupported
    void validateFieldAccess(java.lang.reflect.Field) -> validateFieldAccess
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String) -> getFieldOrNull
    void setFieldDictionary(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> setFieldDictionary
    java.lang.Object readResolve() -> readResolve
    void init() -> init
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1:
    java.lang.Class val$type -> val$type
    com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider this$0 -> this$0
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
com.thoughtworks.xstream.converters.reflection.ReflectionConverter -> com.thoughtworks.xstream.converters.reflection.ReflectionConverter:
    java.lang.Class eventHandlerType -> eventHandlerType
    java.lang.Class type -> type
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.reflection.ReflectionProvider -> com.thoughtworks.xstream.converters.reflection.ReflectionProvider:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String) -> getFieldOrNull
com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor -> com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor:
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper -> com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider wrapped -> wrapped
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getFieldOrNull(java.lang.Class,java.lang.String) -> getFieldOrNull
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker -> com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker:
com.thoughtworks.xstream.converters.reflection.SerializableConverter -> com.thoughtworks.xstream.converters.reflection.SerializableConverter:
    java.lang.String ELEMENT_NULL -> ELEMENT_NULL
    java.lang.String ELEMENT_DEFAULT -> ELEMENT_DEFAULT
    java.lang.String ELEMENT_UNSERIALIZABLE_PARENTS -> ELEMENT_UNSERIALIZABLE_PARENTS
    java.lang.String ATTRIBUTE_CLASS -> ATTRIBUTE_CLASS
    java.lang.String ATTRIBUTE_SERIALIZATION -> ATTRIBUTE_SERIALIZATION
    java.lang.String ATTRIBUTE_VALUE_CUSTOM -> ATTRIBUTE_VALUE_CUSTOM
    java.lang.String ELEMENT_FIELDS -> ELEMENT_FIELDS
    java.lang.String ELEMENT_FIELD -> ELEMENT_FIELD
    java.lang.String ATTRIBUTE_NAME -> ATTRIBUTE_NAME
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    boolean canConvert(java.lang.Class) -> canConvert
    boolean isSerializable(java.lang.Class) -> isSerializable
    void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshal
    void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object) -> marshalUnserializableParent
    java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object) -> readField
    java.util.List hierarchyFor(java.lang.Class) -> hierarchyFor
    java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshal
    void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshalConditionally
    java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshalConditionally
    java.lang.Object access$000(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object) -> access$000
com.thoughtworks.xstream.converters.reflection.SerializableConverter$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    java.lang.Class[] val$currentType -> val$currentType
    java.lang.Object val$source -> val$source
    boolean[] val$writtenClassWrapper -> val$writtenClassWrapper
    com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0 -> this$0
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.converters.UnmarshallingContext val$context -> val$context
    java.lang.Object val$result -> val$result
    java.lang.Class[] val$currentType -> val$currentType
    com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0 -> this$0
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1:
    java.io.ObjectInputValidation val$validation -> val$validation
    com.thoughtworks.xstream.converters.reflection.SerializableConverter$2 this$1 -> this$1
    void run() -> run
com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider:
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor val$visitor -> val$visitor
    com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider this$0 -> this$0
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker -> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:
    java.lang.reflect.Method NO_METHOD -> NO_METHOD
    java.lang.Object[] EMPTY_ARGS -> EMPTY_ARGS
    com.thoughtworks.xstream.core.util.FastField[] OBJECT_TYPE_FIELDS -> OBJECT_TYPE_FIELDS
    java.util.Map cache -> cache
    java.lang.Object callReadResolve(java.lang.Object) -> callReadResolve
    java.lang.Object callWriteReplace(java.lang.Object) -> callWriteReplace
    boolean supportsReadObject(java.lang.Class,boolean) -> supportsReadObject
    void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream) -> callReadObject
    boolean supportsWriteObject(java.lang.Class,boolean) -> supportsWriteObject
    void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream) -> callWriteObject
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) -> getMethod
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    void flushCache() -> flushCache
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker$1 -> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker$1:
    void noMethod() -> noMethod
com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:
    java.util.Map map -> map
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
    void registerFieldOrder(java.lang.Class,java.lang.String[]) -> registerFieldOrder
    void flushCache() -> flushCache
com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator -> com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator:
    java.lang.String[] fieldOrder -> fieldOrder
    com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter this$0 -> this$0
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider -> com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider -> com.thoughtworks.xstream.converters.reflection.SunLimitedUnsafeReflectionProvider:
    sun.misc.Unsafe unsafe -> unsafe
    java.lang.Exception exception -> exception
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void validateFieldAccess(java.lang.reflect.Field) -> validateFieldAccess
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.SunUnsafeReflectionProvider -> com.thoughtworks.xstream.converters.reflection.SunUnsafeReflectionProvider:
    java.util.Map fieldOffsetCache -> fieldOffsetCache
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> write
    long getFieldOffset(java.lang.reflect.Field) -> getFieldOffset
    java.lang.Object readResolve() -> readResolve
    void init() -> init
com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter -> com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter$1 -> com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter$1:
    com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter this$0 -> this$0
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.AbstractReferenceMarshaller -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller:
    com.thoughtworks.xstream.core.util.ObjectIdDictionary references -> references
    com.thoughtworks.xstream.core.util.ObjectIdDictionary implicitElements -> implicitElements
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    com.thoughtworks.xstream.io.path.Path lastPath -> lastPath
    void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convert
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
    com.thoughtworks.xstream.core.util.ObjectIdDictionary access$000(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$000
    com.thoughtworks.xstream.io.path.PathTracker access$100(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$100
    com.thoughtworks.xstream.core.util.ObjectIdDictionary access$200(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$200
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1 -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:
    java.lang.Object val$newReferenceKey -> val$newReferenceKey
    com.thoughtworks.xstream.io.path.Path val$currentPath -> val$currentPath
    com.thoughtworks.xstream.core.AbstractReferenceMarshaller this$0 -> this$0
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    java.lang.Object get(java.lang.Object) -> get
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    void convertAnother(java.lang.Object) -> convertAnother
    void replace(java.lang.Object,java.lang.Object) -> replace
    java.lang.Object lookupReference(java.lang.Object) -> lookupReference
    com.thoughtworks.xstream.io.path.Path currentPath() -> currentPath
    void registerImplicit(java.lang.Object) -> registerImplicit
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$Id -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$Id:
    java.lang.Object item -> item
    com.thoughtworks.xstream.io.path.Path path -> path
    java.lang.Object getItem() -> getItem
    com.thoughtworks.xstream.io.path.Path getPath() -> getPath
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException:
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller -> com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:
    java.lang.Object NULL -> NULL
    java.util.Map values -> values
    com.thoughtworks.xstream.core.util.FastStack parentStack -> parentStack
    java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convert
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy -> com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.BaseException -> com.thoughtworks.xstream.core.BaseException:
    java.lang.Throwable getCause() -> getCause
com.thoughtworks.xstream.core.Caching -> com.thoughtworks.xstream.core.Caching:
    void flushCache() -> flushCache
com.thoughtworks.xstream.core.ClassLoaderReference -> com.thoughtworks.xstream.core.ClassLoaderReference:
    java.lang.ClassLoader reference -> reference
    java.lang.ClassLoader getReference() -> getReference
    void setReference(java.lang.ClassLoader) -> setReference
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.DefaultConverterLookup -> com.thoughtworks.xstream.core.DefaultConverterLookup:
    com.thoughtworks.xstream.core.util.PrioritizedList converters -> converters
    java.util.Map typeToConverterMap -> typeToConverterMap
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.JVM -> com.thoughtworks.xstream.core.JVM:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    boolean isAWTAvailable -> isAWTAvailable
    boolean isSwingAvailable -> isSwingAvailable
    boolean isSQLAvailable -> isSQLAvailable
    boolean canAllocateWithUnsafe -> canAllocateWithUnsafe
    boolean canWriteWithUnsafe -> canWriteWithUnsafe
    boolean optimizedTreeSetAddAll -> optimizedTreeSetAddAll
    boolean optimizedTreeMapPutAll -> optimizedTreeMapPutAll
    boolean canParseUTCDateFormat -> canParseUTCDateFormat
    boolean canCreateDerivedObjectOutputStream -> canCreateDerivedObjectOutputStream
    java.lang.String vendor -> vendor
    float majorJavaVersion -> majorJavaVersion
    float DEFAULT_JAVA_VERSION -> DEFAULT_JAVA_VERSION
    boolean reverseFieldOrder -> reverseFieldOrder
    java.lang.Class reflectionProviderType -> reflectionProviderType
    float getMajorJavaVersion() -> getMajorJavaVersion
    boolean is14() -> is14
    boolean is15() -> is15
    boolean is16() -> is16
    boolean is17() -> is17
    boolean is18() -> is18
    boolean isIBM() -> isIBM
    boolean isAndroid() -> isAndroid
    java.lang.Class loadClassForName(java.lang.String) -> loadClassForName
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.Class loadClassForName(java.lang.String,boolean) -> loadClassForName
    java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider() -> newReflectionProvider
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider newReflectionProvider(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> newReflectionProvider
    java.lang.Class getStaxInputFactory() -> getStaxInputFactory
    java.lang.Class getStaxOutputFactory() -> getStaxOutputFactory
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider() -> bestReflectionProvider
    boolean canUseSunUnsafeReflectionProvider() -> canUseSunUnsafeReflectionProvider
    boolean canUseSunLimitedUnsafeReflectionProvider() -> canUseSunLimitedUnsafeReflectionProvider
    boolean reverseFieldDefinition() -> reverseFieldDefinition
    boolean isAWTAvailable() -> isAWTAvailable
    boolean supportsAWT() -> supportsAWT
    boolean isSwingAvailable() -> isSwingAvailable
    boolean supportsSwing() -> supportsSwing
    boolean isSQLAvailable() -> isSQLAvailable
    boolean supportsSQL() -> supportsSQL
    boolean hasOptimizedTreeSetAddAll() -> hasOptimizedTreeSetAddAll
    boolean hasOptimizedTreeMapPutAll() -> hasOptimizedTreeMapPutAll
    boolean canParseUTCDateFormat() -> canParseUTCDateFormat
    boolean canCreateDerivedObjectOutputStream() -> canCreateDerivedObjectOutputStream
    void flushCache() -> flushCache
    void main(java.lang.String[]) -> main
com.thoughtworks.xstream.core.JVM$1 -> com.thoughtworks.xstream.core.JVM$1:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.JVM$Test -> com.thoughtworks.xstream.core.JVM$Test:
    java.lang.Object o -> o
    char c -> c
    byte b -> b
    short s -> s
    int i -> i
    long l -> l
    float f -> f
    double d -> d
    boolean bool -> bool
com.thoughtworks.xstream.core.MapBackedDataHolder -> com.thoughtworks.xstream.core.MapBackedDataHolder:
    java.util.Map map -> map
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.core.ReferenceByIdMarshaller -> com.thoughtworks.xstream.core.ReferenceByIdMarshaller:
    com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator idGenerator -> idGenerator
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator -> com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator:
    java.lang.String next(java.lang.Object) -> next
com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy -> com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy:
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller -> com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.ReferenceByXPathMarshaller -> com.thoughtworks.xstream.core.ReferenceByXPathMarshaller:
    int mode -> mode
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy -> com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy:
    int RELATIVE -> RELATIVE
    int ABSOLUTE -> ABSOLUTE
    int SINGLE_NODE -> SINGLE_NODE
    int mode -> mode
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller -> com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    boolean isNameEncoding -> isNameEncoding
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.ReferencingMarshallingContext -> com.thoughtworks.xstream.core.ReferencingMarshallingContext:
    com.thoughtworks.xstream.io.path.Path currentPath() -> currentPath
    java.lang.Object lookupReference(java.lang.Object) -> lookupReference
    void replace(java.lang.Object,java.lang.Object) -> replace
    void registerImplicit(java.lang.Object) -> registerImplicit
com.thoughtworks.xstream.core.SequenceGenerator -> com.thoughtworks.xstream.core.SequenceGenerator:
    int counter -> counter
    java.lang.String next(java.lang.Object) -> next
com.thoughtworks.xstream.core.TreeMarshaller -> com.thoughtworks.xstream.core.TreeMarshaller:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter writer -> writer
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects -> parentObjects
    com.thoughtworks.xstream.converters.DataHolder dataHolder -> dataHolder
    void convertAnother(java.lang.Object) -> convertAnother
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convert
    void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder) -> start
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    void lazilyCreateDataHolder() -> lazilyCreateDataHolder
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException -> com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException:
com.thoughtworks.xstream.core.TreeMarshallingStrategy -> com.thoughtworks.xstream.core.TreeMarshallingStrategy:
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.TreeUnmarshaller -> com.thoughtworks.xstream.core.TreeUnmarshaller:
    java.lang.Object root -> root
    com.thoughtworks.xstream.io.HierarchicalStreamReader reader -> reader
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.util.FastStack types -> types
    com.thoughtworks.xstream.converters.DataHolder dataHolder -> dataHolder
    com.thoughtworks.xstream.core.util.PrioritizedList validationList -> validationList
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class) -> convertAnother
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convert
    void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object) -> addInformationTo
    void addCompletionCallback(java.lang.Runnable,int) -> addCompletionCallback
    java.lang.Object currentObject() -> currentObject
    java.lang.Class getRequiredType() -> getRequiredType
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    void lazilyCreateDataHolder() -> lazilyCreateDataHolder
    java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder) -> start
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
com.thoughtworks.xstream.core.util.ArrayIterator -> com.thoughtworks.xstream.core.util.ArrayIterator:
    java.lang.Object array -> array
    int idx -> idx
    int length -> length
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.core.util.Base64Encoder -> com.thoughtworks.xstream.core.util.Base64Encoder:
    char[] SIXTY_FOUR_CHARS -> SIXTY_FOUR_CHARS
    int[] REVERSE_MAPPING -> REVERSE_MAPPING
    java.lang.String encode(byte[]) -> encode
    byte[] decode(java.lang.String) -> decode
    int mapCharToInt(java.io.Reader) -> mapCharToInt
com.thoughtworks.xstream.core.util.ClassLoaderReference -> com.thoughtworks.xstream.core.util.ClassLoaderReference:
    java.lang.ClassLoader reference -> reference
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.ClassLoader getReference() -> getReference
    void setReference(java.lang.ClassLoader) -> setReference
    java.lang.Object writeReplace() -> writeReplace
com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement -> com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement:
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.util.Cloneables -> com.thoughtworks.xstream.core.util.Cloneables:
    java.lang.Object clone(java.lang.Object) -> clone
    java.lang.Object cloneIfPossible(java.lang.Object) -> cloneIfPossible
com.thoughtworks.xstream.core.util.CompositeClassLoader -> com.thoughtworks.xstream.core.util.CompositeClassLoader:
    java.lang.ref.ReferenceQueue queue -> queue
    java.util.List classLoaders -> classLoaders
    void add(java.lang.ClassLoader) -> add
    void addInternal(java.lang.ClassLoader) -> addInternal
    java.lang.Class loadClass(java.lang.String) -> loadClass
    void cleanup() -> cleanup
com.thoughtworks.xstream.core.util.CompositeClassLoader$1 -> com.thoughtworks.xstream.core.util.CompositeClassLoader$1:
    com.thoughtworks.xstream.core.util.CompositeClassLoader this$0 -> this$0
    boolean addAll(java.util.Collection) -> addAll
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.core.util.CustomObjectInputStream -> com.thoughtworks.xstream.core.util.CustomObjectInputStream:
    com.thoughtworks.xstream.core.util.FastStack callbacks -> callbacks
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    java.lang.String DATA_HOLDER_KEY -> DATA_HOLDER_KEY
    com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback) -> getInstance
    com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,java.lang.ClassLoader) -> getInstance
    com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,com.thoughtworks.xstream.core.ClassLoaderReference) -> getInstance
    void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback) -> pushCallback
    com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback popCallback() -> popCallback
    com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback peekCallback() -> peekCallback
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    void defaultReadObject() -> defaultReadObject
    java.lang.Object readObjectOverride() -> readObjectOverride
    java.lang.Object readUnshared() -> readUnshared
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    int readInt() -> readInt
    char readChar() -> readChar
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    long readLong() -> readLong
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    java.lang.String readUTF() -> readUTF
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    java.io.ObjectInputStream$GetField readFields() -> readFields
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
    int available() -> available
    java.lang.String readLine() -> readLine
    int skipBytes(int) -> skipBytes
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField -> com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:
    java.util.Map fields -> fields
    com.thoughtworks.xstream.core.util.CustomObjectInputStream this$0 -> this$0
    java.io.ObjectStreamClass getObjectStreamClass() -> getObjectStreamClass
    java.lang.Object get(java.lang.String) -> get
    boolean defaulted(java.lang.String) -> defaulted
    byte get(java.lang.String,byte) -> get
    char get(java.lang.String,char) -> get
    double get(java.lang.String,double) -> get
    float get(java.lang.String,float) -> get
    int get(java.lang.String,int) -> get
    long get(java.lang.String,long) -> get
    short get(java.lang.String,short) -> get
    boolean get(java.lang.String,boolean) -> get
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback -> com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback:
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.core.util.CustomObjectOutputStream -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream:
    com.thoughtworks.xstream.core.util.FastStack callbacks -> callbacks
    com.thoughtworks.xstream.core.util.FastStack customFields -> customFields
    java.lang.String DATA_HOLDER_KEY -> DATA_HOLDER_KEY
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> getInstance
    void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> pushCallback
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback popCallback() -> popCallback
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback() -> peekCallback
    void defaultWriteObject() -> defaultWriteObject
    void writeObjectOverride(java.lang.Object) -> writeObjectOverride
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeInt(int) -> writeInt
    void writeChar(int) -> writeChar
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void write(byte[]) -> write
    void writeChars(java.lang.String) -> writeChars
    void writeUTF(java.lang.String) -> writeUTF
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    java.io.ObjectOutputStream$PutField putFields() -> putFields
    void writeFields() -> writeFields
    void reset() -> reset
    void useProtocolVersion(int) -> useProtocolVersion
    void writeBytes(java.lang.String) -> writeBytes
    void writeUnshared(java.lang.Object) -> writeUnshared
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1 -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1:
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:
    java.util.Map fields -> fields
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream this$0 -> this$0
    java.util.Map asMap() -> asMap
    void write(java.io.ObjectOutput) -> write
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,byte) -> put
    void put(java.lang.String,char) -> put
    void put(java.lang.String,double) -> put
    void put(java.lang.String,float) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,short) -> put
    void put(java.lang.String,boolean) -> put
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback:
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.core.util.DependencyInjectionFactory -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory:
    java.lang.Object newInstance(java.lang.Class,java.lang.Object[]) -> newInstance
    java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet) -> newInstance
com.thoughtworks.xstream.core.util.DependencyInjectionFactory$1 -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory$1:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.util.DependencyInjectionFactory$TypedValue -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory$TypedValue:
    java.lang.Class type -> type
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.FastField -> com.thoughtworks.xstream.core.util.FastField:
    java.lang.String name -> name
    java.lang.String declaringClass -> declaringClass
    java.lang.String getName() -> getName
    java.lang.String getDeclaringClass() -> getDeclaringClass
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.FastStack -> com.thoughtworks.xstream.core.util.FastStack:
    java.lang.Object[] stack -> stack
    int pointer -> pointer
    java.lang.Object push(java.lang.Object) -> push
    void popSilently() -> popSilently
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    java.lang.Object replace(java.lang.Object) -> replace
    void replaceSilently(java.lang.Object) -> replaceSilently
    int size() -> size
    boolean hasStuff() -> hasStuff
    java.lang.Object get(int) -> get
    void resizeStack(int) -> resizeStack
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.Fields -> com.thoughtworks.xstream.core.util.Fields:
    java.lang.reflect.Field locate(java.lang.Class,java.lang.Class,boolean) -> locate
    java.lang.reflect.Field find(java.lang.Class,java.lang.String) -> find
    void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> write
    java.lang.Object read(java.lang.reflect.Field,java.lang.Object) -> read
com.thoughtworks.xstream.core.util.HierarchicalStreams -> com.thoughtworks.xstream.core.util.HierarchicalStreams:
    java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper) -> readClassType
    java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper) -> readClassAttribute
com.thoughtworks.xstream.core.util.ObjectIdDictionary -> com.thoughtworks.xstream.core.util.ObjectIdDictionary:
    java.util.Map map -> map
    java.lang.ref.ReferenceQueue queue -> queue
    void associateId(java.lang.Object,java.lang.Object) -> associateId
    java.lang.Object lookupId(java.lang.Object) -> lookupId
    boolean containsId(java.lang.Object) -> containsId
    void removeId(java.lang.Object) -> removeId
    int size() -> size
    void cleanup() -> cleanup
    java.lang.ref.ReferenceQueue access$000(com.thoughtworks.xstream.core.util.ObjectIdDictionary) -> access$000
com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper:
    java.lang.Object obj -> obj
    int hashCode -> hashCode
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> get
com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper:
    int hashCode -> hashCode
    com.thoughtworks.xstream.core.util.ObjectIdDictionary this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.ObjectIdDictionary$Wrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$Wrapper:
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> get
com.thoughtworks.xstream.core.util.OrderRetainingMap -> com.thoughtworks.xstream.core.util.OrderRetainingMap:
    com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet keyOrder -> keyOrder
    java.util.List valueOrder -> valueOrder
    void putAll(java.util.Map) -> putAll
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
com.thoughtworks.xstream.core.util.OrderRetainingMap$1 -> com.thoughtworks.xstream.core.util.OrderRetainingMap$1:
com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet -> com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet:
com.thoughtworks.xstream.core.util.Pool -> com.thoughtworks.xstream.core.util.Pool:
    int initialPoolSize -> initialPoolSize
    int maxPoolSize -> maxPoolSize
    com.thoughtworks.xstream.core.util.Pool$Factory factory -> factory
    java.lang.Object[] pool -> pool
    int nextAvailable -> nextAvailable
    java.lang.Object mutex -> mutex
    java.lang.Object fetchFromPool() -> fetchFromPool
    void putInPool(java.lang.Object) -> putInPool
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.util.Pool$Factory -> com.thoughtworks.xstream.core.util.Pool$Factory:
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.PresortedMap -> com.thoughtworks.xstream.core.util.PresortedMap:
    com.thoughtworks.xstream.core.util.PresortedMap$ArraySet set -> set
    java.util.Comparator comparator -> comparator
    java.util.Comparator comparator() -> comparator
    java.util.Set entrySet() -> entrySet
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.Set keySet() -> keySet
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Collection values() -> values
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
com.thoughtworks.xstream.core.util.PresortedMap$1 -> com.thoughtworks.xstream.core.util.PresortedMap$1:
    java.lang.Object val$key -> val$key
    java.lang.Object val$value -> val$value
    com.thoughtworks.xstream.core.util.PresortedMap this$0 -> this$0
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.thoughtworks.xstream.core.util.PresortedMap$ArraySet -> com.thoughtworks.xstream.core.util.PresortedMap$ArraySet:
com.thoughtworks.xstream.core.util.PresortedMap$ArraySetComparator -> com.thoughtworks.xstream.core.util.PresortedMap$ArraySetComparator:
    java.util.ArrayList list -> list
    java.util.Map$Entry[] array -> array
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.util.PresortedSet -> com.thoughtworks.xstream.core.util.PresortedSet:
    java.util.List list -> list
    java.util.Comparator comparator -> comparator
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.util.List subList(int,int) -> subList
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.thoughtworks.xstream.core.util.Primitives -> com.thoughtworks.xstream.core.util.Primitives:
    java.util.Map BOX -> BOX
    java.util.Map UNBOX -> UNBOX
    java.util.Map NAMED_PRIMITIVE -> NAMED_PRIMITIVE
    java.util.Map REPRESENTING_CHAR -> REPRESENTING_CHAR
    java.lang.Class box(java.lang.Class) -> box
    java.lang.Class unbox(java.lang.Class) -> unbox
    boolean isBoxed(java.lang.Class) -> isBoxed
    java.lang.Class primitiveType(java.lang.String) -> primitiveType
    char representingChar(java.lang.Class) -> representingChar
com.thoughtworks.xstream.core.util.PrioritizedList -> com.thoughtworks.xstream.core.util.PrioritizedList:
    java.util.Set set -> set
    int lowestPriority -> lowestPriority
    int lastId -> lastId
    void add(java.lang.Object,int) -> add
    java.util.Iterator iterator() -> iterator
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem -> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem:
    java.lang.Object value -> value
    int priority -> priority
    int id -> id
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator -> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator:
    java.util.Iterator iterator -> iterator
    void remove() -> remove
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.thoughtworks.xstream.core.util.QuickWriter -> com.thoughtworks.xstream.core.util.QuickWriter:
    java.io.Writer writer -> writer
    char[] buffer -> buffer
    int pointer -> pointer
    void write(java.lang.String) -> write
    void write(char) -> write
    void write(char[]) -> write
    void flush() -> flush
    void close() -> close
    void raw(char[]) -> raw
    void raw(char) -> raw
com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker -> com.thoughtworks.xstream.core.util.SelfStreamingInstanceChecker:
    java.lang.Object self -> self
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    com.thoughtworks.xstream.converters.Converter getConverter() -> getConverter
com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor -> com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:
    java.lang.Class editorType -> editorType
    com.thoughtworks.xstream.core.util.Pool pool -> pool
    java.lang.String getAsText(java.lang.Object) -> getAsText
    java.lang.Object setAsText(java.lang.String) -> setAsText
    java.beans.PropertyEditor fetchFromPool() -> fetchFromPool
    java.lang.Class access$000(com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor) -> access$000
com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1 -> com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1:
    com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor this$0 -> this$0
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat -> com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:
    java.lang.String formatString -> formatString
    com.thoughtworks.xstream.core.util.Pool pool -> pool
    java.util.TimeZone timeZone -> timeZone
    java.lang.String format(java.util.Date) -> format
    java.util.Date parse(java.lang.String) -> parse
    java.text.DateFormat fetchFromPool() -> fetchFromPool
    java.lang.String toString() -> toString
    java.lang.String access$000(com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat) -> access$000
com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat$1 -> com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat$1:
    java.util.Locale val$locale -> val$locale
    boolean val$lenient -> val$lenient
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat this$0 -> this$0
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.TypedNull -> com.thoughtworks.xstream.core.util.TypedNull:
    java.lang.Class type -> type
    java.lang.Class getType() -> getType
com.thoughtworks.xstream.core.util.WeakCache -> com.thoughtworks.xstream.core.util.WeakCache:
    java.util.Map map -> map
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    boolean containsValue(java.lang.Object) -> containsValue
    int size() -> size
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int) -> iterate
    boolean containsKey(java.lang.Object) -> containsKey
    void clear() -> clear
    java.util.Set keySet() -> keySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.WeakCache$1 -> com.thoughtworks.xstream.core.util.WeakCache$1:
    java.lang.Object val$value -> val$value
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$2 -> com.thoughtworks.xstream.core.util.WeakCache$2:
    int[] val$i -> val$i
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$3 -> com.thoughtworks.xstream.core.util.WeakCache$3:
    java.util.Collection val$collection -> val$collection
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$4 -> com.thoughtworks.xstream.core.util.WeakCache$4:
    java.util.Set val$set -> val$set
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$4$1 -> com.thoughtworks.xstream.core.util.WeakCache$4$1:
    java.util.Map$Entry val$entry -> val$entry
    com.thoughtworks.xstream.core.util.WeakCache$4 this$1 -> this$1
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.thoughtworks.xstream.core.util.WeakCache$Visitor -> com.thoughtworks.xstream.core.util.WeakCache$Visitor:
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.XmlHeaderAwareReader -> com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:
    java.io.InputStreamReader reader -> reader
    double version -> version
    java.lang.String KEY_ENCODING -> KEY_ENCODING
    java.lang.String KEY_VERSION -> KEY_VERSION
    java.lang.String XML_TOKEN -> XML_TOKEN
    int STATE_BOM -> STATE_BOM
    int STATE_START -> STATE_START
    int STATE_AWAIT_XML_HEADER -> STATE_AWAIT_XML_HEADER
    int STATE_ATTR_NAME -> STATE_ATTR_NAME
    int STATE_ATTR_VALUE -> STATE_ATTR_VALUE
    java.util.Map getHeader(java.io.PushbackInputStream[]) -> getHeader
    java.lang.String getEncoding() -> getEncoding
    double getVersion() -> getVersion
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(char[],int,int) -> read
    int read(char[]) -> read
    boolean ready() -> ready
    void reset() -> reset
    long skip(long) -> skip
    void close() -> close
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.io.AbstractDriver -> com.thoughtworks.xstream.io.AbstractDriver:
    com.thoughtworks.xstream.io.naming.NameCoder replacer -> replacer
    com.thoughtworks.xstream.io.naming.NameCoder getNameCoder() -> getNameCoder
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
com.thoughtworks.xstream.io.AbstractReader -> com.thoughtworks.xstream.io.AbstractReader:
    com.thoughtworks.xstream.io.naming.NameCoder nameCoder -> nameCoder
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.AbstractWriter -> com.thoughtworks.xstream.io.AbstractWriter:
    com.thoughtworks.xstream.io.naming.NameCoder nameCoder -> nameCoder
    void startNode(java.lang.String,java.lang.Class) -> startNode
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
com.thoughtworks.xstream.io.AttributeNameIterator -> com.thoughtworks.xstream.io.AttributeNameIterator:
    int current -> current
    int count -> count
    com.thoughtworks.xstream.io.HierarchicalStreamReader reader -> reader
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamReader -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamReader:
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter:
    void startNode(java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:
    void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.HierarchicalStreamDriver -> com.thoughtworks.xstream.io.HierarchicalStreamDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.HierarchicalStreamReader -> com.thoughtworks.xstream.io.HierarchicalStreamReader:
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.HierarchicalStreamWriter -> com.thoughtworks.xstream.io.HierarchicalStreamWriter:
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.ReaderWrapper -> com.thoughtworks.xstream.io.ReaderWrapper:
    com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped -> wrapped
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
    java.lang.String peekNextChild() -> peekNextChild
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.StatefulWriter -> com.thoughtworks.xstream.io.StatefulWriter:
    int STATE_OPEN -> STATE_OPEN
    int STATE_NODE_START -> STATE_NODE_START
    int STATE_VALUE -> STATE_VALUE
    int STATE_NODE_END -> STATE_NODE_END
    int STATE_CLOSED -> STATE_CLOSED
    int state -> state
    int balance -> balance
    com.thoughtworks.xstream.core.util.FastStack attributes -> attributes
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void startNodeCommon() -> startNodeCommon
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    void checkClosed() -> checkClosed
    int state() -> state
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.io.StreamException -> com.thoughtworks.xstream.io.StreamException:
com.thoughtworks.xstream.io.WriterWrapper -> com.thoughtworks.xstream.io.WriterWrapper:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped -> wrapped
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void endNode() -> endNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.binary.BinaryStreamDriver -> com.thoughtworks.xstream.io.binary.BinaryStreamDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.binary.BinaryStreamReader -> com.thoughtworks.xstream.io.binary.BinaryStreamReader:
    java.io.DataInputStream in -> in
    com.thoughtworks.xstream.io.binary.ReaderDepthState depthState -> depthState
    com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry -> idRegistry
    com.thoughtworks.xstream.io.binary.Token pushback -> pushback
    com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter -> tokenFormatter
    boolean hasMoreChildren() -> hasMoreChildren
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    com.thoughtworks.xstream.io.binary.Token readToken() -> readToken
    void pushBack(com.thoughtworks.xstream.io.binary.Token) -> pushBack
    void close() -> close
    java.lang.String peekNextChild() -> peekNextChild
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.binary.BinaryStreamReader$1 -> com.thoughtworks.xstream.io.binary.BinaryStreamReader$1:
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry -> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:
    java.util.Map map -> map
    void put(long,java.lang.String) -> put
    java.lang.String get(long) -> get
com.thoughtworks.xstream.io.binary.BinaryStreamWriter -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter:
    com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry idRegistry -> idRegistry
    java.io.DataOutputStream out -> out
    com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter -> tokenFormatter
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    void write(com.thoughtworks.xstream.io.binary.Token) -> write
    void access$100(com.thoughtworks.xstream.io.binary.BinaryStreamWriter,com.thoughtworks.xstream.io.binary.Token) -> access$100
com.thoughtworks.xstream.io.binary.BinaryStreamWriter$1 -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter$1:
com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:
    long nextId -> nextId
    java.util.Map ids -> ids
    com.thoughtworks.xstream.io.binary.BinaryStreamWriter this$0 -> this$0
    long getId(java.lang.String) -> getId
com.thoughtworks.xstream.io.binary.ReaderDepthState -> com.thoughtworks.xstream.io.binary.ReaderDepthState:
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    com.thoughtworks.xstream.io.binary.ReaderDepthState$State current -> current
    void push() -> push
    void pop() -> pop
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    boolean hasMoreChildren() -> hasMoreChildren
    void setHasMoreChildren(boolean) -> setHasMoreChildren
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    java.lang.String getAttributeName(int) -> getAttributeName
    int getAttributeCount() -> getAttributeCount
    java.util.Iterator getAttributeNames() -> getAttributeNames
com.thoughtworks.xstream.io.binary.ReaderDepthState$1 -> com.thoughtworks.xstream.io.binary.ReaderDepthState$1:
    java.util.Iterator val$attributeIterator -> val$attributeIterator
    com.thoughtworks.xstream.io.binary.ReaderDepthState this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.io.binary.ReaderDepthState$Attribute -> com.thoughtworks.xstream.io.binary.ReaderDepthState$Attribute:
    java.lang.String name -> name
    java.lang.String value -> value
com.thoughtworks.xstream.io.binary.ReaderDepthState$State -> com.thoughtworks.xstream.io.binary.ReaderDepthState$State:
    java.lang.String name -> name
    java.lang.String value -> value
    java.util.List attributes -> attributes
    boolean hasMoreChildren -> hasMoreChildren
    com.thoughtworks.xstream.io.binary.ReaderDepthState$State parent -> parent
com.thoughtworks.xstream.io.binary.Token -> com.thoughtworks.xstream.io.binary.Token:
    byte TYPE_MASK -> TYPE_MASK
    byte TYPE_VERSION -> TYPE_VERSION
    byte TYPE_MAP_ID_TO_VALUE -> TYPE_MAP_ID_TO_VALUE
    byte TYPE_START_NODE -> TYPE_START_NODE
    byte TYPE_END_NODE -> TYPE_END_NODE
    byte TYPE_ATTRIBUTE -> TYPE_ATTRIBUTE
    byte TYPE_VALUE -> TYPE_VALUE
    byte ID_MASK -> ID_MASK
    byte ID_ONE_BYTE -> ID_ONE_BYTE
    byte ID_TWO_BYTES -> ID_TWO_BYTES
    byte ID_FOUR_BYTES -> ID_FOUR_BYTES
    byte ID_EIGHT_BYTES -> ID_EIGHT_BYTES
    java.lang.String ID_SPLITTED -> ID_SPLITTED
    int MAX_UTF8_LENGTH -> MAX_UTF8_LENGTH
    byte type -> type
    long id -> id
    java.lang.String value -> value
    byte getType() -> getType
    long getId() -> getId
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
    void writeId(java.io.DataOutput,long,byte) -> writeId
    void writeString(java.io.DataOutput,java.lang.String) -> writeString
    long readId(java.io.DataInput,byte) -> readId
    java.lang.String readString(java.io.DataInput) -> readString
com.thoughtworks.xstream.io.binary.Token$Attribute -> com.thoughtworks.xstream.io.binary.Token$Attribute:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$EndNode -> com.thoughtworks.xstream.io.binary.Token$EndNode:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$Formatter -> com.thoughtworks.xstream.io.binary.Token$Formatter:
    void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token) -> write
    com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput) -> read
    com.thoughtworks.xstream.io.binary.Token contructToken(byte) -> contructToken
com.thoughtworks.xstream.io.binary.Token$MapIdToValue -> com.thoughtworks.xstream.io.binary.Token$MapIdToValue:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$StartNode -> com.thoughtworks.xstream.io.binary.Token$StartNode:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$Value -> com.thoughtworks.xstream.io.binary.Token$Value:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier -> com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:
    void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> copy
com.thoughtworks.xstream.io.json.AbstractJsonWriter -> com.thoughtworks.xstream.io.json.AbstractJsonWriter:
    int DROP_ROOT_MODE -> DROP_ROOT_MODE
    int STRICT_MODE -> STRICT_MODE
    int EXPLICIT_MODE -> EXPLICIT_MODE
    int IEEE_754_MODE -> IEEE_754_MODE
    int STATE_ROOT -> STATE_ROOT
    int STATE_END_OBJECT -> STATE_END_OBJECT
    int STATE_START_OBJECT -> STATE_START_OBJECT
    int STATE_START_ATTRIBUTES -> STATE_START_ATTRIBUTES
    int STATE_NEXT_ATTRIBUTE -> STATE_NEXT_ATTRIBUTE
    int STATE_END_ATTRIBUTES -> STATE_END_ATTRIBUTES
    int STATE_START_ELEMENTS -> STATE_START_ELEMENTS
    int STATE_NEXT_ELEMENT -> STATE_NEXT_ELEMENT
    int STATE_END_ELEMENTS -> STATE_END_ELEMENTS
    int STATE_SET_VALUE -> STATE_SET_VALUE
    java.util.Set NUMBER_TYPES -> NUMBER_TYPES
    int mode -> mode
    com.thoughtworks.xstream.core.util.FastStack stack -> stack
    int expectedStates -> expectedStates
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void handleCheckedStateTransition(int,java.lang.String,java.lang.String) -> handleCheckedStateTransition
    int handleStateTransition(int,int,java.lang.String,java.lang.String) -> handleStateTransition
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type getType(java.lang.Class) -> getType
    boolean isArray(java.lang.Class) -> isArray
    void startObject() -> startObject
    void addLabel(java.lang.String) -> addLabel
    void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type) -> addValue
    void startArray() -> startArray
    void nextElement() -> nextElement
    void endArray() -> endArray
    void endObject() -> endObject
com.thoughtworks.xstream.io.json.AbstractJsonWriter$IllegalWriterStateException -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$IllegalWriterStateException:
    java.lang.String getState(int) -> getState
com.thoughtworks.xstream.io.json.AbstractJsonWriter$StackElement -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$StackElement:
    java.lang.Class type -> type
    int status -> status
com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type:
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type NULL -> NULL
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type STRING -> STRING
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type NUMBER -> NUMBER
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type BOOLEAN -> BOOLEAN
com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver -> com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:
    org.codehaus.jettison.mapped.MappedXMLOutputFactory mof -> mof
    org.codehaus.jettison.mapped.MappedXMLInputFactory mif -> mif
    org.codehaus.jettison.mapped.MappedNamespaceConvention convention -> convention
    boolean useSerializeAsArray -> useSerializeAsArray
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.json.JettisonStaxWriter -> com.thoughtworks.xstream.io.json.JettisonStaxWriter:
    org.codehaus.jettison.mapped.MappedNamespaceConvention convention -> convention
    void startNode(java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver -> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter -> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:
com.thoughtworks.xstream.io.json.JsonWriter -> com.thoughtworks.xstream.io.json.JsonWriter:
    com.thoughtworks.xstream.core.util.QuickWriter writer -> writer
    com.thoughtworks.xstream.io.json.JsonWriter$Format format -> format
    int depth -> depth
    boolean newLineProposed -> newLineProposed
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    void startObject() -> startObject
    void addLabel(java.lang.String) -> addLabel
    void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type) -> addValue
    void startArray() -> startArray
    void nextElement() -> nextElement
    void endArray() -> endArray
    void endObject() -> endObject
    void startNewLine() -> startNewLine
    void endNewLine() -> endNewLine
    void writeNewLine() -> writeNewLine
    void writeText(java.lang.String) -> writeText
com.thoughtworks.xstream.io.json.JsonWriter$Format -> com.thoughtworks.xstream.io.json.JsonWriter$Format:
    int SPACE_AFTER_LABEL -> SPACE_AFTER_LABEL
    int COMPACT_EMPTY_ELEMENT -> COMPACT_EMPTY_ELEMENT
    char[] lineIndenter -> lineIndenter
    char[] newLine -> newLine
    int mode -> mode
    com.thoughtworks.xstream.io.naming.NameCoder nameCoder -> nameCoder
    char[] getLineIndenter() -> getLineIndenter
    char[] getNewLine() -> getNewLine
    int mode() -> mode
    com.thoughtworks.xstream.io.naming.NameCoder getNameCoder() -> getNameCoder
com.thoughtworks.xstream.io.naming.NameCoder -> com.thoughtworks.xstream.io.naming.NameCoder:
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
com.thoughtworks.xstream.io.naming.NameCoderWrapper -> com.thoughtworks.xstream.io.naming.NameCoderWrapper:
    com.thoughtworks.xstream.io.naming.NameCoder wrapped -> wrapped
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
com.thoughtworks.xstream.io.naming.NoNameCoder -> com.thoughtworks.xstream.io.naming.NoNameCoder:
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
com.thoughtworks.xstream.io.naming.StaticNameCoder -> com.thoughtworks.xstream.io.naming.StaticNameCoder:
    java.util.Map java2Node -> java2Node
    java.util.Map java2Attribute -> java2Attribute
    java.util.Map node2Java -> node2Java
    java.util.Map attribute2Java -> attribute2Java
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.Object readResolve() -> readResolve
    java.util.Map invertMap(java.util.Map) -> invertMap
com.thoughtworks.xstream.io.path.Path -> com.thoughtworks.xstream.io.path.Path:
    java.lang.String[] chunks -> chunks
    java.lang.String pathAsString -> pathAsString
    java.lang.String pathExplicit -> pathExplicit
    com.thoughtworks.xstream.io.path.Path DOT -> DOT
    java.lang.String normalize(java.lang.String,int,int) -> normalize
    java.lang.String toString() -> toString
    java.lang.String explicit() -> explicit
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.thoughtworks.xstream.io.path.Path relativeTo(com.thoughtworks.xstream.io.path.Path) -> relativeTo
    int depthOfPathDivergence(java.lang.String[],java.lang.String[]) -> depthOfPathDivergence
    com.thoughtworks.xstream.io.path.Path apply(com.thoughtworks.xstream.io.path.Path) -> apply
    boolean isAncestor(com.thoughtworks.xstream.io.path.Path) -> isAncestor
com.thoughtworks.xstream.io.path.PathTracker -> com.thoughtworks.xstream.io.path.PathTracker:
    int pointer -> pointer
    int capacity -> capacity
    java.lang.String[] pathStack -> pathStack
    java.util.Map[] indexMapStack -> indexMapStack
    com.thoughtworks.xstream.io.path.Path currentPath -> currentPath
    void pushElement(java.lang.String) -> pushElement
    void popElement() -> popElement
    java.lang.String peekElement() -> peekElement
    java.lang.String peekElement(int) -> peekElement
    int depth() -> depth
    void resizeStacks(int) -> resizeStacks
    com.thoughtworks.xstream.io.path.Path getPath() -> getPath
com.thoughtworks.xstream.io.path.PathTrackingReader -> com.thoughtworks.xstream.io.path.PathTrackingReader:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.path.PathTrackingWriter -> com.thoughtworks.xstream.io.path.PathTrackingWriter:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    boolean isNameEncoding -> isNameEncoding
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void endNode() -> endNode
com.thoughtworks.xstream.io.xml.AbstractDocumentReader -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader:
    com.thoughtworks.xstream.core.util.FastStack pointers -> pointers
    java.lang.Object current -> current
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    boolean hasMoreChildren() -> hasMoreChildren
    void moveUp() -> moveUp
    void moveDown() -> moveDown
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    java.lang.Object getCurrent() -> getCurrent
    void close() -> close
com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1 -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1:
com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer:
    int v -> v
com.thoughtworks.xstream.io.xml.AbstractDocumentWriter -> com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:
    java.util.List result -> result
    com.thoughtworks.xstream.core.util.FastStack nodeStack -> nodeStack
    void startNode(java.lang.String) -> startNode
    java.lang.Object createNode(java.lang.String) -> createNode
    void endNode() -> endNode
    void endNodeInternally() -> endNodeInternally
    java.lang.Object getCurrent() -> getCurrent
    java.util.List getTopLevelNodes() -> getTopLevelNodes
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.io.xml.AbstractPullReader -> com.thoughtworks.xstream.io.xml.AbstractPullReader:
    int START_NODE -> START_NODE
    int END_NODE -> END_NODE
    int TEXT -> TEXT
    int COMMENT -> COMMENT
    int OTHER -> OTHER
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    com.thoughtworks.xstream.core.util.FastStack pool -> pool
    com.thoughtworks.xstream.core.util.FastStack lookahead -> lookahead
    com.thoughtworks.xstream.core.util.FastStack lookback -> lookback
    boolean marked -> marked
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    void move() -> move
    com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent() -> readEvent
    com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent() -> readRealEvent
    void mark() -> mark
    void reset() -> reset
    java.lang.String getValue() -> getValue
    java.util.Iterator getAttributeNames() -> getAttributeNames
    java.lang.String getNodeName() -> getNodeName
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.AbstractPullReader$1 -> com.thoughtworks.xstream.io.xml.AbstractPullReader$1:
com.thoughtworks.xstream.io.xml.AbstractPullReader$Event -> com.thoughtworks.xstream.io.xml.AbstractPullReader$Event:
    int type -> type
    java.lang.String value -> value
com.thoughtworks.xstream.io.xml.AbstractXmlDriver -> com.thoughtworks.xstream.io.xml.AbstractXmlDriver:
    com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer() -> xmlFriendlyReplacer
com.thoughtworks.xstream.io.xml.AbstractXmlReader -> com.thoughtworks.xstream.io.xml.AbstractXmlReader:
    java.lang.String unescapeXmlName(java.lang.String) -> unescapeXmlName
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.AbstractXmlWriter -> com.thoughtworks.xstream.io.xml.AbstractXmlWriter:
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.AbstractXppDomDriver -> com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.AbstractXppDriver -> com.thoughtworks.xstream.io.xml.AbstractXppDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.BEAStaxDriver -> com.thoughtworks.xstream.io.xml.BEAStaxDriver:
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.CompactWriter -> com.thoughtworks.xstream.io.xml.CompactWriter:
    void endOfLine() -> endOfLine
com.thoughtworks.xstream.io.xml.DocumentReader -> com.thoughtworks.xstream.io.xml.DocumentReader:
    java.lang.Object getCurrent() -> getCurrent
com.thoughtworks.xstream.io.xml.DocumentWriter -> com.thoughtworks.xstream.io.xml.DocumentWriter:
    java.util.List getTopLevelNodes() -> getTopLevelNodes
com.thoughtworks.xstream.io.xml.Dom4JDriver -> com.thoughtworks.xstream.io.xml.Dom4JDriver:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    org.dom4j.io.OutputFormat outputFormat -> outputFormat
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.io.OutputFormat getOutputFormat() -> getOutputFormat
    void setOutputFormat(org.dom4j.io.OutputFormat) -> setOutputFormat
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.Dom4JDriver$1 -> com.thoughtworks.xstream.io.xml.Dom4JDriver$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter[] val$writer -> val$writer
    com.thoughtworks.xstream.io.xml.Dom4JDriver this$0 -> this$0
    void close() -> close
com.thoughtworks.xstream.io.xml.Dom4JReader -> com.thoughtworks.xstream.io.xml.Dom4JReader:
    org.dom4j.Element currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.String peekNextChild() -> peekNextChild
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.xml.Dom4JWriter -> com.thoughtworks.xstream.io.xml.Dom4JWriter:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.dom4j.Branch top() -> top
com.thoughtworks.xstream.io.xml.Dom4JXmlWriter -> com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:
    org.dom4j.io.XMLWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    org.xml.sax.helpers.AttributesImpl attributes -> attributes
    boolean started -> started
    boolean children -> children
    void startNode(java.lang.String) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    void startElement() -> startElement
com.thoughtworks.xstream.io.xml.DomDriver -> com.thoughtworks.xstream.io.xml.DomDriver:
    java.lang.String encoding -> encoding
    javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory -> documentBuilderFactory
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(org.xml.sax.InputSource) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.DomReader -> com.thoughtworks.xstream.io.xml.DomReader:
    org.w3c.dom.Element currentElement -> currentElement
    java.lang.StringBuffer textBuffer -> textBuffer
    java.util.List childElements -> childElements
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.DomWriter -> com.thoughtworks.xstream.io.xml.DomWriter:
    org.w3c.dom.Document document -> document
    boolean hasRootElement -> hasRootElement
    java.lang.Object createNode(java.lang.String) -> createNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    org.w3c.dom.Element top() -> top
com.thoughtworks.xstream.io.xml.JDom2Driver -> com.thoughtworks.xstream.io.xml.JDom2Driver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.JDom2Reader -> com.thoughtworks.xstream.io.xml.JDom2Reader:
    org.jdom2.Element currentElement -> currentElement
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.JDom2Writer -> com.thoughtworks.xstream.io.xml.JDom2Writer:
    org.jdom2.JDOMFactory documentFactory -> documentFactory
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.jdom2.Element top() -> top
com.thoughtworks.xstream.io.xml.JDomDriver -> com.thoughtworks.xstream.io.xml.JDomDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.JDomReader -> com.thoughtworks.xstream.io.xml.JDomReader:
    org.jdom.Element currentElement -> currentElement
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.JDomWriter -> com.thoughtworks.xstream.io.xml.JDomWriter:
    org.jdom.JDOMFactory documentFactory -> documentFactory
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.jdom.Element top() -> top
com.thoughtworks.xstream.io.xml.KXml2DomDriver -> com.thoughtworks.xstream.io.xml.KXml2DomDriver:
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.KXml2Driver -> com.thoughtworks.xstream.io.xml.KXml2Driver:
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.PrettyPrintWriter -> com.thoughtworks.xstream.io.xml.PrettyPrintWriter:
    int XML_QUIRKS -> XML_QUIRKS
    int XML_1_0 -> XML_1_0
    int XML_1_1 -> XML_1_1
    com.thoughtworks.xstream.core.util.QuickWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    char[] lineIndenter -> lineIndenter
    int mode -> mode
    boolean tagInProgress -> tagInProgress
    int depth -> depth
    boolean readyForNewLine -> readyForNewLine
    boolean tagIsEmpty -> tagIsEmpty
    java.lang.String newLine -> newLine
    char[] NULL -> NULL
    char[] AMP -> AMP
    char[] LT -> LT
    char[] GT -> GT
    char[] CR -> CR
    char[] QUOT -> QUOT
    char[] APOS -> APOS
    char[] CLOSE -> CLOSE
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeAttributeValue
    void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeText
    void writeText(java.lang.String,boolean) -> writeText
    void endNode() -> endNode
    void finishTag() -> finishTag
    void endOfLine() -> endOfLine
    void flush() -> flush
    void close() -> close
    java.lang.String getNewLine() -> getNewLine
com.thoughtworks.xstream.io.xml.QNameMap -> com.thoughtworks.xstream.io.xml.QNameMap:
    java.util.Map qnameToJava -> qnameToJava
    java.util.Map javaToQName -> javaToQName
    java.lang.String defaultPrefix -> defaultPrefix
    java.lang.String defaultNamespace -> defaultNamespace
    java.lang.String getJavaClassName(javax.xml.namespace.QName) -> getJavaClassName
    javax.xml.namespace.QName getQName(java.lang.String) -> getQName
    void registerMapping(javax.xml.namespace.QName,java.lang.String) -> registerMapping
    void registerMapping(javax.xml.namespace.QName,java.lang.Class) -> registerMapping
    java.lang.String getDefaultNamespace() -> getDefaultNamespace
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    java.lang.String getDefaultPrefix() -> getDefaultPrefix
    void setDefaultPrefix(java.lang.String) -> setDefaultPrefix
com.thoughtworks.xstream.io.xml.SaxWriter -> com.thoughtworks.xstream.io.xml.SaxWriter:
    java.lang.String CONFIGURED_XSTREAM_PROPERTY -> CONFIGURED_XSTREAM_PROPERTY
    java.lang.String SOURCE_OBJECT_LIST_PROPERTY -> SOURCE_OBJECT_LIST_PROPERTY
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    org.xml.sax.DTDHandler dtdHandler -> dtdHandler
    org.xml.sax.ContentHandler contentHandler -> contentHandler
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    java.util.Map features -> features
    java.util.Map properties -> properties
    boolean includeEnclosingDocument -> includeEnclosingDocument
    int depth -> depth
    java.util.List elementStack -> elementStack
    char[] buffer -> buffer
    boolean startTagInProgress -> startTagInProgress
    org.xml.sax.helpers.AttributesImpl attributeList -> attributeList
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setDTDHandler(org.xml.sax.DTDHandler) -> setDTDHandler
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    org.xml.sax.ContentHandler getContentHandler() -> getContentHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void parse(java.lang.String) -> parse
    void parse(org.xml.sax.InputSource) -> parse
    void parse() -> parse
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void startDocument(boolean) -> startDocument
    void endDocument(boolean) -> endDocument
    void flushStartTag() -> flushStartTag
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.io.xml.SjsxpDriver -> com.thoughtworks.xstream.io.xml.SjsxpDriver:
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.StandardStaxDriver -> com.thoughtworks.xstream.io.xml.StandardStaxDriver:
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.StaxDriver -> com.thoughtworks.xstream.io.xml.StaxDriver:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLInputFactory inputFactory -> inputFactory
    javax.xml.stream.XMLOutputFactory outputFactory -> outputFactory
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    com.thoughtworks.xstream.io.xml.AbstractPullReader createStaxReader(javax.xml.stream.XMLStreamReader) -> createStaxReader
    com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean) -> createStaxWriter
    com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter) -> createStaxWriter
    com.thoughtworks.xstream.io.xml.QNameMap getQnameMap() -> getQnameMap
    void setQnameMap(com.thoughtworks.xstream.io.xml.QNameMap) -> setQnameMap
    javax.xml.stream.XMLInputFactory getInputFactory() -> getInputFactory
    javax.xml.stream.XMLOutputFactory getOutputFactory() -> getOutputFactory
    boolean isRepairingNamespace() -> isRepairingNamespace
    void setRepairingNamespace(boolean) -> setRepairingNamespace
    javax.xml.stream.XMLStreamReader createParser(java.io.Reader) -> createParser
    javax.xml.stream.XMLStreamReader createParser(java.io.InputStream) -> createParser
    javax.xml.stream.XMLStreamReader createParser(javax.xml.transform.Source) -> createParser
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.StaxDriver$1 -> com.thoughtworks.xstream.io.xml.StaxDriver$1:
    java.io.InputStream val$stream -> val$stream
    com.thoughtworks.xstream.io.xml.StaxDriver this$0 -> this$0
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxDriver$2 -> com.thoughtworks.xstream.io.xml.StaxDriver$2:
    java.io.InputStream val$stream -> val$stream
    com.thoughtworks.xstream.io.xml.StaxDriver this$0 -> this$0
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxReader -> com.thoughtworks.xstream.io.xml.StaxReader:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLStreamReader in -> in
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxWriter -> com.thoughtworks.xstream.io.xml.StaxWriter:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLStreamWriter out -> out
    boolean writeEnclosingDocument -> writeEnclosingDocument
    boolean namespaceRepairingMode -> namespaceRepairingMode
    int tagDepth -> tagDepth
    void flush() -> flush
    void close() -> close
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void endNode() -> endNode
    void setValue(java.lang.String) -> setValue
    void startNode(java.lang.String) -> startNode
    boolean isNamespaceRepairingMode() -> isNamespaceRepairingMode
    com.thoughtworks.xstream.io.xml.QNameMap getQNameMap() -> getQNameMap
    javax.xml.stream.XMLStreamWriter getXMLStreamWriter() -> getXMLStreamWriter
com.thoughtworks.xstream.io.xml.TraxSource -> com.thoughtworks.xstream.io.xml.TraxSource:
    java.lang.String XSTREAM_FEATURE -> XSTREAM_FEATURE
    org.xml.sax.XMLReader xmlReader -> xmlReader
    com.thoughtworks.xstream.XStream xstream -> xstream
    java.util.List source -> source
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    void setXStream(com.thoughtworks.xstream.XStream) -> setXStream
    void setSource(java.lang.Object) -> setSource
    void setSourceAsList(java.util.List) -> setSourceAsList
    void createXMLReader(org.xml.sax.XMLReader) -> createXMLReader
    void configureXMLReader() -> configureXMLReader
com.thoughtworks.xstream.io.xml.WstxDriver -> com.thoughtworks.xstream.io.xml.WstxDriver:
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.XStream11NameCoder -> com.thoughtworks.xstream.io.xml.XStream11NameCoder:
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer -> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer:
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String unescapeName(java.lang.String) -> unescapeName
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:
    com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[] XML_NAME_START_CHAR_BOUNDS -> XML_NAME_START_CHAR_BOUNDS
    com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[] XML_NAME_CHAR_EXTRA_BOUNDS -> XML_NAME_CHAR_EXTRA_BOUNDS
    java.lang.String dollarReplacement -> dollarReplacement
    java.lang.String escapeCharReplacement -> escapeCharReplacement
    java.util.Map escapeCache -> escapeCache
    java.util.Map unescapeCache -> unescapeCache
    java.lang.String hexPrefix -> hexPrefix
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeName(java.lang.String) -> encodeName
    java.lang.String decodeName(java.lang.String) -> decodeName
    java.lang.Object clone() -> clone
    java.lang.Object readResolve() -> readResolve
    java.util.Map createCacheMap() -> createCacheMap
    boolean isXmlNameStartChar(int) -> isXmlNameStartChar
    boolean isXmlNameChar(int) -> isXmlNameChar
    boolean isInNameCharBounds(int,com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[]) -> isInNameCharBounds
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$1IntPairList -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$1IntPairList:
    void add(int,int) -> add
    void add(char) -> add
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair:
    int min -> min
    int max -> max
com.thoughtworks.xstream.io.xml.XmlFriendlyReader -> com.thoughtworks.xstream.io.xml.XmlFriendlyReader:
    java.lang.String unescapeXmlName(java.lang.String) -> unescapeXmlName
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer -> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer:
    java.lang.String escapeName(java.lang.String) -> escapeName
    java.lang.String unescapeName(java.lang.String) -> unescapeName
com.thoughtworks.xstream.io.xml.XmlFriendlyWriter -> com.thoughtworks.xstream.io.xml.XmlFriendlyWriter:
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.XomDriver -> com.thoughtworks.xstream.io.xml.XomDriver:
    nu.xom.Builder builder -> builder
    nu.xom.Builder getBuilder() -> getBuilder
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.XomReader -> com.thoughtworks.xstream.io.xml.XomReader:
    nu.xom.Element currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    int getChildCount() -> getChildCount
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.XomWriter -> com.thoughtworks.xstream.io.xml.XomWriter:
    java.lang.Object createNode(java.lang.String) -> createNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    nu.xom.Element top() -> top
com.thoughtworks.xstream.io.xml.Xpp3DomDriver -> com.thoughtworks.xstream.io.xml.Xpp3DomDriver:
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.Xpp3Driver -> com.thoughtworks.xstream.io.xml.Xpp3Driver:
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppDomDriver -> com.thoughtworks.xstream.io.xml.XppDomDriver:
    org.xmlpull.v1.XmlPullParserFactory factory -> factory
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppDomReader -> com.thoughtworks.xstream.io.xml.XppDomReader:
    com.thoughtworks.xstream.io.xml.xppdom.XppDom currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.String peekNextChild() -> peekNextChild
com.thoughtworks.xstream.io.xml.XppDomWriter -> com.thoughtworks.xstream.io.xml.XppDomWriter:
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getConfiguration() -> getConfiguration
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    com.thoughtworks.xstream.io.xml.xppdom.XppDom top() -> top
com.thoughtworks.xstream.io.xml.XppDriver -> com.thoughtworks.xstream.io.xml.XppDriver:
    org.xmlpull.v1.XmlPullParserFactory factory -> factory
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppReader -> com.thoughtworks.xstream.io.xml.XppReader:
    org.xmlpull.v1.XmlPullParser parser -> parser
    java.io.Reader reader -> reader
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom -> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom:
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder -> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder:
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader) -> build
com.thoughtworks.xstream.io.xml.xppdom.XppDom -> com.thoughtworks.xstream.io.xml.xppdom.XppDom:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.util.Map attributes -> attributes
    java.util.List childList -> childList
    java.util.Map childMap -> childMap
    com.thoughtworks.xstream.io.xml.xppdom.XppDom parent -> parent
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String[] getAttributeNames() -> getAttributeNames
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(int) -> getChild
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(java.lang.String) -> getChild
    void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom) -> addChild
    com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren() -> getChildren
    com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren(java.lang.String) -> getChildren
    int getChildCount() -> getChildCount
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getParent() -> getParent
    void setParent(com.thoughtworks.xstream.io.xml.xppdom.XppDom) -> setParent
    java.lang.Object readResolve() -> readResolve
    com.thoughtworks.xstream.io.xml.xppdom.XppDom build(org.xmlpull.v1.XmlPullParser) -> build
com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator -> com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:
    java.lang.ThreadLocal xpath -> xpath
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int) -> compareInternal
com.thoughtworks.xstream.io.xml.xppdom.XppFactory -> com.thoughtworks.xstream.io.xml.xppdom.XppFactory:
    org.xmlpull.v1.XmlPullParser createDefaultParser() -> createDefaultParser
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.lang.String) -> buildDom
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.Reader) -> buildDom
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.InputStream,java.lang.String) -> buildDom
com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper -> com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:
    java.util.Map aliasToName -> aliasToName
    java.util.Map nameToAlias -> nameToAlias
    void addAliasFor(java.lang.String,java.lang.String) -> addAliasFor
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper -> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper:
    char dollarReplacementInClass -> dollarReplacementInClass
    java.lang.String dollarReplacementInField -> dollarReplacementInField
    java.lang.String underscoreReplacementInField -> underscoreReplacementInField
    java.lang.String noPackagePrefix -> noPackagePrefix
    java.lang.String escapeClassName(java.lang.String) -> escapeClassName
    java.lang.String unescapeClassName(java.lang.String) -> unescapeClassName
    java.lang.String escapeFieldName(java.lang.String) -> escapeFieldName
    java.lang.String unescapeFieldName(java.lang.String) -> unescapeFieldName
    boolean stringFoundAt(java.lang.String,int,java.lang.String) -> stringFoundAt
com.thoughtworks.xstream.mapper.AnnotationConfiguration -> com.thoughtworks.xstream.mapper.AnnotationConfiguration:
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void processAnnotations(java.lang.Class[]) -> processAnnotations
com.thoughtworks.xstream.mapper.AnnotationMapper -> com.thoughtworks.xstream.mapper.AnnotationMapper:
    boolean locked -> locked
    java.lang.Object[] arguments -> arguments
    com.thoughtworks.xstream.converters.ConverterRegistry converterRegistry -> converterRegistry
    com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper -> classAliasingMapper
    com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper -> defaultImplementationsMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper implicitCollectionMapper -> implicitCollectionMapper
    com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper -> fieldAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    com.thoughtworks.xstream.mapper.LocalConversionMapper localConversionMapper -> localConversionMapper
    java.util.Map converterCache -> converterCache
    java.util.Set annotatedTypes -> annotatedTypes
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void processAnnotations(java.lang.Class[]) -> processAnnotations
    void processAnnotations(java.lang.Class) -> processAnnotations
    void processTypes(java.util.Set) -> processTypes
    void addParametrizedTypes(java.lang.reflect.Type,java.util.Set) -> addParametrizedTypes
    void processConverterAnnotations(java.lang.Class) -> processConverterAnnotations
    void processAliasAnnotation(java.lang.Class,java.util.Set) -> processAliasAnnotation
    void processAliasTypeAnnotation(java.lang.Class) -> processAliasTypeAnnotation
    void processImplicitCollectionAnnotation(java.lang.Class) -> processImplicitCollectionAnnotation
    void processFieldAliasAnnotation(java.lang.reflect.Field) -> processFieldAliasAnnotation
    void processAsAttributeAnnotation(java.lang.reflect.Field) -> processAsAttributeAnnotation
    void processImplicitAnnotation(java.lang.reflect.Field) -> processImplicitAnnotation
    void processOmitFieldAnnotation(java.lang.reflect.Field) -> processOmitFieldAnnotation
    void processLocalConverterAnnotation(java.lang.reflect.Field) -> processLocalConverterAnnotation
    com.thoughtworks.xstream.converters.Converter cacheConverter(com.thoughtworks.xstream.annotations.XStreamConverter,java.lang.Class) -> cacheConverter
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
    void setupMappers() -> setupMappers
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set access$100(com.thoughtworks.xstream.mapper.AnnotationMapper) -> access$100
com.thoughtworks.xstream.mapper.AnnotationMapper$1 -> com.thoughtworks.xstream.mapper.AnnotationMapper$1:
    java.util.Set val$types -> val$types
    java.util.Set val$processedTypes -> val$processedTypes
    com.thoughtworks.xstream.mapper.AnnotationMapper this$0 -> this$0
    boolean add(java.lang.reflect.Type) -> add
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.mapper.AnnotationMapper$UnprocessedTypesSet -> com.thoughtworks.xstream.mapper.AnnotationMapper$UnprocessedTypesSet:
    com.thoughtworks.xstream.mapper.AnnotationMapper this$0 -> this$0
    boolean add(java.lang.Class) -> add
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.mapper.ArrayMapper -> com.thoughtworks.xstream.mapper.ArrayMapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String arrayType(int,java.lang.Class) -> arrayType
    java.lang.String boxedTypeName(java.lang.Class) -> boxedTypeName
com.thoughtworks.xstream.mapper.AttributeAliasingMapper -> com.thoughtworks.xstream.mapper.AttributeAliasingMapper:
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
com.thoughtworks.xstream.mapper.AttributeMapper -> com.thoughtworks.xstream.mapper.AttributeMapper:
    java.util.Map fieldNameToTypeMap -> fieldNameToTypeMap
    java.util.Set typeSet -> typeSet
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    java.util.Set fieldToUseAsAttribute -> fieldToUseAsAttribute
    void setConverterLookup(com.thoughtworks.xstream.converters.ConverterLookup) -> setConverterLookup
    void addAttributeFor(java.lang.String,java.lang.Class) -> addAttributeFor
    void addAttributeFor(java.lang.Class) -> addAttributeFor
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class) -> getLocalConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class) -> shouldLookForSingleValueConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    void addAttributeFor(java.lang.reflect.Field) -> addAttributeFor
    void addAttributeFor(java.lang.Class,java.lang.String) -> addAttributeFor
com.thoughtworks.xstream.mapper.CGLIBMapper -> com.thoughtworks.xstream.mapper.CGLIBMapper:
    java.lang.String DEFAULT_NAMING_MARKER -> DEFAULT_NAMING_MARKER
    java.lang.String alias -> alias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.CGLIBMapper$Marker -> com.thoughtworks.xstream.mapper.CGLIBMapper$Marker:
com.thoughtworks.xstream.mapper.CachingMapper -> com.thoughtworks.xstream.mapper.CachingMapper:
    java.util.Map realClassCache -> realClassCache
    java.lang.Class realClass(java.lang.String) -> realClass
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.CannotResolveClassException -> com.thoughtworks.xstream.mapper.CannotResolveClassException:
com.thoughtworks.xstream.mapper.ClassAliasingMapper -> com.thoughtworks.xstream.mapper.ClassAliasingMapper:
    java.util.Map typeToName -> typeToName
    java.util.Map classToName -> classToName
    java.util.Map nameToType -> nameToType
    void addClassAlias(java.lang.String,java.lang.Class) -> addClassAlias
    void addClassAttributeAlias(java.lang.String,java.lang.Class) -> addClassAttributeAlias
    void addTypeAlias(java.lang.String,java.lang.Class) -> addTypeAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    boolean itemTypeAsAttribute(java.lang.Class) -> itemTypeAsAttribute
    boolean aliasIsAttribute(java.lang.String) -> aliasIsAttribute
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper -> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:
    java.util.Map typeToImpl -> typeToImpl
    java.util.Map implToType -> implToType
    void addDefaults() -> addDefaults
    void addDefaultImplementation(java.lang.Class,java.lang.Class) -> addDefaultImplementation
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.DefaultMapper -> com.thoughtworks.xstream.mapper.DefaultMapper:
    java.lang.String XSTREAM_PACKAGE_ROOT -> XSTREAM_PACKAGE_ROOT
    com.thoughtworks.xstream.core.ClassLoaderReference classLoaderReference -> classLoaderReference
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    java.lang.String lookupName(java.lang.Class) -> lookupName
    java.lang.Class lookupType(java.lang.String) -> lookupType
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.DynamicProxyMapper -> com.thoughtworks.xstream.mapper.DynamicProxyMapper:
    java.lang.String alias -> alias
    java.lang.String getAlias() -> getAlias
    void setAlias(java.lang.String) -> setAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy -> com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy:
com.thoughtworks.xstream.mapper.EnumMapper -> com.thoughtworks.xstream.mapper.EnumMapper:
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    java.util.Map enumConverterMap -> enumConverterMap
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class) -> getLocalConverter
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.FieldAliasingMapper -> com.thoughtworks.xstream.mapper.FieldAliasingMapper:
    java.util.Map fieldToAliasMap -> fieldToAliasMap
    java.util.Map aliasToFieldMap -> aliasToFieldMap
    java.util.Set fieldsToOmit -> fieldsToOmit
    java.util.Set unknownFieldsToIgnore -> unknownFieldsToIgnore
    void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String) -> addFieldAlias
    void addFieldsToIgnore(java.util.regex.Pattern) -> addFieldsToIgnore
    java.lang.Object key(java.lang.Class,java.lang.String) -> key
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map) -> getMember
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    void omitField(java.lang.Class,java.lang.String) -> omitField
com.thoughtworks.xstream.mapper.ImmutableTypesMapper -> com.thoughtworks.xstream.mapper.ImmutableTypesMapper:
    java.util.Set immutableTypes -> immutableTypes
    void addImmutableType(java.lang.Class) -> addImmutableType
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:
    java.util.Map classNameToMapper -> classNameToMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class) -> getMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class) -> getOrCreateMapper
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    void add(java.lang.Class,java.lang.String,java.lang.Class) -> add
    void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class) -> add
    void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String) -> add
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass access$000(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper,java.lang.Class) -> access$000
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:
    java.lang.Class definedIn -> definedIn
    java.util.Map namedItemTypeToDef -> namedItemTypeToDef
    java.util.Map itemFieldNameToDef -> itemFieldNameToDef
    java.util.Map fieldNameToDef -> fieldNameToDef
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper this$0 -> this$0
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl getImplicitCollectionDefByItemFieldName(java.lang.String) -> getImplicitCollectionDefByItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String) -> getImplicitCollectionDefForFieldName
    void add(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl) -> add
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl:
    java.lang.String fieldName -> fieldName
    java.lang.String itemFieldName -> itemFieldName
    java.lang.Class itemType -> itemType
    java.lang.String keyFieldName -> keyFieldName
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType createNamedItemType() -> createNamedItemType
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getItemFieldName() -> getItemFieldName
    java.lang.Class getItemType() -> getItemType
    java.lang.String getKeyFieldName() -> getKeyFieldName
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType:
    java.lang.Class itemType -> itemType
    java.lang.String itemFieldName -> itemFieldName
    boolean equals(java.lang.Object) -> equals
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    int hashCode() -> hashCode
com.thoughtworks.xstream.mapper.LocalConversionMapper -> com.thoughtworks.xstream.mapper.LocalConversionMapper:
    java.util.Map localConverters -> localConverters
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter) -> registerLocalConverter
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class) -> getLocalSingleValueConverter
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.Mapper -> com.thoughtworks.xstream.mapper.Mapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping -> com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping:
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getItemFieldName() -> getItemFieldName
    java.lang.Class getItemType() -> getItemType
    java.lang.String getKeyFieldName() -> getKeyFieldName
com.thoughtworks.xstream.mapper.Mapper$Null -> com.thoughtworks.xstream.mapper.Mapper$Null:
com.thoughtworks.xstream.mapper.MapperWrapper -> com.thoughtworks.xstream.mapper.MapperWrapper:
    com.thoughtworks.xstream.mapper.Mapper wrapped -> wrapped
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.OuterClassMapper -> com.thoughtworks.xstream.mapper.OuterClassMapper:
    java.lang.String alias -> alias
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
com.thoughtworks.xstream.mapper.PackageAliasingMapper -> com.thoughtworks.xstream.mapper.PackageAliasingMapper:
    java.util.Comparator REVERSE -> REVERSE
    java.util.Map packageToName -> packageToName
    java.util.Map nameToPackage -> nameToPackage
    void addPackageAlias(java.lang.String,java.lang.String) -> addPackageAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.thoughtworks.xstream.mapper.PackageAliasingMapper$1 -> com.thoughtworks.xstream.mapper.PackageAliasingMapper$1:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.mapper.SecurityMapper -> com.thoughtworks.xstream.mapper.SecurityMapper:
    java.util.List permissions -> permissions
    void addPermission(com.thoughtworks.xstream.security.TypePermission) -> addPermission
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper -> com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper -> com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper:
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String mapNameFromXML(java.lang.String) -> mapNameFromXML
com.thoughtworks.xstream.mapper.XmlFriendlyMapper -> com.thoughtworks.xstream.mapper.XmlFriendlyMapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String mapNameToXML(java.lang.String) -> mapNameToXML
    java.lang.String mapNameFromXML(java.lang.String) -> mapNameFromXML
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:
    java.io.FilenameFilter filter -> filter
    java.io.File baseDirectory -> baseDirectory
    java.lang.String encoding -> encoding
    com.thoughtworks.xstream.XStream xstream -> xstream
    com.thoughtworks.xstream.converters.ConverterLookup getConverterLookup() -> getConverterLookup
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
    boolean isValid(java.io.File,java.lang.String) -> isValid
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String getName(java.lang.Object) -> getName
    void writeFile(java.io.File,java.lang.Object) -> writeFile
    java.io.File getFile(java.lang.String) -> getFile
    java.lang.Object readFile(java.io.File) -> readFile
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.io.FilenameFilter access$000(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> access$000
    java.io.File access$100(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> access$100
    java.lang.Object access$500(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy,java.io.File) -> access$500
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$ValidFilenameFilter -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$ValidFilenameFilter:
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy this$0 -> this$0
    boolean accept(java.io.File,java.lang.String) -> accept
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator:
    java.io.File[] files -> files
    int position -> position
    java.io.File current -> current
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy this$0 -> this$0
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
    java.io.File access$202(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator,java.io.File) -> access$202
    java.io.File[] access$300(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$300
    int access$404(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$404
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1 -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:
    java.io.File file -> file
    java.lang.Object key -> key
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator this$1 -> this$1
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.persistence.FilePersistenceStrategy -> com.thoughtworks.xstream.persistence.FilePersistenceStrategy:
    java.lang.String illegalChars -> illegalChars
    boolean isValid(java.io.File,java.lang.String) -> isValid
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String getName(java.lang.Object) -> getName
    java.lang.String escape(java.lang.String) -> escape
com.thoughtworks.xstream.persistence.FileStreamStrategy -> com.thoughtworks.xstream.persistence.FileStreamStrategy:
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String getName(java.lang.Object) -> getName
    java.lang.String escape(java.lang.String) -> escape
com.thoughtworks.xstream.persistence.PersistenceStrategy -> com.thoughtworks.xstream.persistence.PersistenceStrategy:
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
com.thoughtworks.xstream.persistence.StreamStrategy -> com.thoughtworks.xstream.persistence.StreamStrategy:
com.thoughtworks.xstream.persistence.XmlArrayList -> com.thoughtworks.xstream.persistence.XmlArrayList:
    com.thoughtworks.xstream.persistence.XmlMap map -> map
    int size() -> size
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    void rangeCheck(int) -> rangeCheck
    java.lang.Object get(int) -> get
    java.lang.Object remove(int) -> remove
com.thoughtworks.xstream.persistence.XmlMap -> com.thoughtworks.xstream.persistence.XmlMap:
    com.thoughtworks.xstream.persistence.PersistenceStrategy persistenceStrategy -> persistenceStrategy
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set entrySet() -> entrySet
    com.thoughtworks.xstream.persistence.PersistenceStrategy access$000(com.thoughtworks.xstream.persistence.XmlMap) -> access$000
com.thoughtworks.xstream.persistence.XmlMap$XmlMapEntries -> com.thoughtworks.xstream.persistence.XmlMap$XmlMapEntries:
    com.thoughtworks.xstream.persistence.XmlMap this$0 -> this$0
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.thoughtworks.xstream.persistence.XmlSet -> com.thoughtworks.xstream.persistence.XmlSet:
    com.thoughtworks.xstream.persistence.XmlMap map -> map
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean add(java.lang.Object) -> add
    java.lang.Long findEmptyKey() -> findEmptyKey
com.thoughtworks.xstream.security.AnyTypePermission -> com.thoughtworks.xstream.security.AnyTypePermission:
    com.thoughtworks.xstream.security.TypePermission ANY -> ANY
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.security.ArrayTypePermission -> com.thoughtworks.xstream.security.ArrayTypePermission:
    com.thoughtworks.xstream.security.TypePermission ARRAYS -> ARRAYS
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.security.CGLIBProxyTypePermission -> com.thoughtworks.xstream.security.CGLIBProxyTypePermission:
    com.thoughtworks.xstream.security.TypePermission PROXIES -> PROXIES
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.security.ExplicitTypePermission -> com.thoughtworks.xstream.security.ExplicitTypePermission:
    java.util.Set names -> names
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.ExplicitTypePermission$1 -> com.thoughtworks.xstream.security.ExplicitTypePermission$1:
    java.lang.Class[] val$types -> val$types
    java.lang.String[] getNames() -> getNames
com.thoughtworks.xstream.security.ForbiddenClassException -> com.thoughtworks.xstream.security.ForbiddenClassException:
com.thoughtworks.xstream.security.InterfaceTypePermission -> com.thoughtworks.xstream.security.InterfaceTypePermission:
    com.thoughtworks.xstream.security.TypePermission INTERFACES -> INTERFACES
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.security.NoPermission -> com.thoughtworks.xstream.security.NoPermission:
    com.thoughtworks.xstream.security.TypePermission permission -> permission
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.NoTypePermission -> com.thoughtworks.xstream.security.NoTypePermission:
    com.thoughtworks.xstream.security.TypePermission NONE -> NONE
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.security.NullPermission -> com.thoughtworks.xstream.security.NullPermission:
    com.thoughtworks.xstream.security.TypePermission NULL -> NULL
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.PrimitiveTypePermission -> com.thoughtworks.xstream.security.PrimitiveTypePermission:
    com.thoughtworks.xstream.security.TypePermission PRIMITIVES -> PRIMITIVES
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.security.ProxyTypePermission -> com.thoughtworks.xstream.security.ProxyTypePermission:
    com.thoughtworks.xstream.security.TypePermission PROXIES -> PROXIES
    boolean allows(java.lang.Class) -> allows
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.security.RegExpTypePermission -> com.thoughtworks.xstream.security.RegExpTypePermission:
    java.util.regex.Pattern[] patterns -> patterns
    boolean allows(java.lang.Class) -> allows
    java.util.regex.Pattern[] getPatterns(java.lang.String[]) -> getPatterns
com.thoughtworks.xstream.security.TypeHierarchyPermission -> com.thoughtworks.xstream.security.TypeHierarchyPermission:
    java.lang.Class type -> type
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.TypePermission -> com.thoughtworks.xstream.security.TypePermission:
    boolean allows(java.lang.Class) -> allows
com.thoughtworks.xstream.security.WildcardTypePermission -> com.thoughtworks.xstream.security.WildcardTypePermission:
    java.lang.String[] getRegExpPatterns(java.lang.String[]) -> getRegExpPatterns
eu.inmite.android.lib.validations.exception.FormsValidationException -> eu.inmite.android.lib.validations.exception.FormsValidationException:
eu.inmite.android.lib.validations.exception.NoFieldAdapterException -> eu.inmite.android.lib.validations.exception.NoFieldAdapterException:
eu.inmite.android.lib.validations.form.FieldAdapterFactory -> eu.inmite.android.lib.validations.form.FieldAdapterFactory:
    eu.inmite.android.lib.validations.form.adapters.JoinedAdapter sJoinedAdapter -> sJoinedAdapter
    eu.inmite.android.lib.validations.form.adapters.TextViewAdapter sTextViewAdapter -> sTextViewAdapter
    eu.inmite.android.lib.validations.form.adapters.SpinnerAdapter sSpinnerViewAdapter -> sSpinnerViewAdapter
    java.util.Map sExternalAdapters -> sExternalAdapters
    void registerAdapter(java.lang.Class,java.lang.Class) -> registerAdapter
    eu.inmite.android.lib.validations.form.iface.IFieldAdapter getAdapterForField(android.view.View) -> getAdapterForField
    eu.inmite.android.lib.validations.form.iface.IFieldAdapter getAdapterForField(android.view.View,java.lang.annotation.Annotation) -> getAdapterForField
    void clear() -> clear
eu.inmite.android.lib.validations.form.FieldFinder -> eu.inmite.android.lib.validations.form.FieldFinder:
    java.util.WeakHashMap sCachedFieldsByTarget -> sCachedFieldsByTarget
    boolean clearCache() -> clearCache
    java.util.Map getFieldsForTarget(java.lang.Object) -> getFieldsForTarget
    java.util.Map findFieldsToValidate(java.lang.Object) -> findFieldsToValidate
eu.inmite.android.lib.validations.form.FieldFinder$1 -> eu.inmite.android.lib.validations.form.FieldFinder$1:
    int compare(eu.inmite.android.lib.validations.form.FormValidator$ValidationInfo,eu.inmite.android.lib.validations.form.FormValidator$ValidationInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
eu.inmite.android.lib.validations.form.FormValidator -> eu.inmite.android.lib.validations.form.FormValidator:
    java.util.Map sLiveValidations -> sLiveValidations
    void registerValidator(java.lang.Class) -> registerValidator
    void registerViewAdapter(java.lang.Class,java.lang.Class) -> registerViewAdapter
    void clearViewAdapters() -> clearViewAdapters
    void clear() -> clear
    boolean clearCaches() -> clearCaches
    void startLiveValidation(android.support.v4.app.Fragment,eu.inmite.android.lib.validations.form.iface.IValidationCallback) -> startLiveValidation
    void startLiveValidation(java.lang.Object,android.view.View,eu.inmite.android.lib.validations.form.iface.IValidationCallback) -> startLiveValidation
    boolean isLiveValidationRunning(java.lang.Object) -> isLiveValidationRunning
    boolean stopLiveValidation(java.lang.Object) -> stopLiveValidation
    boolean validate(android.app.Activity,eu.inmite.android.lib.validations.form.iface.IValidationCallback) -> validate
    boolean validate(android.support.v4.app.Fragment,eu.inmite.android.lib.validations.form.iface.IValidationCallback) -> validate
    boolean validate(android.content.Context,java.lang.Object,eu.inmite.android.lib.validations.form.iface.IValidationCallback) -> validate
    eu.inmite.android.lib.validations.form.FormValidator$ValidationFail performFieldValidations(android.content.Context,java.lang.Object,eu.inmite.android.lib.validations.form.FormValidator$FieldInfo,android.view.View) -> performFieldValidations
    boolean evaluateCondition(java.lang.Object,eu.inmite.android.lib.validations.form.annotations.Condition) -> evaluateCondition
    eu.inmite.android.lib.validations.form.FormValidator$ValidationFail access$0(android.content.Context,java.lang.Object,eu.inmite.android.lib.validations.form.FormValidator$FieldInfo,android.view.View) -> access$0
eu.inmite.android.lib.validations.form.FormValidator$1 -> eu.inmite.android.lib.validations.form.FormValidator$1:
    int compare(eu.inmite.android.lib.validations.form.FormValidator$ValidationFail,eu.inmite.android.lib.validations.form.FormValidator$ValidationFail) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
eu.inmite.android.lib.validations.form.FormValidator$FieldInfo -> eu.inmite.android.lib.validations.form.FormValidator$FieldInfo:
    eu.inmite.android.lib.validations.form.annotations.Condition condition -> condition
    java.util.List validationInfoList -> validationInfoList
    eu.inmite.android.lib.validations.form.annotations.Condition access$0(eu.inmite.android.lib.validations.form.FormValidator$FieldInfo) -> access$0
    java.util.List access$1(eu.inmite.android.lib.validations.form.FormValidator$FieldInfo) -> access$1
eu.inmite.android.lib.validations.form.FormValidator$ValidationFail -> eu.inmite.android.lib.validations.form.FormValidator$ValidationFail:
    android.view.View view -> view
    java.lang.String message -> message
    int order -> order
eu.inmite.android.lib.validations.form.FormValidator$ValidationInfo -> eu.inmite.android.lib.validations.form.FormValidator$ValidationInfo:
    java.lang.annotation.Annotation annotation -> annotation
    eu.inmite.android.lib.validations.form.iface.IValidator validator -> validator
    int order -> order
    java.lang.annotation.Annotation access$0(eu.inmite.android.lib.validations.form.FormValidator$ValidationInfo) -> access$0
    eu.inmite.android.lib.validations.form.iface.IValidator access$1(eu.inmite.android.lib.validations.form.FormValidator$ValidationInfo) -> access$1
eu.inmite.android.lib.validations.form.FormValidator$ViewGlobalFocusChangeListener -> eu.inmite.android.lib.validations.form.FormValidator$ViewGlobalFocusChangeListener:
    java.util.Map infoMap -> infoMap
    android.view.View formContainer -> formContainer
    java.lang.Object target -> target
    eu.inmite.android.lib.validations.form.iface.IValidationCallback callback -> callback
    android.view.View currentlyFocusedView -> currentlyFocusedView
    void onGlobalFocusChanged(android.view.View,android.view.View) -> onGlobalFocusChanged
    android.view.View access$0(eu.inmite.android.lib.validations.form.FormValidator$ViewGlobalFocusChangeListener) -> access$0
eu.inmite.android.lib.validations.form.Utils -> eu.inmite.android.lib.validations.form.Utils:
    java.text.DecimalFormat numberFormat -> numberFormat
    java.text.DecimalFormat getBigDecimalFormatter() -> getBigDecimalFormatter
    java.math.BigDecimal parseAmountWithDecimalFormatter(java.lang.String) -> parseAmountWithDecimalFormatter
    java.math.BigDecimal parseAmount(java.lang.String) -> parseAmount
eu.inmite.android.lib.validations.form.adapters.JoinedAdapter -> eu.inmite.android.lib.validations.form.adapters.JoinedAdapter:
    java.lang.String[] getFieldValue(java.lang.annotation.Annotation,java.lang.Object,android.view.View) -> getFieldValue
    java.lang.String valueFromView(android.view.View) -> valueFromView
    android.view.View[] findViewsInView(int[],android.view.View) -> findViewsInView
    java.lang.Object getFieldValue(java.lang.annotation.Annotation,java.lang.Object,android.view.View) -> getFieldValue
eu.inmite.android.lib.validations.form.adapters.SpinnerAdapter -> eu.inmite.android.lib.validations.form.adapters.SpinnerAdapter:
    java.lang.Object getFieldValue(java.lang.annotation.Annotation,java.lang.Object,android.widget.Spinner) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.annotation.Annotation,java.lang.Object,android.view.View) -> getFieldValue
eu.inmite.android.lib.validations.form.adapters.TextViewAdapter -> eu.inmite.android.lib.validations.form.adapters.TextViewAdapter:
    java.lang.String getFieldValue(java.lang.annotation.Annotation,java.lang.Object,android.widget.TextView) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.annotation.Annotation,java.lang.Object,android.view.View) -> getFieldValue
eu.inmite.android.lib.validations.form.annotations.AnnotationsHelper -> eu.inmite.android.lib.validations.form.annotations.AnnotationsHelper:
    java.lang.String VALUE_NAME -> VALUE_NAME
    java.lang.Object getAnnotationValue(java.lang.annotation.Annotation) -> getAnnotationValue
    java.lang.Object getAnnotationValueWithName(java.lang.annotation.Annotation,java.lang.String) -> getAnnotationValueWithName
eu.inmite.android.lib.validations.form.annotations.ComparingPolicy -> eu.inmite.android.lib.validations.form.annotations.ComparingPolicy:
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy INCLUSIVE -> INCLUSIVE
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy EXCLUSIVE -> EXCLUSIVE
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy[] ENUM$VALUES -> ENUM$VALUES
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy[] values() -> values
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy valueOf(java.lang.String) -> valueOf
eu.inmite.android.lib.validations.form.annotations.Condition -> eu.inmite.android.lib.validations.form.annotations.Condition:
    java.lang.Class value() -> value
    java.lang.Class validationAnnotation() -> validationAnnotation
    int viewId() -> viewId
eu.inmite.android.lib.validations.form.annotations.Custom -> eu.inmite.android.lib.validations.form.annotations.Custom:
    java.lang.Class value() -> value
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.DateInFuture -> eu.inmite.android.lib.validations.form.annotations.DateInFuture:
    java.lang.String datePattern() -> datePattern
    int dateStyle() -> dateStyle
    int messageId() -> messageId
    int order() -> order
    boolean allowToday() -> allowToday
eu.inmite.android.lib.validations.form.annotations.DateNoWeekend -> eu.inmite.android.lib.validations.form.annotations.DateNoWeekend:
    java.lang.String datePattern() -> datePattern
    int dateStyle() -> dateStyle
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.Joined -> eu.inmite.android.lib.validations.form.annotations.Joined:
    int[] value() -> value
    java.lang.Class validator() -> validator
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.Length -> eu.inmite.android.lib.validations.form.annotations.Length:
    int value() -> value
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.MaxLength -> eu.inmite.android.lib.validations.form.annotations.MaxLength:
    int value() -> value
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy policy() -> policy
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.MaxNumberValue -> eu.inmite.android.lib.validations.form.annotations.MaxNumberValue:
    java.lang.String value() -> value
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy policy() -> policy
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.MaxValue -> eu.inmite.android.lib.validations.form.annotations.MaxValue:
    long value() -> value
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy policy() -> policy
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.MinLength -> eu.inmite.android.lib.validations.form.annotations.MinLength:
    int value() -> value
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy policy() -> policy
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.MinNumberValue -> eu.inmite.android.lib.validations.form.annotations.MinNumberValue:
    java.lang.String value() -> value
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy policy() -> policy
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.MinValue -> eu.inmite.android.lib.validations.form.annotations.MinValue:
    long value() -> value
    eu.inmite.android.lib.validations.form.annotations.ComparingPolicy policy() -> policy
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.NotEmpty -> eu.inmite.android.lib.validations.form.annotations.NotEmpty:
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.RegExp -> eu.inmite.android.lib.validations.form.annotations.RegExp:
    java.lang.String EMAIL -> EMAIL
    java.lang.String value() -> value
    int messageId() -> messageId
    int order() -> order
eu.inmite.android.lib.validations.form.annotations.ValidatorFor -> eu.inmite.android.lib.validations.form.annotations.ValidatorFor:
    java.lang.Class[] value() -> value
eu.inmite.android.lib.validations.form.callback.SimpleCallback -> eu.inmite.android.lib.validations.form.callback.SimpleCallback:
    android.content.Context mContext -> mContext
    boolean mFocusFirstFail -> mFocusFirstFail
    void validationComplete(boolean,java.util.List) -> validationComplete
    void showValidationMessage(eu.inmite.android.lib.validations.form.FormValidator$ValidationFail) -> showValidationMessage
eu.inmite.android.lib.validations.form.callback.SimpleErrorPopupCallback -> eu.inmite.android.lib.validations.form.callback.SimpleErrorPopupCallback:
    android.graphics.drawable.Drawable mErrorIcon -> mErrorIcon
    void showValidationMessage(eu.inmite.android.lib.validations.form.FormValidator$ValidationFail) -> showValidationMessage
eu.inmite.android.lib.validations.form.callback.SimpleToastCallback -> eu.inmite.android.lib.validations.form.callback.SimpleToastCallback:
    void showValidationMessage(eu.inmite.android.lib.validations.form.FormValidator$ValidationFail) -> showValidationMessage
eu.inmite.android.lib.validations.form.iface.ICondition -> eu.inmite.android.lib.validations.form.iface.ICondition:
    boolean evaluate(java.lang.Object) -> evaluate
eu.inmite.android.lib.validations.form.iface.IFieldAdapter -> eu.inmite.android.lib.validations.form.iface.IFieldAdapter:
    java.lang.Object getFieldValue(java.lang.annotation.Annotation,java.lang.Object,android.view.View) -> getFieldValue
eu.inmite.android.lib.validations.form.iface.IValidationCallback -> eu.inmite.android.lib.validations.form.iface.IValidationCallback:
    void validationComplete(boolean,java.util.List) -> validationComplete
eu.inmite.android.lib.validations.form.iface.IValidator -> eu.inmite.android.lib.validations.form.iface.IValidator:
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.Object) -> getMessage
    int getOrder(java.lang.annotation.Annotation) -> getOrder
eu.inmite.android.lib.validations.form.validators.BaseDateValidator -> eu.inmite.android.lib.validations.form.validators.BaseDateValidator:
    java.text.DateFormat getDateFormat(java.lang.annotation.Annotation) -> getDateFormat
    boolean validateDate(java.util.Calendar,java.lang.annotation.Annotation) -> validateDate
    boolean validate(java.lang.annotation.Annotation,java.lang.String) -> validate
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.String) -> getMessage
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.Object) -> getMessage
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
eu.inmite.android.lib.validations.form.validators.BaseValidator -> eu.inmite.android.lib.validations.form.validators.BaseValidator:
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.Object) -> getMessage
    int getOrder(java.lang.annotation.Annotation) -> getOrder
eu.inmite.android.lib.validations.form.validators.CustomValidator -> eu.inmite.android.lib.validations.form.validators.CustomValidator:
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.Object) -> getMessage
eu.inmite.android.lib.validations.form.validators.CzechBankAccountNumberValidator -> eu.inmite.android.lib.validations.form.validators.CzechBankAccountNumberValidator:
    int[] PREFIX_WEIGHTS -> PREFIX_WEIGHTS
    int[] NUMBER_WEIGHTS -> NUMBER_WEIGHTS
    boolean validate(java.lang.annotation.Annotation,java.lang.String[]) -> validate
    boolean isModulo11(java.lang.String,int[]) -> isModulo11
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.String[]) -> getMessage
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.Object) -> getMessage
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
eu.inmite.android.lib.validations.form.validators.FutureDateValidator -> eu.inmite.android.lib.validations.form.validators.FutureDateValidator:
    java.text.DateFormat getDateFormat(java.lang.annotation.Annotation) -> getDateFormat
    boolean validateDate(java.util.Calendar,java.lang.annotation.Annotation) -> validateDate
eu.inmite.android.lib.validations.form.validators.LengthValidator -> eu.inmite.android.lib.validations.form.validators.LengthValidator:
    boolean validate(java.lang.annotation.Annotation,java.lang.CharSequence) -> validate
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
eu.inmite.android.lib.validations.form.validators.NotEmptyValidator -> eu.inmite.android.lib.validations.form.validators.NotEmptyValidator:
    boolean validate(java.lang.annotation.Annotation,java.lang.CharSequence) -> validate
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.CharSequence) -> getMessage
    java.lang.String getMessage(android.content.Context,java.lang.annotation.Annotation,java.lang.Object) -> getMessage
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
eu.inmite.android.lib.validations.form.validators.NumberValueValidator -> eu.inmite.android.lib.validations.form.validators.NumberValueValidator:
    boolean validate(java.lang.annotation.Annotation,java.lang.CharSequence) -> validate
    boolean validateMinimum(eu.inmite.android.lib.validations.form.annotations.MinNumberValue,java.math.BigDecimal) -> validateMinimum
    boolean validateMaximum(eu.inmite.android.lib.validations.form.annotations.MaxNumberValue,java.math.BigDecimal) -> validateMaximum
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
eu.inmite.android.lib.validations.form.validators.RegExpValidator -> eu.inmite.android.lib.validations.form.validators.RegExpValidator:
    java.util.regex.Pattern mCompiledPattern -> mCompiledPattern
    boolean validate(java.lang.annotation.Annotation,java.lang.CharSequence) -> validate
    boolean validate(java.lang.CharSequence,java.util.regex.Pattern) -> validate
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
eu.inmite.android.lib.validations.form.validators.ValidatorFactory -> eu.inmite.android.lib.validations.form.validators.ValidatorFactory:
    int INSTANCE_CACHE_SIZE -> INSTANCE_CACHE_SIZE
    android.support.v4.util.LruCache sCachedValidatorInstances -> sCachedValidatorInstances
    java.util.Map sValidators -> sValidators
    void registerValidatorClasses(java.lang.Class[]) -> registerValidatorClasses
    eu.inmite.android.lib.validations.form.iface.IValidator getValidator(java.lang.annotation.Annotation) -> getValidator
    void clearCachedValidators() -> clearCachedValidators
eu.inmite.android.lib.validations.form.validators.ValueValidator -> eu.inmite.android.lib.validations.form.validators.ValueValidator:
    boolean validate(java.lang.annotation.Annotation,java.lang.CharSequence) -> validate
    boolean validate(java.lang.annotation.Annotation,java.lang.Object) -> validate
eu.inmite.android.lib.validations.form.validators.WeekendDateValidator -> eu.inmite.android.lib.validations.form.validators.WeekendDateValidator:
    java.text.DateFormat getDateFormat(java.lang.annotation.Annotation) -> getDateFormat
    boolean validateDate(java.util.Calendar,java.lang.annotation.Annotation) -> validateDate
javax.annotation.CheckForNull -> javax.annotation.CheckForNull:
javax.annotation.CheckForSigned -> javax.annotation.CheckForSigned:
javax.annotation.CheckReturnValue -> javax.annotation.CheckReturnValue:
    javax.annotation.meta.When when() -> when
javax.annotation.Detainted -> javax.annotation.Detainted:
javax.annotation.MatchesPattern -> javax.annotation.MatchesPattern:
    java.lang.String value() -> value
    int flags() -> flags
javax.annotation.MatchesPattern$Checker -> javax.annotation.MatchesPattern$Checker:
    javax.annotation.meta.When forConstantValue(javax.annotation.MatchesPattern,java.lang.Object) -> forConstantValue
    javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation,java.lang.Object) -> forConstantValue
javax.annotation.Nonnegative -> javax.annotation.Nonnegative:
    javax.annotation.meta.When when() -> when
javax.annotation.Nonnegative$Checker -> javax.annotation.Nonnegative$Checker:
    javax.annotation.meta.When forConstantValue(javax.annotation.Nonnegative,java.lang.Object) -> forConstantValue
    javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation,java.lang.Object) -> forConstantValue
javax.annotation.Nonnull -> javax.annotation.Nonnull:
    javax.annotation.meta.When when() -> when
javax.annotation.Nonnull$Checker -> javax.annotation.Nonnull$Checker:
    javax.annotation.meta.When forConstantValue(javax.annotation.Nonnull,java.lang.Object) -> forConstantValue
    javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation,java.lang.Object) -> forConstantValue
javax.annotation.Nullable -> javax.annotation.Nullable:
javax.annotation.OverridingMethodsMustInvokeSuper -> javax.annotation.OverridingMethodsMustInvokeSuper:
javax.annotation.ParametersAreNonnullByDefault -> javax.annotation.ParametersAreNonnullByDefault:
javax.annotation.ParametersAreNullableByDefault -> javax.annotation.ParametersAreNullableByDefault:
javax.annotation.PropertyKey -> javax.annotation.PropertyKey:
    javax.annotation.meta.When when() -> when
javax.annotation.RegEx -> javax.annotation.RegEx:
    javax.annotation.meta.When when() -> when
javax.annotation.RegEx$Checker -> javax.annotation.RegEx$Checker:
    javax.annotation.meta.When forConstantValue(javax.annotation.RegEx,java.lang.Object) -> forConstantValue
    javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation,java.lang.Object) -> forConstantValue
javax.annotation.Signed -> javax.annotation.Signed:
javax.annotation.Syntax -> javax.annotation.Syntax:
    java.lang.String value() -> value
    javax.annotation.meta.When when() -> when
javax.annotation.Tainted -> javax.annotation.Tainted:
javax.annotation.Untainted -> javax.annotation.Untainted:
    javax.annotation.meta.When when() -> when
javax.annotation.WillClose -> javax.annotation.WillClose:
javax.annotation.WillCloseWhenClosed -> javax.annotation.WillCloseWhenClosed:
javax.annotation.WillNotClose -> javax.annotation.WillNotClose:
javax.annotation.concurrent.GuardedBy -> javax.annotation.concurrent.GuardedBy:
    java.lang.String value() -> value
javax.annotation.concurrent.Immutable -> javax.annotation.concurrent.Immutable:
javax.annotation.concurrent.NotThreadSafe -> javax.annotation.concurrent.NotThreadSafe:
javax.annotation.concurrent.ThreadSafe -> javax.annotation.concurrent.ThreadSafe:
javax.annotation.meta.Exclusive -> javax.annotation.meta.Exclusive:
javax.annotation.meta.Exhaustive -> javax.annotation.meta.Exhaustive:
javax.annotation.meta.TypeQualifier -> javax.annotation.meta.TypeQualifier:
    java.lang.Class applicableTo() -> applicableTo
javax.annotation.meta.TypeQualifierDefault -> javax.annotation.meta.TypeQualifierDefault:
    java.lang.annotation.ElementType[] value() -> value
javax.annotation.meta.TypeQualifierNickname -> javax.annotation.meta.TypeQualifierNickname:
javax.annotation.meta.TypeQualifierValidator -> javax.annotation.meta.TypeQualifierValidator:
    javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation,java.lang.Object) -> forConstantValue
javax.annotation.meta.When -> javax.annotation.meta.When:
    javax.annotation.meta.When ALWAYS -> ALWAYS
    javax.annotation.meta.When UNKNOWN -> UNKNOWN
    javax.annotation.meta.When MAYBE -> MAYBE
    javax.annotation.meta.When NEVER -> NEVER
    javax.annotation.meta.When[] $VALUES -> $VALUES
    javax.annotation.meta.When[] values() -> values
    javax.annotation.meta.When valueOf(java.lang.String) -> valueOf
javax.inject.Inject -> javax.inject.Inject:
javax.inject.Named -> javax.inject.Named:
    java.lang.String value() -> value
javax.inject.Provider -> javax.inject.Provider:
    java.lang.Object get() -> get
javax.inject.Qualifier -> javax.inject.Qualifier:
javax.inject.Scope -> javax.inject.Scope:
javax.inject.Singleton -> javax.inject.Singleton:
m.framework.network.ByteArrayPart -> m.framework.network.ByteArrayPart:
    byte[] buffer -> buffer
    m.framework.network.ByteArrayPart append(byte[]) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.FilePart -> m.framework.network.FilePart:
    java.io.File file -> file
    void setFile(java.io.File) -> setFile
    void setFile(java.lang.String) -> setFile
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.HTTPPart -> m.framework.network.HTTPPart:
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    org.apache.http.entity.InputStreamEntity getInputStreamEntity() -> getInputStreamEntity
m.framework.network.KVPair -> m.framework.network.KVPair:
    java.lang.String name -> name
    java.lang.Object value -> value
    java.lang.String toString() -> toString
m.framework.network.MultiPart -> m.framework.network.MultiPart:
    java.util.ArrayList parts -> parts
    m.framework.network.MultiPart append(m.framework.network.HTTPPart) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.MultiPartInputStream -> m.framework.network.MultiPartInputStream:
    java.util.ArrayList isList -> isList
    int curIs -> curIs
    void addInputStream(java.io.InputStream) -> addInputStream
    boolean isEmpty() -> isEmpty
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
m.framework.network.NetworkHelper -> m.framework.network.NetworkHelper:
    int connectionTimeout -> connectionTimeout
    int readTimout -> readTimout
    java.lang.String httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> httpGet
    void httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList,m.framework.network.ResponseCallback) -> httpGet
    void download(java.lang.String,java.io.File) -> download
    void download(java.lang.String,m.framework.network.ResponseCallback) -> download
    java.lang.String httpPost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList) -> httpPost
    void httpPost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList,m.framework.network.ResponseCallback) -> httpPost
    org.apache.http.client.methods.HttpPost filePost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair) -> filePost
    org.apache.http.client.methods.HttpPost textPost(java.lang.String,java.util.ArrayList) -> textPost
    void rawPost(java.lang.String,java.util.ArrayList,m.framework.network.HTTPPart,m.framework.network.ResponseCallback) -> rawPost
    java.lang.String httpPut(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList) -> httpPut
    java.lang.String kvPairsToUrl(java.util.ArrayList) -> kvPairsToUrl
    org.apache.http.client.HttpClient getSSLHttpClient() -> getSSLHttpClient
m.framework.network.ResponseCallback -> m.framework.network.ResponseCallback:
    void onResponse(java.io.InputStream) -> onResponse
m.framework.network.SSLSocketFactoryEx -> m.framework.network.SSLSocketFactoryEx:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
m.framework.network.SSLSocketFactoryEx$1 -> m.framework.network.SSLSocketFactoryEx$1:
    m.framework.network.SSLSocketFactoryEx this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
m.framework.network.StringPart -> m.framework.network.StringPart:
    java.lang.StringBuilder sb -> sb
    m.framework.network.StringPart append(java.lang.String) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.ui.widget.asyncview.AsyncImageView -> m.framework.ui.widget.asyncview.AsyncImageView:
    int DEFAULT_TRANSPARENT -> DEFAULT_TRANSPARENT
    android.graphics.Bitmap DEFAULT_TRANSPARENT_BITMAP -> DEFAULT_TRANSPARENT_BITMAP
    int MSG_IMG_GOT -> MSG_IMG_GOT
    java.util.Random rnd -> rnd
    java.lang.String cacheDir -> cacheDir
    java.lang.String url -> url
    int defaultRes -> defaultRes
    m.framework.ui.widget.asyncview.OnImageGotListener onImageGotListener -> onImageGotListener
    void init(android.content.Context) -> init
    void setOnImageGotListener(m.framework.ui.widget.asyncview.OnImageGotListener) -> setOnImageGotListener
    java.lang.String getUrl() -> getUrl
    void execute(java.lang.String) -> execute
    void execute(java.lang.String,int) -> execute
    android.graphics.Bitmap getDefaultBitmap(int) -> getDefaultBitmap
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.ui.widget.asyncview.AsyncView -> m.framework.ui.widget.asyncview.AsyncView:
    void execute(java.lang.String,int) -> execute
    java.lang.String getUrl() -> getUrl
m.framework.ui.widget.asyncview.BitmapCallback -> m.framework.ui.widget.asyncview.BitmapCallback:
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
m.framework.ui.widget.asyncview.BitmapProcessor -> m.framework.ui.widget.asyncview.BitmapProcessor:
    int CAPACITY -> CAPACITY
    int MAX_REQ_TIME -> MAX_REQ_TIME
    int MAX_SIZE -> MAX_SIZE
    int OVERFLOW_SIZE -> OVERFLOW_SIZE
    m.framework.ui.widget.asyncview.BitmapProcessor instance -> instance
    java.util.WeakHashMap cacheMap -> cacheMap
    boolean work -> work
    java.util.Vector reqList -> reqList
    java.io.File cacheDir -> cacheDir
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] workerList -> workerList
    java.util.Vector netReqTPS -> netReqTPS
    void prepare(java.lang.String) -> prepare
    void start() -> start
    void stop() -> stop
    void process(java.lang.String,m.framework.ui.widget.asyncview.BitmapCallback) -> process
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    boolean access$0(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$0
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] access$1(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$1
    java.util.Vector access$2(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$2
    java.util.WeakHashMap access$3(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$3
    java.io.File access$4(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$4
    java.util.Vector access$5(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$5
m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq -> m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq:
    java.lang.String url -> url
    m.framework.ui.widget.asyncview.BitmapCallback callback -> callback
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread worker -> worker
    long reqTime -> reqTime
    android.graphics.Bitmap image -> image
    void throwComplete(android.graphics.Bitmap) -> throwComplete
    java.lang.String toString() -> toString
    java.lang.String access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> access$0
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$1
    void access$2(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,android.graphics.Bitmap) -> access$2
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,java.lang.String) -> access$3
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapCallback) -> access$4
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread -> m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> processor
    void scan() -> scan
    m.framework.ui.widget.asyncview.BitmapProcessor access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> access$0
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> access$1
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1 -> m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1:
    int counter -> counter
    m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread this$1 -> this$1
    void run() -> run
m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream -> m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream:
    java.io.InputStream in -> in
    long skip(long) -> skip
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread -> m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> processor
    long lastReport -> lastReport
    boolean localType -> localType
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq curReq -> curReq
    void run() -> run
    void doLocalTask() -> doLocalTask
    void doNetworkTask() -> doNetworkTask
    void doTask(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> doTask
    void saveFile(android.graphics.Bitmap,java.io.File) -> saveFile
    void interrupt() -> interrupt
    void access$0(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,boolean) -> access$0
    long access$1(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$1
    boolean access$2(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$2
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> access$3
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,android.graphics.Bitmap,java.io.File) -> access$4
    m.framework.ui.widget.asyncview.BitmapProcessor access$5(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$5
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1 -> m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1:
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread this$1 -> this$1
    java.io.File val$file -> val$file
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq val$req -> val$req
    void onResponse(java.io.InputStream) -> onResponse
m.framework.ui.widget.asyncview.OnImageGotListener -> m.framework.ui.widget.asyncview.OnImageGotListener:
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> onImageGot
m.framework.ui.widget.asyncview.SimpleOnImageGotListener -> m.framework.ui.widget.asyncview.SimpleOnImageGotListener:
    m.framework.ui.widget.asyncview.SimpleOnImageGotListener INSTANCE -> INSTANCE
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> onImageGot
m.framework.ui.widget.pulltorefresh.GroupListView -> m.framework.ui.widget.pulltorefresh.GroupListView:
    void setAdapter(m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter) -> setAdapter
m.framework.ui.widget.pulltorefresh.GroupListView$1 -> m.framework.ui.widget.pulltorefresh.GroupListView$1:
    m.framework.ui.widget.pulltorefresh.GroupListView this$0 -> this$0
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter val$adapter -> val$adapter
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int[] getItemIndex(int) -> getItemIndex
    int getCount() -> getCount
m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter -> m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter:
    android.widget.BaseAdapter adapter -> adapter
    void setInnerAdapter(android.widget.BaseAdapter) -> setInnerAdapter
    int getGroupCount() -> getGroupCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter,android.widget.BaseAdapter) -> access$0
m.framework.ui.widget.pulltorefresh.GroupListView$ItemHolder -> m.framework.ui.widget.pulltorefresh.GroupListView$ItemHolder:
    android.widget.LinearLayout llItem -> llItem
    android.view.View title -> title
    android.view.View child -> child
m.framework.ui.widget.pulltorefresh.ListInnerAdapter -> m.framework.ui.widget.pulltorefresh.ListInnerAdapter:
    m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter adapter -> adapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
m.framework.ui.widget.pulltorefresh.OnListStopScrollListener -> m.framework.ui.widget.pulltorefresh.OnListStopScrollListener:
    void onListStopScrolling(int,int) -> onListStopScrolling
m.framework.ui.widget.pulltorefresh.OnScrollListener -> m.framework.ui.widget.pulltorefresh.OnScrollListener:
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper -> m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper:
    android.content.Context context -> context
    m.framework.ui.widget.pulltorefresh.PullToRefreshView parent -> parent
    android.content.Context getContext() -> getContext
    m.framework.ui.widget.pulltorefresh.PullToRefreshView getParent() -> getParent
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getHeaderView() -> getHeaderView
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onReversed() -> onReversed
m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableGridView gridView -> gridView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.GridView getGridView() -> getGridView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableGridView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView listView -> listView
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    int getGroupCount() -> getGroupCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    m.framework.ui.widget.pulltorefresh.GroupListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$2 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$2:
    m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter this$0 -> this$0
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.Object getChild(int,int) -> getChild
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableListView listView -> listView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.ListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshView -> m.framework.ui.widget.pulltorefresh.PullToRefreshView:
    long MIN_REF_TIME -> MIN_REF_TIME
    m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper adapter -> adapter
    android.view.View headerView -> headerView
    android.view.View bodyView -> bodyView
    int headerHeight -> headerHeight
    int top -> top
    float downY -> downY
    boolean requesting -> requesting
    boolean pullingLock -> pullingLock
    java.lang.Runnable stopAct -> stopAct
    long refreshTime -> refreshTime
    void init() -> init
    void setAdapter(m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper) -> setAdapter
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.MotionEvent getCancelEvent(android.view.MotionEvent) -> getCancelEvent
    void performRequest() -> performRequest
    void stopRequest() -> stopRequest
    void performPulling(boolean) -> performPulling
    void reversePulling() -> reversePulling
    void stopPulling() -> stopPulling
    void lockPulling() -> lockPulling
    void releaseLock() -> releaseLock
    boolean canPull() -> canPull
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> access$0
    void access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> access$1
m.framework.ui.widget.pulltorefresh.PullToRefreshView$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshView$1:
    m.framework.ui.widget.pulltorefresh.PullToRefreshView this$0 -> this$0
    void run() -> run
m.framework.ui.widget.pulltorefresh.Scrollable -> m.framework.ui.widget.pulltorefresh.Scrollable:
m.framework.ui.widget.pulltorefresh.ScrollableGridView -> m.framework.ui.widget.pulltorefresh.ScrollableGridView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean isReadyToPull() -> isReadyToPull
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableGridView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableGridView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableGridView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableGridView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.ScrollableGroupListView -> m.framework.ui.widget.pulltorefresh.ScrollableGroupListView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableGroupListView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableGroupListView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableGroupListView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.ScrollableListView -> m.framework.ui.widget.pulltorefresh.ScrollableListView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableListView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableListView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableListView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableListView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.slidingmenu.BodyContainer -> m.framework.ui.widget.slidingmenu.BodyContainer:
    int MIN_FLING_VEL -> MIN_FLING_VEL
    int MENU_COVER_ALPHA -> MENU_COVER_ALPHA
    float downX -> downX
    m.framework.ui.widget.slidingmenu.SlidingMenu menu -> menu
    int maxVelocity -> maxVelocity
    android.view.VelocityTracker tracker -> tracker
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onScrollChanged(int,int,int,int) -> onScrollChanged
m.framework.ui.widget.slidingmenu.MenuAdapter -> m.framework.ui.widget.slidingmenu.MenuAdapter:
    java.util.ArrayList menus -> menus
    m.framework.ui.widget.slidingmenu.SlidingMenuGroup findGroupById(int) -> findGroupById
    void setGroup(int,java.lang.String) -> setGroup
    void setGroup(m.framework.ui.widget.slidingmenu.SlidingMenuGroup) -> setGroup
    void setItem(int,m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> setItem
    android.view.View getMenuTitle() -> getMenuTitle
    int getGroupCount() -> getGroupCount
    m.framework.ui.widget.slidingmenu.SlidingMenuGroup getGroup(int) -> getGroup
    java.lang.String getTitle(int) -> getTitle
    android.view.View getGroupView(int,android.view.ViewGroup) -> getGroupView
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getItem(int,int) -> getItem
    android.view.View getItemView(m.framework.ui.widget.slidingmenu.SlidingMenuItem,android.view.ViewGroup) -> getItemView
    void notifyDataSetChanged(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> notifyDataSetChanged
    boolean onItemTrigger(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> onItemTrigger
    void onMenuSwitch(boolean) -> onMenuSwitch
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getMenuItem(int,int) -> getMenuItem
m.framework.ui.widget.slidingmenu.MenuConfig -> m.framework.ui.widget.slidingmenu.MenuConfig:
    int itemDownBack -> itemDownBack
    int itemDownRelease -> itemDownRelease
    float menuWeight -> menuWeight
    int menuBackground -> menuBackground
    int paddingLeft -> paddingLeft
    int paddingTop -> paddingTop
    int paddingRight -> paddingRight
    int paddingBottom -> paddingBottom
    int titleHeight -> titleHeight
    int bodyBackground -> bodyBackground
    int rightShadow -> rightShadow
    int menuSep -> menuSep
m.framework.ui.widget.slidingmenu.SlidingMenu -> m.framework.ui.widget.slidingmenu.SlidingMenu:
    m.framework.ui.widget.slidingmenu.MenuConfig config -> config
    java.util.HashMap itemToView -> itemToView
    android.view.View$OnClickListener ocListener -> ocListener
    android.view.View$OnTouchListener otListener -> otListener
    m.framework.ui.widget.slidingmenu.MenuAdapter adapter -> adapter
    int screenWidth -> screenWidth
    int menuWidth -> menuWidth
    int showMenuWidth -> showMenuWidth
    boolean menuShown -> menuShown
    android.widget.FrameLayout flMenu -> flMenu
    android.widget.LinearLayout llMenu -> llMenu
    android.view.View vCover -> vCover
    m.framework.ui.widget.slidingmenu.BodyContainer svBody -> svBody
    android.widget.LinearLayout llBody -> llBody
    android.view.View curBody -> curBody
    void init(android.content.Context) -> init
    void initMenu(android.content.Context) -> initMenu
    void initBody(android.content.Context) -> initBody
    void setAdapter(m.framework.ui.widget.slidingmenu.MenuAdapter) -> setAdapter
    void refresh() -> refresh
    void reInit(android.content.Context) -> reInit
    void reInitMenu(android.content.Context) -> reInitMenu
    void reInitBody(android.content.Context) -> reInitBody
    void setBodyView(android.view.View) -> setBodyView
    android.view.View getBodyView() -> getBodyView
    void invalidateMenu() -> invalidateMenu
    android.view.View getSepView(android.content.Context) -> getSepView
    void switchMenu() -> switchMenu
    void showMenu() -> showMenu
    void hideMenu() -> hideMenu
    boolean isMenuShown() -> isMenuShown
    int getMenuWidth() -> getMenuWidth
    int getShowMenuWidth() -> getShowMenuWidth
    m.framework.ui.widget.slidingmenu.MenuConfig getMenuConfig() -> getMenuConfig
    android.view.View getMenuCover() -> getMenuCover
    void setMenuItemBackground(int,int) -> setMenuItemBackground
    void setMenuWeight(float) -> setMenuWeight
    void setMenuBackground(int) -> setMenuBackground
    void setMenuPadding(int,int,int,int) -> setMenuPadding
    void setTtleHeight(int) -> setTtleHeight
    void setShadowRes(int) -> setShadowRes
    void setBodyBackground(int) -> setBodyBackground
    void setMenuDivider(int) -> setMenuDivider
    void disableOverScrollMode(android.view.View) -> disableOverScrollMode
    android.view.View itemToView(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> itemToView
    void triggerItem(int,int) -> triggerItem
    void triggerItem(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> triggerItem
    m.framework.ui.widget.slidingmenu.MenuAdapter access$0(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$0
    m.framework.ui.widget.slidingmenu.MenuConfig access$1(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$1
    boolean access$2(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$2
    m.framework.ui.widget.slidingmenu.BodyContainer access$3(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$3
    int access$4(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$4
m.framework.ui.widget.slidingmenu.SlidingMenu$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onClick(android.view.View) -> onClick
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$1) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$1$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$1$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$1 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenu$2 -> m.framework.ui.widget.slidingmenu.SlidingMenu$2:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
m.framework.ui.widget.slidingmenu.SlidingMenu$3 -> m.framework.ui.widget.slidingmenu.SlidingMenu$3:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$3) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$3$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$3$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$3 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenu$4 -> m.framework.ui.widget.slidingmenu.SlidingMenu$4:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
m.framework.ui.widget.slidingmenu.SlidingMenu$5 -> m.framework.ui.widget.slidingmenu.SlidingMenu$5:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
m.framework.ui.widget.slidingmenu.SlidingMenu$6 -> m.framework.ui.widget.slidingmenu.SlidingMenu$6:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$6) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$6$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$6$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$6 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenuGroup -> m.framework.ui.widget.slidingmenu.SlidingMenuGroup:
    int id -> id
    java.lang.String text -> text
    java.util.ArrayList items -> items
    void setItem(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> setItem
    m.framework.ui.widget.slidingmenu.SlidingMenuItem findItemById(int) -> findItemById
    int getCount() -> getCount
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getItem(int) -> getItem
m.framework.ui.widget.slidingmenu.SlidingMenuItem -> m.framework.ui.widget.slidingmenu.SlidingMenuItem:
    int group -> group
    int id -> id
    java.lang.Object body -> body
m.framework.ui.widget.viewpager.ViewPagerAdapter -> m.framework.ui.widget.viewpager.ViewPagerAdapter:
    int getCount() -> getCount
    void onScreenChange(int,int) -> onScreenChange
    android.view.View getView(int,android.view.ViewGroup) -> getView
m.framework.ui.widget.viewpager.ViewPagerClassic -> m.framework.ui.widget.viewpager.ViewPagerClassic:
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int currentScreen -> currentScreen
    android.widget.Scroller scroller -> scroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float lastMotionX -> lastMotionX
    float lastMotionY -> lastMotionY
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int touchState -> touchState
    int touchSlop -> touchSlop
    int mMaximumVelocity -> mMaximumVelocity
    m.framework.ui.widget.viewpager.ViewPagerAdapter adapter -> adapter
    void init(android.content.Context) -> init
    int getCurrentScreen() -> getCurrentScreen
    void setCurrentScreen(int) -> setCurrentScreen
    void computeScroll() -> computeScroll
    void setAdapter(m.framework.ui.widget.viewpager.ViewPagerAdapter) -> setAdapter
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> handleInterceptMove
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> handleScrollMove
    void scrollToScreen(int) -> scrollToScreen
    void scrollToScreen(int,boolean) -> scrollToScreen
    void scrollLeft() -> scrollLeft
    void scrollRight() -> scrollRight
m.framework.ui.widget.viewpager.ViewPagerClassic$1 -> m.framework.ui.widget.viewpager.ViewPagerClassic$1:
    float[] values -> values
    m.framework.ui.widget.viewpager.ViewPagerClassic this$0 -> this$0
    float getInterpolation(float) -> getInterpolation
m.framework.utils.Data -> m.framework.utils.Data:
    java.lang.String CHAT_SET -> CHAT_SET
    m.framework.utils.Hashon hashon -> hashon
    byte[] SHA1(java.lang.String) -> SHA1
    byte[] AES128Encode(java.lang.String,java.lang.String) -> AES128Encode
    byte[] AES128Encode(byte[],java.lang.String) -> AES128Encode
    java.lang.String AES128Decode(java.lang.String,byte[]) -> AES128Decode
    byte[] AES128Decode(byte[],byte[]) -> AES128Decode
    java.lang.String byteToHex(byte[]) -> byteToHex
    java.util.HashMap parseJson(java.lang.String) -> parseJson
    java.lang.String parseJson(java.util.HashMap) -> parseJson
    java.lang.String base62(long) -> base62
    java.lang.String MD5(java.lang.String) -> MD5
    byte[] rawMD5(java.lang.String) -> rawMD5
    java.lang.String urlEncode(java.lang.String,java.lang.String) -> urlEncode
m.framework.utils.DeviceHelper -> m.framework.utils.DeviceHelper:
    android.content.Context context -> context
    m.framework.utils.DeviceHelper deviceHelper -> deviceHelper
    m.framework.utils.DeviceHelper getInstance(android.content.Context) -> getInstance
    boolean isRooted() -> isRooted
    java.lang.String getMacAddress() -> getMacAddress
    java.lang.String getModel() -> getModel
    java.lang.String getFactory() -> getFactory
    java.lang.String getDeviceId() -> getDeviceId
    java.lang.String getDeviceData() -> getDeviceData
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> Base64AES
    java.lang.String getOSVersion() -> getOSVersion
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.String getCarrier() -> getCarrier
    java.lang.String getNetworkType() -> getNetworkType
    int getPlatformCode() -> getPlatformCode
    boolean isFastMobileNetwork() -> isFastMobileNetwork
    org.json.JSONArray getRunningApp() -> getRunningApp
    java.lang.String getRunningAppStr() -> getRunningAppStr
    java.lang.String getDeviceKey() -> getDeviceKey
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    int getAppVersion() -> getAppVersion
    java.lang.String getAppVersionName() -> getAppVersionName
    java.util.ArrayList getInstalledApp(boolean) -> getInstalledApp
    boolean isSystemApp(android.content.pm.PackageInfo) -> isSystemApp
    java.lang.String getNetworkOperator() -> getNetworkOperator
    java.lang.String getTopTaskPackageName() -> getTopTaskPackageName
    boolean getSdcardState() -> getSdcardState
    java.lang.String getSdcardPath() -> getSdcardPath
m.framework.utils.HEX -> m.framework.utils.HEX:
    char[] DIGITS -> DIGITS
    java.lang.String toHex(byte[]) -> toHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    byte[] decodeHexString(java.lang.String) -> decodeHexString
    byte[] decodeHex(char[]) -> decodeHex
    int toDigit(char,int) -> toDigit
    char[] encodeHex(byte[]) -> encodeHex
    byte[] decode(byte[]) -> decode
    byte[] decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    char[] encode(java.lang.Object) -> encode
m.framework.utils.Hashon -> m.framework.utils.Hashon:
    java.util.HashMap fromJson(java.lang.String) -> fromJson
    java.util.HashMap fromJson(org.json.JSONObject) -> fromJson
    java.util.ArrayList fromJson(org.json.JSONArray) -> fromJson
    java.lang.String fromHashMap(java.util.HashMap) -> fromHashMap
    org.json.JSONObject getJSONObject(java.util.HashMap) -> getJSONObject
    boolean isBasicArray(java.lang.Object) -> isBasicArray
    java.util.ArrayList arrayToList(java.lang.Object) -> arrayToList
    org.json.JSONArray getJSONArray(java.util.ArrayList) -> getJSONArray
    java.lang.String format(java.lang.String) -> format
    java.lang.String format(java.lang.String,java.util.HashMap) -> format
    java.lang.String format(java.lang.String,java.util.ArrayList) -> format
m.framework.utils.UIHandler -> m.framework.utils.UIHandler:
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$0(android.os.Message) -> access$0
m.framework.utils.UIHandler$1 -> m.framework.utils.UIHandler$1:
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.utils.Utils -> m.framework.utils.Utils:
    float density -> density
    int dipToPx(android.content.Context,int) -> dipToPx
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    java.lang.String getFileMime(java.lang.String) -> getFileMime
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
org.kobjects.base64.Base64 -> org.kobjects.base64.Base64:
    char[] charTab -> charTab
    java.lang.String encode(byte[]) -> encode
    java.lang.StringBuffer encode(byte[],int,int,java.lang.StringBuffer) -> encode
    int decode(char) -> decode
    byte[] decode(java.lang.String) -> decode
    void decode(java.lang.String,java.io.OutputStream) -> decode
org.kobjects.crypt.Crypt -> org.kobjects.crypt.Crypt:
    int ITERATIONS -> ITERATIONS
    int[] con_salt -> con_salt
    boolean[] shifts2 -> shifts2
    int[][] skb -> skb
    int[][] SPtrans -> SPtrans
    int[] cov_2char -> cov_2char
    int byteToUnsigned(byte) -> byteToUnsigned
    int fourBytesToInt(byte[],int) -> fourBytesToInt
    void intToFourBytes(int,byte[],int) -> intToFourBytes
    void PERM_OP(int,int,int,int,int[]) -> PERM_OP
    int HPERM_OP(int,int,int) -> HPERM_OP
    int[] des_set_key(byte[]) -> des_set_key
    int D_ENCRYPT(int,int,int,int,int,int[]) -> D_ENCRYPT
    int[] body(int[],int,int) -> body
    java.lang.String generate(java.lang.String) -> generate
    boolean match(java.lang.String,java.lang.String) -> match
    java.lang.String crypt(java.lang.String,java.lang.String) -> crypt
    void main(java.lang.String[]) -> main
org.kobjects.io.BoundInputStream -> org.kobjects.io.BoundInputStream:
    int remaining -> remaining
    java.io.InputStream is -> is
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
org.kobjects.io.LookAheadReader -> org.kobjects.io.LookAheadReader:
    char[] buf -> buf
    int bufPos -> bufPos
    int bufValid -> bufValid
    java.io.Reader reader -> reader
    int read(char[],int,int) -> read
    java.lang.String readTo(java.lang.String) -> readTo
    java.lang.String readTo(char) -> readTo
    void close() -> close
    int read() -> read
    int peek(int) -> peek
    java.lang.String readLine() -> readLine
    java.lang.String readWhile(java.lang.String) -> readWhile
    void skip(java.lang.String) -> skip
org.kobjects.isodate.IsoDate -> org.kobjects.isodate.IsoDate:
    int DATE -> DATE
    int TIME -> TIME
    int DATE_TIME -> DATE_TIME
    void dd(java.lang.StringBuffer,int) -> dd
    java.lang.String dateToString(java.util.Date,int) -> dateToString
    java.util.Date stringToDate(java.lang.String,int) -> stringToDate
org.kobjects.mime.Decoder -> org.kobjects.mime.Decoder:
    java.io.InputStream is -> is
    java.util.Hashtable header -> header
    boolean eof -> eof
    boolean consumed -> consumed
    java.lang.String boundary -> boundary
    java.lang.String characterEncoding -> characterEncoding
    char[] buf -> buf
    java.lang.String readLine() -> readLine
    java.util.Hashtable getHeaderElements(java.lang.String) -> getHeaderElements
    java.util.Enumeration getHeaderNames() -> getHeaderNames
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.lang.String readContent() -> readContent
    void readContent(java.io.OutputStream) -> readContent
    boolean next() -> next
org.kobjects.pim.PimField -> org.kobjects.pim.PimField:
    java.lang.String name -> name
    java.lang.Object value -> value
    java.util.Hashtable properties -> properties
    java.util.Enumeration propertyNames() -> propertyNames
    void setProperty(java.lang.String,java.lang.String) -> setProperty
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
    java.lang.String getProperty(java.lang.String) -> getProperty
    boolean getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,boolean) -> setAttribute
org.kobjects.pim.PimItem -> org.kobjects.pim.PimItem:
    java.util.Hashtable fields -> fields
    int TYPE_STRING -> TYPE_STRING
    int TYPE_STRING_ARRAY -> TYPE_STRING_ARRAY
    java.util.Enumeration fieldNames() -> fieldNames
    void addField(org.kobjects.pim.PimField) -> addField
    java.util.Enumeration fields() -> fields
    java.util.Enumeration fields(java.lang.String) -> fields
    org.kobjects.pim.PimField getField(java.lang.String,int) -> getField
    int getFieldCount(java.lang.String) -> getFieldCount
    java.lang.String getType() -> getType
    int getArraySize(java.lang.String) -> getArraySize
    int getType(java.lang.String) -> getType
    void removeField(java.lang.String,int) -> removeField
    java.lang.String toString() -> toString
org.kobjects.pim.PimParser -> org.kobjects.pim.PimParser:
    org.kobjects.io.LookAheadReader reader -> reader
    java.lang.Class type -> type
    org.kobjects.pim.PimItem readItem() -> readItem
    java.lang.String readName() -> readName
    java.lang.String[] readArrayValue(int) -> readArrayValue
    java.lang.String readStringValue() -> readStringValue
    void readProperties(org.kobjects.pim.PimField) -> readProperties
org.kobjects.pim.PimWriter -> org.kobjects.pim.PimWriter:
    java.io.Writer writer -> writer
    void writeEntry(org.kobjects.pim.PimItem) -> writeEntry
org.kobjects.pim.VCard -> org.kobjects.pim.VCard:
    java.lang.String getType() -> getType
    int getArraySize(java.lang.String) -> getArraySize
org.kobjects.rss.RssReader -> org.kobjects.rss.RssReader:
    int TITLE -> TITLE
    int LINK -> LINK
    int DESCRIPTION -> DESCRIPTION
    int DATE -> DATE
    int AUTHOR -> AUTHOR
    org.kobjects.xml.XmlReader xr -> xr
    void readText(java.lang.StringBuffer) -> readText
    java.lang.String[] next() -> next
org.kobjects.util.ChainedRuntimeException -> org.kobjects.util.ChainedRuntimeException:
    java.lang.Exception chain -> chain
    org.kobjects.util.ChainedRuntimeException create(java.lang.Exception,java.lang.String) -> create
    org.kobjects.util.ChainedRuntimeException _create(java.lang.Exception,java.lang.String) -> _create
    java.lang.Exception getChained() -> getChained
    void printStackTrace() -> printStackTrace
org.kobjects.util.Csv -> org.kobjects.util.Csv:
    java.lang.String encode(java.lang.String,char) -> encode
    java.lang.String encode(java.lang.Object[]) -> encode
    java.lang.String[] decode(java.lang.String) -> decode
org.kobjects.util.SingleEnumeration -> org.kobjects.util.SingleEnumeration:
    java.lang.Object object -> object
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
org.kobjects.util.Strings -> org.kobjects.util.Strings:
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    java.lang.String toAscii(java.lang.String) -> toAscii
    java.lang.String fill(java.lang.String,int,char) -> fill
    java.lang.String beautify(java.lang.String) -> beautify
    java.lang.String lTrim(java.lang.String,java.lang.String) -> lTrim
    java.lang.String rTrim(java.lang.String,java.lang.String) -> rTrim
org.kobjects.util.Util -> org.kobjects.util.Util:
    java.io.OutputStream streamcopy(java.io.InputStream,java.io.OutputStream) -> streamcopy
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.String buildUrl(java.lang.String,java.lang.String) -> buildUrl
    void sort(java.lang.Object[],int,int) -> sort
org.kobjects.xml.XmlReader -> org.kobjects.xml.XmlReader:
    int START_DOCUMENT -> START_DOCUMENT
    int END_DOCUMENT -> END_DOCUMENT
    int START_TAG -> START_TAG
    int END_TAG -> END_TAG
    int TEXT -> TEXT
    int CDSECT -> CDSECT
    int ENTITY_REF -> ENTITY_REF
    java.lang.String UNEXPECTED_EOF -> UNEXPECTED_EOF
    int LEGACY -> LEGACY
    boolean relaxed -> relaxed
    java.util.Hashtable entityMap -> entityMap
    int depth -> depth
    java.lang.String[] elementStack -> elementStack
    java.io.Reader reader -> reader
    char[] srcBuf -> srcBuf
    int srcPos -> srcPos
    int srcCount -> srcCount
    boolean eof -> eof
    int line -> line
    int column -> column
    int peek0 -> peek0
    int peek1 -> peek1
    char[] txtBuf -> txtBuf
    int txtPos -> txtPos
    int type -> type
    java.lang.String text -> text
    boolean isWhitespace -> isWhitespace
    java.lang.String name -> name
    boolean degenerated -> degenerated
    int attributeCount -> attributeCount
    java.lang.String[] attributes -> attributes
    java.lang.String[] TYPES -> TYPES
    int read() -> read
    void exception(java.lang.String) -> exception
    void push(int) -> push
    void read(char) -> read
    void skip() -> skip
    java.lang.String pop(int) -> pop
    java.lang.String readName() -> readName
    void parseLegacy(boolean) -> parseLegacy
    void parseDoctype() -> parseDoctype
    void parseEndTag() -> parseEndTag
    int peekType() -> peekType
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> ensureCapacity
    void parseStartTag() -> parseStartTag
    boolean pushEntity() -> pushEntity
    boolean pushText(int) -> pushText
    void defineCharacterEntity(java.lang.String,java.lang.String) -> defineCharacterEntity
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    java.lang.String getName() -> getName
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String) -> getAttributeValue
    int getType() -> getType
    int next() -> next
    void require(int,java.lang.String) -> require
    java.lang.String readText() -> readText
org.kobjects.xmlrpc.Driver -> org.kobjects.xmlrpc.Driver:
    void main(java.lang.String[]) -> main
org.kobjects.xmlrpc.XmlRpcParser -> org.kobjects.xmlrpc.XmlRpcParser:
    org.kobjects.xml.XmlReader parser -> parser
    java.util.Hashtable parseStruct() -> parseStruct
    java.lang.Object parseValue() -> parseValue
    java.util.Vector parseArray() -> parseArray
    java.lang.Object parseFault() -> parseFault
    java.lang.Object parseParams() -> parseParams
    java.lang.Object parseResponse() -> parseResponse
    int nextTag() -> nextTag
    java.lang.String nextText() -> nextText
org.ksoap2.HeaderProperty -> org.ksoap2.HeaderProperty:
    java.lang.String key -> key
    java.lang.String value -> value
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
org.ksoap2.SoapEnvelope -> org.ksoap2.SoapEnvelope:
    int VER10 -> VER10
    int VER11 -> VER11
    int VER12 -> VER12
    java.lang.String ENV2003 -> ENV2003
    java.lang.String ENC2003 -> ENC2003
    java.lang.String ENV -> ENV
    java.lang.String ENC -> ENC
    java.lang.String XSD -> XSD
    java.lang.String XSI -> XSI
    java.lang.String XSD1999 -> XSD1999
    java.lang.String XSI1999 -> XSI1999
    java.lang.Object bodyIn -> bodyIn
    java.lang.Object bodyOut -> bodyOut
    org.kxml2.kdom.Element[] headerIn -> headerIn
    org.kxml2.kdom.Element[] headerOut -> headerOut
    java.lang.String encodingStyle -> encodingStyle
    int version -> version
    java.lang.String env -> env
    java.lang.String enc -> enc
    java.lang.String xsi -> xsi
    java.lang.String xsd -> xsd
    boolean stringToBoolean(java.lang.String) -> stringToBoolean
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void parseHeader(org.xmlpull.v1.XmlPullParser) -> parseHeader
    void parseBody(org.xmlpull.v1.XmlPullParser) -> parseBody
    void write(org.xmlpull.v1.XmlSerializer) -> write
    void writeHeader(org.xmlpull.v1.XmlSerializer) -> writeHeader
    void writeBody(org.xmlpull.v1.XmlSerializer) -> writeBody
    void setOutputSoapObject(java.lang.Object) -> setOutputSoapObject
org.ksoap2.SoapFault -> org.ksoap2.SoapFault:
    long serialVersionUID -> serialVersionUID
    java.lang.String faultcode -> faultcode
    java.lang.String faultstring -> faultstring
    java.lang.String faultactor -> faultactor
    org.kxml2.kdom.Node detail -> detail
    int version -> version
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void write(org.xmlpull.v1.XmlSerializer) -> write
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.ksoap2.SoapFault12 -> org.ksoap2.SoapFault12:
    long serialVersionUID -> serialVersionUID
    org.kxml2.kdom.Node Code -> Code
    org.kxml2.kdom.Node Reason -> Reason
    org.kxml2.kdom.Node Node -> Node
    org.kxml2.kdom.Node Role -> Role
    org.kxml2.kdom.Node Detail -> Detail
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void parseSelf(org.xmlpull.v1.XmlPullParser) -> parseSelf
    void write(org.xmlpull.v1.XmlSerializer) -> write
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.ksoap2.serialization.AttributeContainer -> org.ksoap2.serialization.AttributeContainer:
    java.util.Vector attributes -> attributes
    void getAttributeInfo(int,org.ksoap2.serialization.AttributeInfo) -> getAttributeInfo
    java.lang.Object getAttribute(int) -> getAttribute
    java.lang.String getAttributeAsString(int) -> getAttributeAsString
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttributeAsString(java.lang.String) -> getAttributeAsString
    boolean hasAttribute(java.lang.String) -> hasAttribute
    java.lang.Object getAttributeSafely(java.lang.String) -> getAttributeSafely
    java.lang.Object getAttributeSafelyAsString(java.lang.String) -> getAttributeSafelyAsString
    java.lang.Integer attributeIndex(java.lang.String) -> attributeIndex
    int getAttributeCount() -> getAttributeCount
    boolean attributesAreEqual(org.ksoap2.serialization.AttributeContainer) -> attributesAreEqual
    void addAttribute(java.lang.String,java.lang.Object) -> addAttribute
    void addAttributeIfValue(java.lang.String,java.lang.Object) -> addAttributeIfValue
    void addAttribute(org.ksoap2.serialization.AttributeInfo) -> addAttribute
    void addAttributeIfValue(org.ksoap2.serialization.AttributeInfo) -> addAttributeIfValue
org.ksoap2.serialization.AttributeInfo -> org.ksoap2.serialization.AttributeInfo:
org.ksoap2.serialization.DM -> org.ksoap2.serialization.DM:
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.FwdRef -> org.ksoap2.serialization.FwdRef:
    org.ksoap2.serialization.FwdRef next -> next
    java.lang.Object obj -> obj
    int index -> index
org.ksoap2.serialization.KvmSerializable -> org.ksoap2.serialization.KvmSerializable:
    java.lang.Object getProperty(int) -> getProperty
    int getPropertyCount() -> getPropertyCount
    void setProperty(int,java.lang.Object) -> setProperty
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> getPropertyInfo
org.ksoap2.serialization.Marshal -> org.ksoap2.serialization.Marshal:
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.MarshalBase64 -> org.ksoap2.serialization.MarshalBase64:
    java.lang.Class BYTE_ARRAY_CLASS -> BYTE_ARRAY_CLASS
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.MarshalDate -> org.ksoap2.serialization.MarshalDate:
    java.lang.Class DATE_CLASS -> DATE_CLASS
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.MarshalFloat -> org.ksoap2.serialization.MarshalFloat:
    java.lang.Class class$java$lang$Float -> class$java$lang$Float
    java.lang.Class class$java$lang$Double -> class$java$lang$Double
    java.lang.Class class$java$math$BigDecimal -> class$java$math$BigDecimal
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
    java.lang.Class class$(java.lang.String) -> class$
org.ksoap2.serialization.MarshalHashtable -> org.ksoap2.serialization.MarshalHashtable:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String NAME -> NAME
    java.lang.Class HASHTABLE_CLASS -> HASHTABLE_CLASS
    org.ksoap2.serialization.SoapSerializationEnvelope envelope -> envelope
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    void writeInstance(org.xmlpull.v1.XmlSerializer,java.lang.Object) -> writeInstance
    void register(org.ksoap2.serialization.SoapSerializationEnvelope) -> register
org.ksoap2.serialization.MarshalHashtable$ItemSoapObject -> org.ksoap2.serialization.MarshalHashtable$ItemSoapObject:
    java.util.Hashtable h -> h
    int resolvedIndex -> resolvedIndex
    org.ksoap2.serialization.MarshalHashtable this$0 -> this$0
    void setProperty(int,java.lang.Object) -> setProperty
org.ksoap2.serialization.NullSoapObject -> org.ksoap2.serialization.NullSoapObject:
    java.lang.String toString() -> toString
org.ksoap2.serialization.PropertyInfo -> org.ksoap2.serialization.PropertyInfo:
    java.lang.Class OBJECT_CLASS -> OBJECT_CLASS
    java.lang.Class STRING_CLASS -> STRING_CLASS
    java.lang.Class INTEGER_CLASS -> INTEGER_CLASS
    java.lang.Class LONG_CLASS -> LONG_CLASS
    java.lang.Class BOOLEAN_CLASS -> BOOLEAN_CLASS
    java.lang.Class VECTOR_CLASS -> VECTOR_CLASS
    org.ksoap2.serialization.PropertyInfo OBJECT_TYPE -> OBJECT_TYPE
    int TRANSIENT -> TRANSIENT
    int MULTI_REF -> MULTI_REF
    int REF_ONLY -> REF_ONLY
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    int flags -> flags
    java.lang.Object value -> value
    java.lang.Object type -> type
    boolean multiRef -> multiRef
    org.ksoap2.serialization.PropertyInfo elementType -> elementType
    void clear() -> clear
    org.ksoap2.serialization.PropertyInfo getElementType() -> getElementType
    void setElementType(org.ksoap2.serialization.PropertyInfo) -> setElementType
    int getFlags() -> getFlags
    void setFlags(int) -> setFlags
    boolean isMultiRef() -> isMultiRef
    void setMultiRef(boolean) -> setMultiRef
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNamespace() -> getNamespace
    void setNamespace(java.lang.String) -> setNamespace
    java.lang.Object getType() -> getType
    void setType(java.lang.Object) -> setType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.ksoap2.serialization.SoapObject -> org.ksoap2.serialization.SoapObject:
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    java.util.Vector properties -> properties
    java.lang.Class class$org$ksoap2$serialization$SoapObject -> class$org$ksoap2$serialization$SoapObject
    java.lang.Class class$java$lang$String -> class$java$lang$String
    boolean equals(java.lang.Object) -> equals
    boolean isPropertyEqual(java.lang.Object,int) -> isPropertyEqual
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.Object getProperty(int) -> getProperty
    java.lang.String getPropertyAsString(int) -> getPropertyAsString
    java.lang.Object getProperty(java.lang.String) -> getProperty
    java.lang.String getPropertyAsString(java.lang.String) -> getPropertyAsString
    boolean hasProperty(java.lang.String) -> hasProperty
    java.lang.Object getPropertySafely(java.lang.String) -> getPropertySafely
    java.lang.String getPropertySafelyAsString(java.lang.String) -> getPropertySafelyAsString
    java.lang.Object getPropertySafely(java.lang.String,java.lang.Object) -> getPropertySafely
    java.lang.String getPropertySafelyAsString(java.lang.String,java.lang.Object) -> getPropertySafelyAsString
    java.lang.Object getPrimitiveProperty(java.lang.String) -> getPrimitiveProperty
    java.lang.String getPrimitivePropertyAsString(java.lang.String) -> getPrimitivePropertyAsString
    java.lang.Object getPrimitivePropertySafely(java.lang.String) -> getPrimitivePropertySafely
    java.lang.String getPrimitivePropertySafelyAsString(java.lang.String) -> getPrimitivePropertySafelyAsString
    java.lang.Integer propertyIndex(java.lang.String) -> propertyIndex
    int getPropertyCount() -> getPropertyCount
    void getPropertyInfo(int,java.util.Hashtable,org.ksoap2.serialization.PropertyInfo) -> getPropertyInfo
    void getPropertyInfo(int,org.ksoap2.serialization.PropertyInfo) -> getPropertyInfo
    org.ksoap2.serialization.SoapObject newInstance() -> newInstance
    void setProperty(int,java.lang.Object) -> setProperty
    org.ksoap2.serialization.SoapObject addProperty(java.lang.String,java.lang.Object) -> addProperty
    org.ksoap2.serialization.SoapObject addPropertyIfValue(java.lang.String,java.lang.Object) -> addPropertyIfValue
    org.ksoap2.serialization.SoapObject addPropertyIfValue(org.ksoap2.serialization.PropertyInfo,java.lang.Object) -> addPropertyIfValue
    org.ksoap2.serialization.SoapObject addProperty(org.ksoap2.serialization.PropertyInfo) -> addProperty
    org.ksoap2.serialization.SoapObject addPropertyIfValue(org.ksoap2.serialization.PropertyInfo) -> addPropertyIfValue
    org.ksoap2.serialization.SoapObject addSoapObject(org.ksoap2.serialization.SoapObject) -> addSoapObject
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> class$
org.ksoap2.serialization.SoapPrimitive -> org.ksoap2.serialization.SoapPrimitive:
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    java.lang.String value -> value
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
org.ksoap2.serialization.SoapSerializationEnvelope -> org.ksoap2.serialization.SoapSerializationEnvelope:
    int QNAME_TYPE -> QNAME_TYPE
    int QNAME_NAMESPACE -> QNAME_NAMESPACE
    int QNAME_MARSHAL -> QNAME_MARSHAL
    java.lang.String ANY_TYPE_LABEL -> ANY_TYPE_LABEL
    java.lang.String ARRAY_MAPPING_NAME -> ARRAY_MAPPING_NAME
    java.lang.String NULL_LABEL -> NULL_LABEL
    java.lang.String NIL_LABEL -> NIL_LABEL
    java.lang.String HREF_LABEL -> HREF_LABEL
    java.lang.String ID_LABEL -> ID_LABEL
    java.lang.String ROOT_LABEL -> ROOT_LABEL
    java.lang.String TYPE_LABEL -> TYPE_LABEL
    java.lang.String ITEM_LABEL -> ITEM_LABEL
    java.lang.String ARRAY_TYPE_LABEL -> ARRAY_TYPE_LABEL
    org.ksoap2.serialization.Marshal DEFAULT_MARSHAL -> DEFAULT_MARSHAL
    java.util.Hashtable properties -> properties
    java.util.Hashtable idMap -> idMap
    java.util.Vector multiRef -> multiRef
    boolean implicitTypes -> implicitTypes
    boolean dotNet -> dotNet
    boolean avoidExceptionForUnknownProperty -> avoidExceptionForUnknownProperty
    java.util.Hashtable qNameToClass -> qNameToClass
    java.util.Hashtable classToQName -> classToQName
    boolean addAdornments -> addAdornments
    java.lang.Class class$org$ksoap2$serialization$SoapObject -> class$org$ksoap2$serialization$SoapObject
    boolean isAddAdornments() -> isAddAdornments
    void setAddAdornments(boolean) -> setAddAdornments
    void setBodyOutEmpty(boolean) -> setBodyOutEmpty
    void parseBody(org.xmlpull.v1.XmlPullParser) -> parseBody
    void readSerializable(org.xmlpull.v1.XmlPullParser,org.ksoap2.serialization.SoapObject) -> readSerializable
    void readSerializable(org.xmlpull.v1.XmlPullParser,org.ksoap2.serialization.KvmSerializable) -> readSerializable
    java.lang.Object readUnknown(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> readUnknown
    int getIndex(java.lang.String,int,int) -> getIndex
    void readVector(org.xmlpull.v1.XmlPullParser,java.util.Vector,org.ksoap2.serialization.PropertyInfo) -> readVector
    java.lang.Object read(org.xmlpull.v1.XmlPullParser,java.lang.Object,int,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> read
    java.lang.Object readInstance(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,org.ksoap2.serialization.PropertyInfo) -> readInstance
    java.lang.Object[] getInfo(java.lang.Object,java.lang.Object) -> getInfo
    void addMapping(java.lang.String,java.lang.String,java.lang.Class,org.ksoap2.serialization.Marshal) -> addMapping
    void addMapping(java.lang.String,java.lang.String,java.lang.Class) -> addMapping
    void addTemplate(org.ksoap2.serialization.SoapObject) -> addTemplate
    java.lang.Object getResponse() -> getResponse
    void writeBody(org.xmlpull.v1.XmlSerializer) -> writeBody
    void writeObjectBody(org.xmlpull.v1.XmlSerializer,org.ksoap2.serialization.SoapObject) -> writeObjectBody
    void writeObjectBody(org.xmlpull.v1.XmlSerializer,org.ksoap2.serialization.KvmSerializable) -> writeObjectBody
    void writeProperty(org.xmlpull.v1.XmlSerializer,java.lang.Object,org.ksoap2.serialization.PropertyInfo) -> writeProperty
    void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.Object,org.ksoap2.serialization.PropertyInfo,java.lang.Object) -> writeElement
    void writeVectorBody(org.xmlpull.v1.XmlSerializer,java.util.Vector,org.ksoap2.serialization.PropertyInfo) -> writeVectorBody
    java.lang.Class class$(java.lang.String) -> class$
org.ksoap2.transport.HttpResponseException -> org.ksoap2.transport.HttpResponseException:
    int statusCode -> statusCode
    int getStatusCode() -> getStatusCode
org.ksoap2.transport.HttpTransportSE -> org.ksoap2.transport.HttpTransportSE:
    void call(java.lang.String,org.ksoap2.SoapEnvelope) -> call
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List) -> call
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List,java.io.File) -> call
    java.io.InputStream readDebug(java.io.InputStream,int,java.io.File) -> readDebug
    java.io.InputStream getUnZippedInputStream(java.io.InputStream) -> getUnZippedInputStream
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> getServiceConnection
org.ksoap2.transport.HttpsServiceConnectionSE -> org.ksoap2.transport.HttpsServiceConnectionSE:
    javax.net.ssl.HttpsURLConnection connection -> connection
    void updateConnectionParameters(int) -> updateConnectionParameters
    void connect() -> connect
    void disconnect() -> disconnect
    java.util.List getResponseProperties() -> getResponseProperties
    int getResponseCode() -> getResponseCode
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void setRequestMethod(java.lang.String) -> setRequestMethod
    void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    java.io.OutputStream openOutputStream() -> openOutputStream
    java.io.InputStream openInputStream() -> openInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) -> setSSLSocketFactory
org.ksoap2.transport.HttpsServiceConnectionSEIgnoringConnectionClose -> org.ksoap2.transport.HttpsServiceConnectionSEIgnoringConnectionClose:
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
org.ksoap2.transport.HttpsTransportSE -> org.ksoap2.transport.HttpsTransportSE:
    java.lang.String PROTOCOL -> PROTOCOL
    java.lang.String PROTOCOL_FULL -> PROTOCOL_FULL
    java.lang.String host -> host
    int port -> port
    java.lang.String file -> file
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> getServiceConnection
org.ksoap2.transport.KeepAliveHttpTransportSE -> org.ksoap2.transport.KeepAliveHttpTransportSE:
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List) -> call
    org.ksoap2.HeaderProperty getHeader(java.util.List,java.lang.String) -> getHeader
org.ksoap2.transport.KeepAliveHttpsTransportSE -> org.ksoap2.transport.KeepAliveHttpsTransportSE:
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> getServiceConnection
org.ksoap2.transport.ServiceConnection -> org.ksoap2.transport.ServiceConnection:
    int DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    void connect() -> connect
    void disconnect() -> disconnect
    java.util.List getResponseProperties() -> getResponseProperties
    int getResponseCode() -> getResponseCode
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void setRequestMethod(java.lang.String) -> setRequestMethod
    void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    java.io.OutputStream openOutputStream() -> openOutputStream
    java.io.InputStream openInputStream() -> openInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
org.ksoap2.transport.ServiceConnectionSE -> org.ksoap2.transport.ServiceConnectionSE:
    java.net.HttpURLConnection connection -> connection
    void connect() -> connect
    void disconnect() -> disconnect
    java.util.List getResponseProperties() -> getResponseProperties
    int getResponseCode() -> getResponseCode
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    void setRequestMethod(java.lang.String) -> setRequestMethod
    void setFixedLengthStreamingMode(int) -> setFixedLengthStreamingMode
    java.io.OutputStream openOutputStream() -> openOutputStream
    java.io.InputStream openInputStream() -> openInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
org.ksoap2.transport.Transport -> org.ksoap2.transport.Transport:
    java.net.Proxy proxy -> proxy
    java.lang.String url -> url
    int timeout -> timeout
    boolean debug -> debug
    java.lang.String requestDump -> requestDump
    java.lang.String responseDump -> responseDump
    java.lang.String xmlVersionTag -> xmlVersionTag
    java.lang.String CONTENT_TYPE_XML_CHARSET_UTF_8 -> CONTENT_TYPE_XML_CHARSET_UTF_8
    java.lang.String CONTENT_TYPE_SOAP_XML_CHARSET_UTF_8 -> CONTENT_TYPE_SOAP_XML_CHARSET_UTF_8
    java.lang.String USER_AGENT -> USER_AGENT
    int bufferLength -> bufferLength
    void parseResponse(org.ksoap2.SoapEnvelope,java.io.InputStream) -> parseResponse
    byte[] createRequestData(org.ksoap2.SoapEnvelope,java.lang.String) -> createRequestData
    byte[] createRequestData(org.ksoap2.SoapEnvelope) -> createRequestData
    void setUrl(java.lang.String) -> setUrl
    void setXmlVersionTag(java.lang.String) -> setXmlVersionTag
    void reset() -> reset
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List) -> call
    java.util.List call(java.lang.String,org.ksoap2.SoapEnvelope,java.util.List,java.io.File) -> call
    void call(java.lang.String,org.ksoap2.SoapEnvelope) -> call
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    org.ksoap2.transport.ServiceConnection getServiceConnection() -> getServiceConnection
org.kxml2.io.KXmlParser -> org.kxml2.io.KXmlParser:
    java.lang.Object location -> location
    java.lang.String UNEXPECTED_EOF -> UNEXPECTED_EOF
    java.lang.String ILLEGAL_TYPE -> ILLEGAL_TYPE
    int LEGACY -> LEGACY
    int XML_DECL -> XML_DECL
    java.lang.String version -> version
    java.lang.Boolean standalone -> standalone
    boolean processNsp -> processNsp
    boolean relaxed -> relaxed
    java.util.Hashtable entityMap -> entityMap
    int depth -> depth
    java.lang.String[] elementStack -> elementStack
    java.lang.String[] nspStack -> nspStack
    int[] nspCounts -> nspCounts
    java.io.Reader reader -> reader
    java.lang.String encoding -> encoding
    char[] srcBuf -> srcBuf
    int srcPos -> srcPos
    int srcCount -> srcCount
    int line -> line
    int column -> column
    char[] txtBuf -> txtBuf
    int txtPos -> txtPos
    int type -> type
    boolean isWhitespace -> isWhitespace
    java.lang.String namespace -> namespace
    java.lang.String prefix -> prefix
    java.lang.String name -> name
    boolean degenerated -> degenerated
    int attributeCount -> attributeCount
    java.lang.String[] attributes -> attributes
    java.lang.String error -> error
    int[] peek -> peek
    int peekCount -> peekCount
    boolean wasCR -> wasCR
    boolean unresolved -> unresolved
    boolean token -> token
    boolean isProp(java.lang.String,boolean,java.lang.String) -> isProp
    boolean adjustNsp() -> adjustNsp
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> ensureCapacity
    void error(java.lang.String) -> error
    void exception(java.lang.String) -> exception
    void nextImpl() -> nextImpl
    int parseLegacy(boolean) -> parseLegacy
    void parseDoctype(boolean) -> parseDoctype
    void parseEndTag() -> parseEndTag
    int peekType() -> peekType
    java.lang.String get(int) -> get
    void push(int) -> push
    void parseStartTag(boolean) -> parseStartTag
    void pushEntity() -> pushEntity
    void pushText(int,boolean) -> pushText
    void read(char) -> read
    int read() -> read
    int peek(int) -> peek
    java.lang.String readName() -> readName
    void skip() -> skip
    void setInput(java.io.Reader) -> setInput
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getInputEncoding() -> getInputEncoding
    void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    java.lang.Object getProperty(java.lang.String) -> getProperty
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    char[] getTextCharacters(int[]) -> getTextCharacters
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix() -> getPrefix
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeType(int) -> getAttributeType
    boolean isAttributeDefault(int) -> isAttributeDefault
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    int nextTag() -> nextTag
    void require(int,java.lang.String,java.lang.String) -> require
    java.lang.String nextText() -> nextText
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void skipSubTree() -> skipSubTree
org.kxml2.io.KXmlSerializer -> org.kxml2.io.KXmlSerializer:
    java.io.Writer writer -> writer
    boolean pending -> pending
    int auto -> auto
    int depth -> depth
    java.lang.String[] elementStack -> elementStack
    int[] nspCounts -> nspCounts
    java.lang.String[] nspStack -> nspStack
    boolean[] indent -> indent
    boolean unicode -> unicode
    java.lang.String encoding -> encoding
    void check(boolean) -> check
    void writeEscaped(java.lang.String,int) -> writeEscaped
    void docdecl(java.lang.String) -> docdecl
    void endDocument() -> endDocument
    void entityRef(java.lang.String) -> entityRef
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.String getPrefix(java.lang.String,boolean,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setOutput(java.io.Writer) -> setOutput
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void flush() -> flush
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    int getDepth() -> getDepth
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void processingInstruction(java.lang.String) -> processingInstruction
org.kxml2.kdom.Document -> org.kxml2.kdom.Document:
    int rootIndex -> rootIndex
    java.lang.String encoding -> encoding
    java.lang.Boolean standalone -> standalone
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    void setStandalone(java.lang.Boolean) -> setStandalone
    java.lang.Boolean getStandalone() -> getStandalone
    java.lang.String getName() -> getName
    void addChild(int,int,java.lang.Object) -> addChild
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void removeChild(int) -> removeChild
    org.kxml2.kdom.Element getRootElement() -> getRootElement
    void write(org.xmlpull.v1.XmlSerializer) -> write
org.kxml2.kdom.Element -> org.kxml2.kdom.Element:
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    java.util.Vector attributes -> attributes
    org.kxml2.kdom.Node parent -> parent
    java.util.Vector prefixes -> prefixes
    void init() -> init
    void clear() -> clear
    org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String) -> createElement
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    org.kxml2.kdom.Node getRoot() -> getRoot
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNamespaceUri(java.lang.String) -> getNamespaceUri
    int getNamespaceCount() -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    org.kxml2.kdom.Node getParent() -> getParent
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void setAttribute(java.lang.String,java.lang.String,java.lang.String) -> setAttribute
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setName(java.lang.String) -> setName
    void setNamespace(java.lang.String) -> setNamespace
    void setParent(org.kxml2.kdom.Node) -> setParent
    void write(org.xmlpull.v1.XmlSerializer) -> write
org.kxml2.kdom.Node -> org.kxml2.kdom.Node:
    int DOCUMENT -> DOCUMENT
    int ELEMENT -> ELEMENT
    int TEXT -> TEXT
    int CDSECT -> CDSECT
    int ENTITY_REF -> ENTITY_REF
    int IGNORABLE_WHITESPACE -> IGNORABLE_WHITESPACE
    int PROCESSING_INSTRUCTION -> PROCESSING_INSTRUCTION
    int COMMENT -> COMMENT
    int DOCDECL -> DOCDECL
    java.util.Vector children -> children
    java.lang.StringBuffer types -> types
    void addChild(int,int,java.lang.Object) -> addChild
    void addChild(int,java.lang.Object) -> addChild
    org.kxml2.kdom.Element createElement(java.lang.String,java.lang.String) -> createElement
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    org.kxml2.kdom.Element getElement(int) -> getElement
    org.kxml2.kdom.Element getElement(java.lang.String,java.lang.String) -> getElement
    java.lang.String getText(int) -> getText
    int getType(int) -> getType
    int indexOf(java.lang.String,java.lang.String,int) -> indexOf
    boolean isText(int) -> isText
    void parse(org.xmlpull.v1.XmlPullParser) -> parse
    void removeChild(int) -> removeChild
    void write(org.xmlpull.v1.XmlSerializer) -> write
    void writeChildren(org.xmlpull.v1.XmlSerializer) -> writeChildren
org.kxml2.wap.Wbxml -> org.kxml2.wap.Wbxml:
    int SWITCH_PAGE -> SWITCH_PAGE
    int END -> END
    int ENTITY -> ENTITY
    int STR_I -> STR_I
    int LITERAL -> LITERAL
    int EXT_I_0 -> EXT_I_0
    int EXT_I_1 -> EXT_I_1
    int EXT_I_2 -> EXT_I_2
    int PI -> PI
    int LITERAL_C -> LITERAL_C
    int EXT_T_0 -> EXT_T_0
    int EXT_T_1 -> EXT_T_1
    int EXT_T_2 -> EXT_T_2
    int STR_T -> STR_T
    int LITERAL_A -> LITERAL_A
    int EXT_0 -> EXT_0
    int EXT_1 -> EXT_1
    int EXT_2 -> EXT_2
    int OPAQUE -> OPAQUE
    int LITERAL_AC -> LITERAL_AC
org.kxml2.wap.WbxmlParser -> org.kxml2.wap.WbxmlParser:
    java.lang.String HEX_DIGITS -> HEX_DIGITS
    int WAP_EXTENSION -> WAP_EXTENSION
    java.lang.String UNEXPECTED_EOF -> UNEXPECTED_EOF
    java.lang.String ILLEGAL_TYPE -> ILLEGAL_TYPE
    java.io.InputStream in -> in
    int TAG_TABLE -> TAG_TABLE
    int ATTR_START_TABLE -> ATTR_START_TABLE
    int ATTR_VALUE_TABLE -> ATTR_VALUE_TABLE
    java.lang.String[] attrStartTable -> attrStartTable
    java.lang.String[] attrValueTable -> attrValueTable
    java.lang.String[] tagTable -> tagTable
    byte[] stringTable -> stringTable
    java.util.Hashtable cacheStringTable -> cacheStringTable
    boolean processNsp -> processNsp
    int depth -> depth
    java.lang.String[] elementStack -> elementStack
    java.lang.String[] nspStack -> nspStack
    int[] nspCounts -> nspCounts
    int attributeCount -> attributeCount
    java.lang.String[] attributes -> attributes
    int nextId -> nextId
    java.util.Vector tables -> tables
    int version -> version
    int publicIdentifierId -> publicIdentifierId
    java.lang.String prefix -> prefix
    java.lang.String namespace -> namespace
    java.lang.String name -> name
    java.lang.String text -> text
    java.lang.Object wapExtensionData -> wapExtensionData
    int wapCode -> wapCode
    int type -> type
    boolean degenerated -> degenerated
    boolean isWhitespace -> isWhitespace
    java.lang.String encoding -> encoding
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getInputEncoding() -> getInputEncoding
    void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    java.lang.Object getProperty(java.lang.String) -> getProperty
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    char[] getTextCharacters(int[]) -> getTextCharacters
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix() -> getPrefix
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeType(int) -> getAttributeType
    boolean isAttributeDefault(int) -> isAttributeDefault
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    int nextTag() -> nextTag
    java.lang.String nextText() -> nextText
    void require(int,java.lang.String,java.lang.String) -> require
    void setInput(java.io.Reader) -> setInput
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    boolean adjustNsp() -> adjustNsp
    void setTable(int,int,java.lang.String[]) -> setTable
    void exception(java.lang.String) -> exception
    void selectPage(int,boolean) -> selectPage
    void nextImpl() -> nextImpl
    java.lang.Object parseWapExtension(int) -> parseWapExtension
    void readAttr() -> readAttr
    int peekId() -> peekId
    java.lang.String resolveWapExtension(int,java.lang.Object) -> resolveWapExtension
    java.lang.String resolveId(java.lang.String[],int) -> resolveId
    void parseElement(int) -> parseElement
    java.lang.String[] ensureCapacity(java.lang.String[],int) -> ensureCapacity
    int readByte() -> readByte
    int readInt() -> readInt
    java.lang.String readStrI() -> readStrI
    java.lang.String readStrT() -> readStrT
    void setTagTable(int,java.lang.String[]) -> setTagTable
    void setAttrStartTable(int,java.lang.String[]) -> setAttrStartTable
    void setAttrValueTable(int,java.lang.String[]) -> setAttrValueTable
    int getWapCode() -> getWapCode
    java.lang.Object getWapExtensionData() -> getWapExtensionData
org.kxml2.wap.WbxmlSerializer -> org.kxml2.wap.WbxmlSerializer:
    java.util.Hashtable stringTable -> stringTable
    java.io.OutputStream out -> out
    java.io.ByteArrayOutputStream buf -> buf
    java.io.ByteArrayOutputStream stringTableBuf -> stringTableBuf
    java.lang.String pending -> pending
    int depth -> depth
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    java.util.Vector attributes -> attributes
    java.util.Hashtable attrStartTable -> attrStartTable
    java.util.Hashtable attrValueTable -> attrValueTable
    java.util.Hashtable tagTable -> tagTable
    int attrPage -> attrPage
    int tagPage -> tagPage
    java.lang.String encoding -> encoding
    boolean headerSent -> headerSent
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void entityRef(java.lang.String) -> entityRef
    int getDepth() -> getDepth
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void endDocument() -> endDocument
    void flush() -> flush
    void checkPending(boolean) -> checkPending
    void processingInstruction(java.lang.String) -> processingInstruction
    void setFeature(java.lang.String,boolean) -> setFeature
    void setOutput(java.io.Writer) -> setOutput
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    void writeStr(java.lang.String) -> writeStr
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    void writeWapExtension(int,java.lang.Object) -> writeWapExtension
    void writeInt(java.io.OutputStream,int) -> writeInt
    void writeStrI(java.io.OutputStream,java.lang.String) -> writeStrI
    void writeStrT(java.lang.String,boolean) -> writeStrT
    int addToStringTable(java.lang.String,boolean) -> addToStringTable
    void setTagTable(int,java.lang.String[]) -> setTagTable
    void setAttrStartTable(int,java.lang.String[]) -> setAttrStartTable
    void setAttrValueTable(int,java.lang.String[]) -> setAttrValueTable
org.kxml2.wap.syncml.SyncML -> org.kxml2.wap.syncml.SyncML:
    java.lang.String[] TAG_TABLE_0 -> TAG_TABLE_0
    java.lang.String[] TAG_TABLE_1 -> TAG_TABLE_1
    java.lang.String[] TAG_TABLE_2_DM -> TAG_TABLE_2_DM
    org.kxml2.wap.WbxmlParser createParser() -> createParser
    org.kxml2.wap.WbxmlSerializer createSerializer() -> createSerializer
    org.kxml2.wap.WbxmlParser createDMParser() -> createDMParser
    org.kxml2.wap.WbxmlSerializer createDMSerializer() -> createDMSerializer
org.kxml2.wap.wml.Wml -> org.kxml2.wap.wml.Wml:
    java.lang.String[] TAG_TABLE -> TAG_TABLE
    java.lang.String[] ATTR_START_TABLE -> ATTR_START_TABLE
    java.lang.String[] ATTR_VALUE_TABLE -> ATTR_VALUE_TABLE
    org.kxml2.wap.WbxmlParser createParser() -> createParser
    org.kxml2.wap.WbxmlSerializer createSerializer() -> createSerializer
org.kxml2.wap.wv.WV -> org.kxml2.wap.wv.WV:
    java.lang.String[] tagTablePage0 -> tagTablePage0
    java.lang.String[] tagTablePage1 -> tagTablePage1
    java.lang.String[] tagTablePage2 -> tagTablePage2
    java.lang.String[] tagTablePage3 -> tagTablePage3
    java.lang.String[] tagTablePage4 -> tagTablePage4
    java.lang.String[] tagTablePage5 -> tagTablePage5
    java.lang.String[] tagTablePage6 -> tagTablePage6
    java.lang.String[] tagTablePage7 -> tagTablePage7
    java.lang.String[] tagTablePage8 -> tagTablePage8
    java.lang.String[] tagTablePage9 -> tagTablePage9
    java.lang.String[] tagTablePageA -> tagTablePageA
    java.lang.String[] attrStartTable -> attrStartTable
    java.lang.String[] attrValueTable -> attrValueTable
    org.kxml2.wap.WbxmlParser createParser() -> createParser
org.xmlpull.v1.XmlPullParser -> org.xmlpull.v1.XmlPullParser:
    java.lang.String NO_NAMESPACE -> NO_NAMESPACE
    int START_DOCUMENT -> START_DOCUMENT
    int END_DOCUMENT -> END_DOCUMENT
    int START_TAG -> START_TAG
    int END_TAG -> END_TAG
    int TEXT -> TEXT
    int CDSECT -> CDSECT
    int ENTITY_REF -> ENTITY_REF
    int IGNORABLE_WHITESPACE -> IGNORABLE_WHITESPACE
    int PROCESSING_INSTRUCTION -> PROCESSING_INSTRUCTION
    int COMMENT -> COMMENT
    int DOCDECL -> DOCDECL
    java.lang.String[] TYPES -> TYPES
    java.lang.String FEATURE_PROCESS_NAMESPACES -> FEATURE_PROCESS_NAMESPACES
    java.lang.String FEATURE_REPORT_NAMESPACE_ATTRIBUTES -> FEATURE_REPORT_NAMESPACE_ATTRIBUTES
    java.lang.String FEATURE_PROCESS_DOCDECL -> FEATURE_PROCESS_DOCDECL
    java.lang.String FEATURE_VALIDATION -> FEATURE_VALIDATION
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setInput(java.io.Reader) -> setInput
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    java.lang.String getInputEncoding() -> getInputEncoding
    void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    char[] getTextCharacters(int[]) -> getTextCharacters
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix() -> getPrefix
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeType(int) -> getAttributeType
    boolean isAttributeDefault(int) -> isAttributeDefault
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    void require(int,java.lang.String,java.lang.String) -> require
    java.lang.String nextText() -> nextText
    int nextTag() -> nextTag
org.xmlpull.v1.XmlPullParserException -> org.xmlpull.v1.XmlPullParserException:
    java.lang.Throwable detail -> detail
    int row -> row
    int column -> column
    java.lang.Throwable getDetail() -> getDetail
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    void printStackTrace() -> printStackTrace
org.xmlpull.v1.XmlPullParserFactory -> org.xmlpull.v1.XmlPullParserFactory:
    java.lang.Class referenceContextClass -> referenceContextClass
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    java.lang.String RESOURCE_NAME -> RESOURCE_NAME
    java.util.Vector parserClasses -> parserClasses
    java.lang.String classNamesLocation -> classNamesLocation
    java.util.Vector serializerClasses -> serializerClasses
    java.util.Hashtable features -> features
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setNamespaceAware(boolean) -> setNamespaceAware
    boolean isNamespaceAware() -> isNamespaceAware
    void setValidating(boolean) -> setValidating
    boolean isValidating() -> isValidating
    org.xmlpull.v1.XmlPullParser newPullParser() -> newPullParser
    org.xmlpull.v1.XmlSerializer newSerializer() -> newSerializer
    org.xmlpull.v1.XmlPullParserFactory newInstance() -> newInstance
    org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class) -> newInstance
org.xmlpull.v1.XmlSerializer -> org.xmlpull.v1.XmlSerializer:
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    void endDocument() -> endDocument
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    int getDepth() -> getDepth
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    void cdsect(java.lang.String) -> cdsect
    void entityRef(java.lang.String) -> entityRef
    void processingInstruction(java.lang.String) -> processingInstruction
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void flush() -> flush
roboguice.RoboGuice -> roboguice.RoboGuice:
    com.google.inject.Stage DEFAULT_STAGE -> DEFAULT_STAGE
    java.util.WeakHashMap injectors -> injectors
    java.util.WeakHashMap resourceListeners -> resourceListeners
    java.util.WeakHashMap viewListeners -> viewListeners
    int modulesResourceId -> modulesResourceId
    com.google.inject.Injector getBaseApplicationInjector(android.app.Application) -> getBaseApplicationInjector
    com.google.inject.Injector setBaseApplicationInjector(android.app.Application,com.google.inject.Stage,com.google.inject.Module[]) -> setBaseApplicationInjector
    void setModulesResourceId(int) -> setModulesResourceId
    com.google.inject.Injector setBaseApplicationInjector(android.app.Application,com.google.inject.Stage) -> setBaseApplicationInjector
    roboguice.inject.RoboInjector getInjector(android.content.Context) -> getInjector
    java.lang.Object injectMembers(android.content.Context,java.lang.Object) -> injectMembers
    roboguice.config.DefaultRoboModule newDefaultRoboModule(android.app.Application) -> newDefaultRoboModule
    roboguice.inject.ResourceListener getResourceListener(android.app.Application) -> getResourceListener
    roboguice.inject.ViewListener getViewListener(android.app.Application) -> getViewListener
    void destroyInjector(android.content.Context) -> destroyInjector
roboguice.RoboGuice$1 -> roboguice.RoboGuice$1:
    android.app.Application val$application -> val$application
    java.lang.Void visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
roboguice.RoboGuice$util -> roboguice.RoboGuice$util:
    void reset() -> reset
roboguice.activity.RoboAccountAuthenticatorActivity -> roboguice.activity.RoboAccountAuthenticatorActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboActivity -> roboguice.activity.RoboActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboActivityGroup -> roboguice.activity.RoboActivityGroup:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboExpandableListActivity -> roboguice.activity.RoboExpandableListActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboFragmentActivity -> roboguice.activity.RoboFragmentActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboLauncherActivity -> roboguice.activity.RoboLauncherActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboListActivity -> roboguice.activity.RoboListActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboMapActivity -> roboguice.activity.RoboMapActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboPreferenceActivity -> roboguice.activity.RoboPreferenceActivity:
    roboguice.event.EventManager eventManager -> eventManager
    roboguice.inject.PreferenceListener preferenceListener -> preferenceListener
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void setPreferenceScreen(android.preference.PreferenceScreen) -> setPreferenceScreen
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboSplashActivity -> roboguice.activity.RoboSplashActivity:
    int minDisplayMs -> minDisplayMs
    void onCreate(android.os.Bundle) -> onCreate
    void doStuffInBackground(android.app.Application) -> doStuffInBackground
    void andFinishThisOne() -> andFinishThisOne
    void startNextActivity() -> startNextActivity
roboguice.activity.RoboSplashActivity$1 -> roboguice.activity.RoboSplashActivity$1:
    long val$start -> val$start
    roboguice.activity.RoboSplashActivity this$0 -> this$0
    void run() -> run
roboguice.activity.RoboTabActivity -> roboguice.activity.RoboTabActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onContentChanged() -> onContentChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.event.OnActivityResultEvent -> roboguice.activity.event.OnActivityResultEvent:
    int requestCode -> requestCode
    int resultCode -> resultCode
    android.content.Intent data -> data
    int getRequestCode() -> getRequestCode
    int getResultCode() -> getResultCode
    android.content.Intent getData() -> getData
roboguice.activity.event.OnConfigurationChangedEvent -> roboguice.activity.event.OnConfigurationChangedEvent:
    android.content.res.Configuration oldConfig -> oldConfig
    android.content.res.Configuration newConfig -> newConfig
    android.content.res.Configuration getOldConfig() -> getOldConfig
    android.content.res.Configuration getNewConfig() -> getNewConfig
roboguice.activity.event.OnContentChangedEvent -> roboguice.activity.event.OnContentChangedEvent:
roboguice.activity.event.OnCreateEvent -> roboguice.activity.event.OnCreateEvent:
    android.os.Bundle savedInstanceState -> savedInstanceState
    android.os.Bundle getSavedInstanceState() -> getSavedInstanceState
roboguice.activity.event.OnDestroyEvent -> roboguice.activity.event.OnDestroyEvent:
roboguice.activity.event.OnNewIntentEvent -> roboguice.activity.event.OnNewIntentEvent:
roboguice.activity.event.OnPauseEvent -> roboguice.activity.event.OnPauseEvent:
roboguice.activity.event.OnRestartEvent -> roboguice.activity.event.OnRestartEvent:
roboguice.activity.event.OnResumeEvent -> roboguice.activity.event.OnResumeEvent:
roboguice.activity.event.OnStartEvent -> roboguice.activity.event.OnStartEvent:
roboguice.activity.event.OnStopEvent -> roboguice.activity.event.OnStopEvent:
roboguice.adapter.IterableAdapter -> roboguice.adapter.IterableAdapter:
    java.util.List toList(java.lang.Iterable) -> toList
roboguice.config.DefaultRoboModule -> roboguice.config.DefaultRoboModule:
    java.lang.Class fragmentManagerClass -> fragmentManagerClass
    java.lang.Class accountManagerClass -> accountManagerClass
    android.app.Application application -> application
    roboguice.inject.ContextScope contextScope -> contextScope
    roboguice.inject.ResourceListener resourceListener -> resourceListener
    roboguice.inject.ViewListener viewListener -> viewListener
    void configure() -> configure
roboguice.config.DefaultRoboModule$1 -> roboguice.config.DefaultRoboModule$1:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.config.DefaultRoboModule$2 -> roboguice.config.DefaultRoboModule$2:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.config.DefaultRoboModule$3 -> roboguice.config.DefaultRoboModule$3:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.config.DefaultRoboModule$4 -> roboguice.config.DefaultRoboModule$4:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.config.DefaultRoboModule$5 -> roboguice.config.DefaultRoboModule$5:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.content.RoboAsyncTaskLoader -> roboguice.content.RoboAsyncTaskLoader:
roboguice.content.RoboContentProvider -> roboguice.content.RoboContentProvider:
    boolean onCreate() -> onCreate
roboguice.content.RoboLoader -> roboguice.content.RoboLoader:
roboguice.event.EventListener -> roboguice.event.EventListener:
    void onEvent(java.lang.Object) -> onEvent
roboguice.event.EventManager -> roboguice.event.EventManager:
    android.content.Context context -> context
    java.util.Map registrations -> registrations
    void registerObserver(java.lang.Class,roboguice.event.EventListener) -> registerObserver
    void registerObserver(java.lang.Object,java.lang.reflect.Method,java.lang.Class) -> registerObserver
    void unregisterObserver(java.lang.Class,roboguice.event.EventListener) -> unregisterObserver
    void unregisterObserver(java.lang.Object,java.lang.Class) -> unregisterObserver
    void fire(java.lang.Object) -> fire
    void destroy() -> destroy
roboguice.event.EventThread -> roboguice.event.EventThread:
    roboguice.event.EventThread CURRENT -> CURRENT
    roboguice.event.EventThread UI -> UI
    roboguice.event.EventThread BACKGROUND -> BACKGROUND
    roboguice.event.EventThread[] $VALUES -> $VALUES
    roboguice.event.EventThread[] values() -> values
    roboguice.event.EventThread valueOf(java.lang.String) -> valueOf
roboguice.event.Observes -> roboguice.event.Observes:
    roboguice.event.EventThread value() -> value
roboguice.event.ObservesTypeListener -> roboguice.event.ObservesTypeListener:
    com.google.inject.Provider eventManagerProvider -> eventManagerProvider
    roboguice.event.eventListener.factory.EventListenerThreadingDecorator observerThreadingDecorator -> observerThreadingDecorator
    void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
    void findContextObserver(java.lang.reflect.Method,com.google.inject.spi.TypeEncounter) -> findContextObserver
    void registerContextObserver(com.google.inject.spi.TypeEncounter,java.lang.reflect.Method,java.lang.Class,roboguice.event.EventThread) -> registerContextObserver
    void checkMethodParameters(java.lang.reflect.Method) -> checkMethodParameters
roboguice.event.ObservesTypeListener$ContextObserverMethodInjector -> roboguice.event.ObservesTypeListener$ContextObserverMethodInjector:
    roboguice.event.eventListener.factory.EventListenerThreadingDecorator observerThreadingDecorator -> observerThreadingDecorator
    com.google.inject.Provider eventManagerProvider -> eventManagerProvider
    java.lang.reflect.Method method -> method
    java.lang.Class event -> event
    roboguice.event.EventThread threadType -> threadType
    void afterInjection(java.lang.Object) -> afterInjection
roboguice.event.eventListener.AsynchronousEventListenerDecorator -> roboguice.event.eventListener.AsynchronousEventListenerDecorator:
    roboguice.event.EventListener eventListener -> eventListener
    android.os.Handler handler -> handler
    void onEvent(java.lang.Object) -> onEvent
roboguice.event.eventListener.EventListenerRunnable -> roboguice.event.eventListener.EventListenerRunnable:
    java.lang.Object event -> event
    roboguice.event.EventListener eventListener -> eventListener
    void run() -> run
roboguice.event.eventListener.ObserverMethodListener -> roboguice.event.eventListener.ObserverMethodListener:
    java.lang.String descriptor -> descriptor
    java.lang.reflect.Method method -> method
    java.lang.Object instance -> instance
    void onEvent(java.lang.Object) -> onEvent
    java.lang.Object getInstance() -> getInstance
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
roboguice.event.eventListener.RunnableAsyncTaskAdaptor -> roboguice.event.eventListener.RunnableAsyncTaskAdaptor:
    java.lang.Runnable runnable -> runnable
    java.lang.Void call() -> call
    java.lang.Object call() -> call
roboguice.event.eventListener.UIThreadEventListenerDecorator -> roboguice.event.eventListener.UIThreadEventListenerDecorator:
    roboguice.event.EventListener eventListener -> eventListener
    android.os.Handler handler -> handler
    void onEvent(java.lang.Object) -> onEvent
roboguice.event.eventListener.factory.EventListenerThreadingDecorator -> roboguice.event.eventListener.factory.EventListenerThreadingDecorator:
    com.google.inject.Provider handlerProvider -> handlerProvider
    roboguice.event.EventListener decorate(roboguice.event.EventThread,roboguice.event.EventListener) -> decorate
roboguice.event.eventListener.factory.EventListenerThreadingDecorator$1 -> roboguice.event.eventListener.factory.EventListenerThreadingDecorator$1:
    int[] $SwitchMap$roboguice$event$EventThread -> $SwitchMap$roboguice$event$EventThread
roboguice.event.eventListener.javaassist.RuntimeSupport -> roboguice.event.eventListener.javaassist.RuntimeSupport:
    java.lang.String makeDescriptor(java.lang.reflect.Method) -> makeDescriptor
    java.lang.String makeDescriptor(java.lang.Class[],java.lang.Class) -> makeDescriptor
    void makeDesc(java.lang.StringBuffer,java.lang.Class) -> makeDesc
roboguice.event.javaassist.RuntimeSupport -> roboguice.event.javaassist.RuntimeSupport:
    java.lang.String makeDescriptor(java.lang.reflect.Method) -> makeDescriptor
    java.lang.String makeDescriptor(java.lang.Class[],java.lang.Class) -> makeDescriptor
    void makeDesc(java.lang.StringBuffer,java.lang.Class) -> makeDesc
roboguice.fragment.RoboDialogFragment -> roboguice.fragment.RoboDialogFragment:
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
roboguice.fragment.RoboFragment -> roboguice.fragment.RoboFragment:
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
roboguice.fragment.RoboListFragment -> roboguice.fragment.RoboListFragment:
    void onCreate(android.os.Bundle) -> onCreate
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
roboguice.inject.AccountManagerProvider -> roboguice.inject.AccountManagerProvider:
    android.content.Context context -> context
    android.accounts.AccountManager get() -> get
    java.lang.Object get() -> get
roboguice.inject.AssetManagerProvider -> roboguice.inject.AssetManagerProvider:
    android.content.Context context -> context
    android.content.res.AssetManager get() -> get
    java.lang.Object get() -> get
roboguice.inject.ContentResolverProvider -> roboguice.inject.ContentResolverProvider:
    android.content.Context context -> context
    android.content.ContentResolver get() -> get
    java.lang.Object get() -> get
roboguice.inject.ContentView -> roboguice.inject.ContentView:
    int value() -> value
roboguice.inject.ContentViewListener -> roboguice.inject.ContentViewListener:
    android.app.Activity activity -> activity
    void optionallySetContentView(roboguice.activity.event.OnCreateEvent) -> optionallySetContentView
roboguice.inject.ContextScope -> roboguice.inject.ContextScope:
    java.lang.ThreadLocal contextThreadLocal -> contextThreadLocal
    java.util.Map applicationScopedObjects -> applicationScopedObjects
    android.app.Application application -> application
    void enter(android.content.Context) -> enter
    void exit(android.content.Context) -> exit
    com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider) -> scope
    java.util.Stack getContextStack() -> getContextStack
    java.util.Map getScopedObjectMap(android.content.Context) -> getScopedObjectMap
roboguice.inject.ContextScope$1 -> roboguice.inject.ContextScope$1:
    com.google.inject.Key val$key -> val$key
    com.google.inject.Provider val$unscoped -> val$unscoped
    roboguice.inject.ContextScope this$0 -> this$0
    java.lang.Object get() -> get
roboguice.inject.ContextScopedProvider -> roboguice.inject.ContextScopedProvider:
    roboguice.inject.ContextScope scope -> scope
    com.google.inject.Provider provider -> provider
    java.lang.Object get(android.content.Context) -> get
roboguice.inject.ContextScopedRoboInjector -> roboguice.inject.ContextScopedRoboInjector:
    com.google.inject.Injector delegate -> delegate
    android.content.Context context -> context
    roboguice.inject.ContextScope scope -> scope
    roboguice.inject.ViewListener viewListener -> viewListener
    com.google.inject.Injector createChildInjector(java.lang.Iterable) -> createChildInjector
    com.google.inject.Injector createChildInjector(com.google.inject.Module[]) -> createChildInjector
    java.util.List findBindingsByType(com.google.inject.TypeLiteral) -> findBindingsByType
    java.util.Map getAllBindings() -> getAllBindings
    com.google.inject.Binding getBinding(com.google.inject.Key) -> getBinding
    com.google.inject.Binding getBinding(java.lang.Class) -> getBinding
    java.util.Map getBindings() -> getBindings
    com.google.inject.Binding getExistingBinding(com.google.inject.Key) -> getExistingBinding
    java.lang.Object getInstance(com.google.inject.Key) -> getInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.Injector getParent() -> getParent
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    java.util.Map getScopeBindings() -> getScopeBindings
    java.util.Set getTypeConverterBindings() -> getTypeConverterBindings
    void injectMembers(java.lang.Object) -> injectMembers
    void injectMembersWithoutViews(java.lang.Object) -> injectMembersWithoutViews
    void injectViewMembers(android.app.Activity) -> injectViewMembers
    void injectViewMembers(android.support.v4.app.Fragment) -> injectViewMembers
roboguice.inject.ContextScopedSystemServiceProvider -> roboguice.inject.ContextScopedSystemServiceProvider:
    com.google.inject.Provider contextProvider -> contextProvider
    java.lang.String serviceName -> serviceName
    java.lang.Object get() -> get
roboguice.inject.ContextSingleton -> roboguice.inject.ContextSingleton:
roboguice.inject.ExtraConverter -> roboguice.inject.ExtraConverter:
    java.lang.Object convert(java.lang.Object) -> convert
roboguice.inject.ExtrasListener -> roboguice.inject.ExtrasListener:
    com.google.inject.Provider contextProvider -> contextProvider
    void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
roboguice.inject.ExtrasListener$ExtrasMembersInjector -> roboguice.inject.ExtrasListener$ExtrasMembersInjector:
    java.lang.reflect.Field field -> field
    com.google.inject.Provider contextProvider -> contextProvider
    roboguice.inject.InjectExtra annotation -> annotation
    void injectMembers(java.lang.Object) -> injectMembers
    java.lang.Object convert(java.lang.reflect.Field,java.lang.Object,com.google.inject.Injector) -> convert
roboguice.inject.FragmentManagerProvider -> roboguice.inject.FragmentManagerProvider:
    android.app.Activity activity -> activity
    android.support.v4.app.FragmentManager get() -> get
    java.lang.Object get() -> get
roboguice.inject.HandlerProvider -> roboguice.inject.HandlerProvider:
    android.os.Handler get() -> get
    java.lang.Object get() -> get
roboguice.inject.InjectExtra -> roboguice.inject.InjectExtra:
    java.lang.String value() -> value
    boolean optional() -> optional
roboguice.inject.InjectFragment -> roboguice.inject.InjectFragment:
    int value() -> value
    java.lang.String tag() -> tag
roboguice.inject.InjectPreference -> roboguice.inject.InjectPreference:
    java.lang.String value() -> value
roboguice.inject.InjectResource -> roboguice.inject.InjectResource:
    int value() -> value
    java.lang.String name() -> name
roboguice.inject.InjectView -> roboguice.inject.InjectView:
    int value() -> value
    java.lang.String tag() -> tag
roboguice.inject.NullProvider -> roboguice.inject.NullProvider:
    java.lang.Object get() -> get
roboguice.inject.Nullable -> roboguice.inject.Nullable:
    boolean notNullable(java.lang.reflect.Field) -> notNullable
    boolean isNullable(java.lang.reflect.Field) -> isNullable
roboguice.inject.PreferenceListener -> roboguice.inject.PreferenceListener:
    java.util.ArrayList preferencesForInjection -> preferencesForInjection
    com.google.inject.Provider contextProvider -> contextProvider
    android.app.Application application -> application
    roboguice.inject.ContextScope scope -> scope
    void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
    void registerPreferenceForInjection(roboguice.inject.PreferenceListener$PreferenceMembersInjector) -> registerPreferenceForInjection
    void injectPreferenceViews() -> injectPreferenceViews
roboguice.inject.PreferenceListener$PreferenceMembersInjector -> roboguice.inject.PreferenceListener$PreferenceMembersInjector:
    java.lang.reflect.Field field -> field
    com.google.inject.Provider contextProvider -> contextProvider
    roboguice.inject.InjectPreference annotation -> annotation
    roboguice.inject.ContextScope scope -> scope
    java.lang.ref.WeakReference instanceRef -> instanceRef
    roboguice.inject.PreferenceListener this$0 -> this$0
    void injectMembers(java.lang.Object) -> injectMembers
    void reallyInjectMembers() -> reallyInjectMembers
roboguice.inject.ResourceFactory -> roboguice.inject.ResourceFactory:
    java.lang.Object get(int) -> get
roboguice.inject.ResourceListener -> roboguice.inject.ResourceListener:
    android.app.Application application -> application
    void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
    void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
roboguice.inject.ResourceListener$ResourceMembersInjector -> roboguice.inject.ResourceListener$ResourceMembersInjector:
    java.lang.reflect.Field field -> field
    android.app.Application application -> application
    roboguice.inject.InjectResource annotation -> annotation
    void injectMembers(java.lang.Object) -> injectMembers
    int getId(android.content.res.Resources,roboguice.inject.InjectResource) -> getId
roboguice.inject.ResourcesProvider -> roboguice.inject.ResourcesProvider:
    android.content.res.Resources resources -> resources
    android.content.res.Resources get() -> get
    java.lang.Object get() -> get
roboguice.inject.RoboApplicationProvider -> roboguice.inject.RoboApplicationProvider:
    android.app.Application application -> application
    android.app.Application get() -> get
    java.lang.Object get() -> get
roboguice.inject.RoboInjector -> roboguice.inject.RoboInjector:
    void injectViewMembers(android.app.Activity) -> injectViewMembers
    void injectViewMembers(android.support.v4.app.Fragment) -> injectViewMembers
    void injectMembersWithoutViews(java.lang.Object) -> injectMembersWithoutViews
roboguice.inject.SharedPreferencesName -> roboguice.inject.SharedPreferencesName:
roboguice.inject.SharedPreferencesProvider -> roboguice.inject.SharedPreferencesProvider:
    java.lang.String ROBOGUICE_1_DEFAULT_FILENAME -> ROBOGUICE_1_DEFAULT_FILENAME
    java.lang.String preferencesName -> preferencesName
    android.app.Application application -> application
    android.content.SharedPreferences get() -> get
    java.lang.Object get() -> get
roboguice.inject.SharedPreferencesProvider$PreferencesNameHolder -> roboguice.inject.SharedPreferencesProvider$PreferencesNameHolder:
    java.lang.String value -> value
roboguice.inject.StringResourceFactory -> roboguice.inject.StringResourceFactory:
    android.content.res.Resources resources -> resources
    java.lang.String get(int) -> get
    java.lang.Object get(int) -> get
roboguice.inject.SystemServiceProvider -> roboguice.inject.SystemServiceProvider:
    android.app.Application application -> application
    java.lang.String serviceName -> serviceName
    java.lang.Object get() -> get
roboguice.inject.ViewListener -> roboguice.inject.ViewListener:
    java.lang.Class fragmentClass -> fragmentClass
    java.lang.Class fragmentManagerClass -> fragmentManagerClass
    java.lang.reflect.Method fragmentGetViewMethod -> fragmentGetViewMethod
    java.lang.reflect.Method fragmentFindFragmentByIdMethod -> fragmentFindFragmentByIdMethod
    java.lang.reflect.Method fragmentFindFragmentByTagMethod -> fragmentFindFragmentByTagMethod
    void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
roboguice.inject.ViewListener$ViewMembersInjector -> roboguice.inject.ViewListener$ViewMembersInjector:
    java.util.WeakHashMap viewMembersInjectors -> viewMembersInjectors
    java.lang.reflect.Field field -> field
    java.lang.annotation.Annotation annotation -> annotation
    java.lang.ref.WeakReference instanceRef -> instanceRef
    com.google.inject.Provider fragmentManagerProvider -> fragmentManagerProvider
    com.google.inject.Provider activityProvider -> activityProvider
    void injectMembers(java.lang.Object) -> injectMembers
    void reallyInjectMembers(java.lang.Object) -> reallyInjectMembers
    void reallyInjectMemberViews(java.lang.Object) -> reallyInjectMemberViews
    void reallyInjectMemberFragments(java.lang.Object) -> reallyInjectMemberFragments
    void injectViews(java.lang.Object) -> injectViews
roboguice.receiver.RoboBroadcastReceiver -> roboguice.receiver.RoboBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void handleReceive(android.content.Context,android.content.Intent) -> handleReceive
roboguice.service.RoboIntentService -> roboguice.service.RoboIntentService:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.service.RoboService -> roboguice.service.RoboService:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.service.event.OnConfigurationChangedEvent -> roboguice.service.event.OnConfigurationChangedEvent:
    android.content.res.Configuration oldConfig -> oldConfig
    android.content.res.Configuration newConfig -> newConfig
    android.content.res.Configuration getOldConfig() -> getOldConfig
    android.content.res.Configuration getNewConfig() -> getNewConfig
roboguice.service.event.OnCreateEvent -> roboguice.service.event.OnCreateEvent:
roboguice.service.event.OnDestroyEvent -> roboguice.service.event.OnDestroyEvent:
roboguice.service.event.OnStartEvent -> roboguice.service.event.OnStartEvent:
roboguice.test.RobolectricRoboTestRunner -> roboguice.test.RobolectricRoboTestRunner:
    void bindShadowClasses() -> bindShadowClasses
roboguice.test.shadow.ShadowFragment -> roboguice.test.shadow.ShadowFragment:
    android.support.v4.app.FragmentActivity activity -> activity
    android.view.View view -> view
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.view.View getView() -> getView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onAttach(android.app.Activity) -> onAttach
roboguice.test.shadow.ShadowFragmentActivity -> roboguice.test.shadow.ShadowFragmentActivity:
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
roboguice.test.shadow.ShadowFragmentActivity$1 -> roboguice.test.shadow.ShadowFragmentActivity$1:
    roboguice.test.shadow.ShadowFragmentActivity this$0 -> this$0
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
roboguice.test.shadow.ShadowFragmentActivity$1$1 -> roboguice.test.shadow.ShadowFragmentActivity$1$1:
    roboguice.test.shadow.ShadowFragmentActivity$1 this$1 -> this$1
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
roboguice.util.Ln -> roboguice.util.Ln:
    roboguice.util.Ln$BaseConfig config -> config
    roboguice.util.Ln$Print print -> print
    int v(java.lang.Throwable) -> v
    int v(java.lang.Object,java.lang.Object[]) -> v
    int v(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> v
    int d(java.lang.Throwable) -> d
    int d(java.lang.Object,java.lang.Object[]) -> d
    int d(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> d
    int i(java.lang.Throwable) -> i
    int i(java.lang.Object,java.lang.Object[]) -> i
    int i(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> i
    int w(java.lang.Throwable) -> w
    int w(java.lang.Object,java.lang.Object[]) -> w
    int w(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> w
    int e(java.lang.Throwable) -> e
    int e(java.lang.Object,java.lang.Object[]) -> e
    int e(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> e
    boolean isDebugEnabled() -> isDebugEnabled
    boolean isVerboseEnabled() -> isVerboseEnabled
    roboguice.util.Ln$Config getConfig() -> getConfig
    java.lang.String logLevelToString(int) -> logLevelToString
roboguice.util.Ln$BaseConfig -> roboguice.util.Ln$BaseConfig:
    int minimumLogLevel -> minimumLogLevel
    java.lang.String packageName -> packageName
    java.lang.String scope -> scope
    int getLoggingLevel() -> getLoggingLevel
    void setLoggingLevel(int) -> setLoggingLevel
roboguice.util.Ln$Config -> roboguice.util.Ln$Config:
    int getLoggingLevel() -> getLoggingLevel
    void setLoggingLevel(int) -> setLoggingLevel
roboguice.util.Ln$Print -> roboguice.util.Ln$Print:
    int println(int,java.lang.String) -> println
    java.lang.String processMessage(java.lang.String) -> processMessage
    java.lang.String getScope(int) -> getScope
roboguice.util.RoboAsyncTask -> roboguice.util.RoboAsyncTask:
    android.content.Context context -> context
    android.content.Context getContext() -> getContext
roboguice.util.RoboContext -> roboguice.util.RoboContext:
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.util.SafeAsyncTask -> roboguice.util.SafeAsyncTask:
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    java.util.concurrent.Executor DEFAULT_EXECUTOR -> DEFAULT_EXECUTOR
    android.os.Handler handler -> handler
    java.util.concurrent.Executor executor -> executor
    java.lang.StackTraceElement[] launchLocation -> launchLocation
    java.util.concurrent.FutureTask future -> future
    java.util.concurrent.FutureTask future() -> future
    roboguice.util.SafeAsyncTask executor(java.util.concurrent.Executor) -> executor
    java.util.concurrent.Executor executor() -> executor
    roboguice.util.SafeAsyncTask handler(android.os.Handler) -> handler
    android.os.Handler handler() -> handler
    void execute() -> execute
    void execute(java.lang.StackTraceElement[]) -> execute
    boolean cancel(boolean) -> cancel
    void onPreExecute() -> onPreExecute
    void onSuccess(java.lang.Object) -> onSuccess
    void onInterrupted(java.lang.Exception) -> onInterrupted
    void onException(java.lang.Exception) -> onException
    void onThrowable(java.lang.Throwable) -> onThrowable
    void onFinally() -> onFinally
    roboguice.util.SafeAsyncTask$Task newTask() -> newTask
roboguice.util.SafeAsyncTask$Task -> roboguice.util.SafeAsyncTask$Task:
    roboguice.util.SafeAsyncTask parent -> parent
    android.os.Handler handler -> handler
    java.lang.Void call() -> call
    void doPreExecute() -> doPreExecute
    java.lang.Object doCall() -> doCall
    void doSuccess(java.lang.Object) -> doSuccess
    void doException(java.lang.Exception) -> doException
    void doThrowable(java.lang.Throwable) -> doThrowable
    void doFinally() -> doFinally
    void postToUiThreadAndWait(java.util.concurrent.Callable) -> postToUiThreadAndWait
    java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$1 -> roboguice.util.SafeAsyncTask$Task$1:
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$2 -> roboguice.util.SafeAsyncTask$Task$2:
    java.lang.Object val$r -> val$r
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$3 -> roboguice.util.SafeAsyncTask$Task$3:
    java.lang.Exception val$e -> val$e
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$4 -> roboguice.util.SafeAsyncTask$Task$4:
    java.lang.Throwable val$e -> val$e
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$5 -> roboguice.util.SafeAsyncTask$Task$5:
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$6 -> roboguice.util.SafeAsyncTask$Task$6:
    java.util.concurrent.Callable val$c -> val$c
    java.lang.Exception[] val$exceptions -> val$exceptions
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    void run() -> run
roboguice.util.Strings -> roboguice.util.Strings:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.lang.String joinAnd(java.lang.String,java.lang.String,java.util.Collection) -> joinAnd
    java.lang.String joinAnd(java.lang.String,java.lang.String,java.lang.Object[]) -> joinAnd
    java.lang.String join(java.lang.String,java.util.Collection) -> join
    java.lang.String join(java.lang.String,java.lang.Object[]) -> join
    java.lang.String toString(java.io.InputStream) -> toString
    java.lang.String toString(java.io.Reader) -> toString
    int copy(java.io.Reader,java.io.Writer) -> copy
    long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    boolean isEmpty(java.lang.Object) -> isEmpty
    boolean notEmpty(java.lang.Object) -> notEmpty
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String capitalize(java.lang.String) -> capitalize
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equalsIgnoreCase(java.lang.Object,java.lang.Object) -> equalsIgnoreCase
    java.lang.String[] chunk(java.lang.String,int) -> chunk
    java.lang.String namedFormat(java.lang.String,java.util.Map) -> namedFormat
    java.lang.String namedFormat(java.lang.String,java.lang.Object[]) -> namedFormat
vi.com.gdi.bgl.android.java.EnvDrawText -> a.a.a.a.a.a.a:
    java.lang.String a -> i
    android.graphics.Paint pt -> a
    int iWordWidthMax -> b
    int iWordHightMax -> c
    boolean bBmpChange -> d
    android.graphics.Bitmap bmp -> e
    android.graphics.Canvas canvasTemp -> f
    int[] buffer -> g
    android.util.SparseArray fontCache -> h
    void registFontCache(int,android.graphics.Typeface) -> a
    void removeFontCache(int) -> a
vi.com.gdi.bgl.android.java.a -> a.a.a.a.a.a.b:
    android.graphics.Typeface a -> a
    int b -> b
